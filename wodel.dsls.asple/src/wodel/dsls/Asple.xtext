// automatically generated by Xtext
grammar wodel.dsls.ASPLE with org.eclipse.xtext.common.Terminals

import "platform:/resource/wodel.models/model/ASPLE.ecore" 
//import "http://asple/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program returns Program:
	{Program}
	'begin'
		( declarations+=Declaration ';' )*
		( statements+=Statement )*
	'end'
;

Declaration returns Declaration:
	{Declaration}
	(ref ?= 'ref')? (mode = Mode)? identifiers+=Identifier (',' identifiers += Identifier)*;
	
enum Mode returns Mode:
	int = 'int' | bool = 'bool' | double = 'double';

EString returns ecore::EString:
	STRING | ID;
	
EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
'true' | 'false';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

Identifier returns Identifier:
	{Identifier}
	name=EString
;

Literal returns Literal:
	Integer|Boolean|Double
;

Integer returns Integer:
	{Integer}
	value=EInt
;

Boolean returns Boolean:
	 {Boolean}
	 value=EBoolean
;

Double returns Double:
	{Double}
	value=EDouble
;


Statement returns Statement:
	Assignment | Conditional | Loop | Transput;

Assignment returns Assignment:
	var=[Identifier|ID] '=' value=Expression ';';
	
Conditional returns Conditional:
	{Conditional}
	'if' '(' expression=Expression ')' '{' ( if+=Statement )* '}'
	('else' '{' ( else+=Statement )* '}')?;
	
Loop returns Loop:
	{Loop}
	'while' '(' expression=Expression ')' '{' ( statements+=Statement )* '}' |
	'repeat' '{' ( statements+=Statement )* '}' 'until' '(' expression=Expression ')'
;

Transput returns Transput:
	{Transput}
	'input' var=[Identifier|ID]
	'output' expression=Expression
;

Expression returns Expression:
	Primary | BinaryOperator
;

Primary returns Primary:
	Identifier|Literal
;

BinaryOperator returns BinaryOperator:
	{BinaryOperator}
	left=Primary operator=('+' | '-' | '*' | '/' | '%' | '==' | '!=' | '>' | '<' ) right=Expression
;

