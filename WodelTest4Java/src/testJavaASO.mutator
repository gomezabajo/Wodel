generate exhaustive mutants
in "data/out/"
from "data/model/"
metamodel "/WodelTest4Java/data/model/java.ecore"
description "Assignment operator replacement"

with blocks {
	asrsp "Addition assignment" {
		modify one Assignment where {operator in ['-=', '*=', '/=', '%=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '+='}
	}
	asrsm "Subtraction assignment" {
		modify one Assignment where {operator in ['+=', '*=', '/=', '%=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '-='}
	}
	asrst "Times assignment" {
		modify one Assignment where {operator in ['+=', '-=', '/=', '%=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '*='}
	}
	asrsd "Division assignment" {
		modify one Assignment where {operator in ['+=', '-=', '*=', '%=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '/='}
	}
	asrsr "Modulus assignment" {
		modify one Assignment where {operator in ['+=', '-=', '*=', '/=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '%='}
	}
	asrsa "And assignment" {
		modify one Assignment where {operator in ['|=', '^=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '&='}
	}
	asrso "Or assignment" {
		modify one Assignment where {operator in ['&=', '^=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '|='}
	}
	asrsx "Xor assignment" {
		modify one Assignment where {operator in ['&=', '|=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '^='}
	}
	asrssr "Right shift assignment" {
		modify one Assignment where {operator in ['>>>=', '<<=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '>>='}
	}
	asrssrr "Unsigned right shift assignment" {
		modify one Assignment where {operator in ['>>=', '<<=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '>>>='}
	}
	asrssl "Left shift assignment" {
		modify one Assignment where {operator in ['>>=', '>>>=']
			and leftHandSide <> null and rightHandSide <> null
		}
		with {operator = '<<='}
	}
}
