/*
 * generated by Xtext 2.38.0
 */
package wodel.dsls.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class WodelGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MutatorEnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.MutatorEnvironment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLoadAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLoadLoadParserRuleCall_0_0 = (RuleCall)cLoadAssignment_0.eContents().get(0);
		private final Assignment cDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDefinitionParserRuleCall_1_0 = (RuleCall)cDefinitionAssignment_1.eContents().get(0);
		private final Keyword cWithKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cBlocksKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cBlocksAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cBlocksBlockParserRuleCall_3_0_2_0 = (RuleCall)cBlocksAssignment_3_0_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_3 = (Keyword)cGroup_3_0.eContents().get(3);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cCommandsKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cCommandsAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cCommandsMutatorParserRuleCall_3_1_2_0 = (RuleCall)cCommandsAssignment_3_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cConstraintsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cConstraintsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_4_2_0 = (RuleCall)cConstraintsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//MutatorEnvironment returns MutatorEnvironment:
		//    (load+=Load)*
		//    definition=Definition
		//    'with'
		//    ('blocks' '{' blocks+=Block* '}'
		//        | 'commands' '{' commands+=Mutator* '}')
		//    ('constraints' '{' constraints+= Constraint* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(load+=Load)*
		//definition=Definition
		//'with'
		//('blocks' '{' blocks+=Block* '}'
		//    | 'commands' '{' commands+=Mutator* '}')
		//('constraints' '{' constraints+= Constraint* '}')?
		public Group getGroup() { return cGroup; }
		
		//(load+=Load)*
		public Assignment getLoadAssignment_0() { return cLoadAssignment_0; }
		
		//Load
		public RuleCall getLoadLoadParserRuleCall_0_0() { return cLoadLoadParserRuleCall_0_0; }
		
		//definition=Definition
		public Assignment getDefinitionAssignment_1() { return cDefinitionAssignment_1; }
		
		//Definition
		public RuleCall getDefinitionDefinitionParserRuleCall_1_0() { return cDefinitionDefinitionParserRuleCall_1_0; }
		
		//'with'
		public Keyword getWithKeyword_2() { return cWithKeyword_2; }
		
		//('blocks' '{' blocks+=Block* '}'
		//    | 'commands' '{' commands+=Mutator* '}')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'blocks' '{' blocks+=Block* '}'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'blocks'
		public Keyword getBlocksKeyword_3_0_0() { return cBlocksKeyword_3_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0_1() { return cLeftCurlyBracketKeyword_3_0_1; }
		
		//blocks+=Block*
		public Assignment getBlocksAssignment_3_0_2() { return cBlocksAssignment_3_0_2; }
		
		//Block
		public RuleCall getBlocksBlockParserRuleCall_3_0_2_0() { return cBlocksBlockParserRuleCall_3_0_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_0_3() { return cRightCurlyBracketKeyword_3_0_3; }
		
		//'commands' '{' commands+=Mutator* '}'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'commands'
		public Keyword getCommandsKeyword_3_1_0() { return cCommandsKeyword_3_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_1() { return cLeftCurlyBracketKeyword_3_1_1; }
		
		//commands+=Mutator*
		public Assignment getCommandsAssignment_3_1_2() { return cCommandsAssignment_3_1_2; }
		
		//Mutator
		public RuleCall getCommandsMutatorParserRuleCall_3_1_2_0() { return cCommandsMutatorParserRuleCall_3_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_3() { return cRightCurlyBracketKeyword_3_1_3; }
		
		//('constraints' '{' constraints+= Constraint* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_4_0() { return cConstraintsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//constraints+= Constraint*
		public Assignment getConstraintsAssignment_4_2() { return cConstraintsAssignment_4_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_4_2_0() { return cConstraintsConstraintParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Definition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLibraryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProgramParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Definition returns Definition:
		//    Library | Program;
		@Override public ParserRule getRule() { return rule; }
		
		//Library | Program
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Library
		public RuleCall getLibraryParserRuleCall_0() { return cLibraryParserRuleCall_0; }
		
		//Program
		public RuleCall getProgramParserRuleCall_1() { return cProgramParserRuleCall_1; }
	}
	public class LibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Library");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLibraryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLibraryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMetamodelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMetamodelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMetamodelEStringParserRuleCall_4_0 = (RuleCall)cMetamodelAssignment_4.eContents().get(0);
		
		//Library returns Library:
		//    {Library}
		//    'library' 'for' 'metamodel' metamodel=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Library}
		//'library' 'for' 'metamodel' metamodel=EString
		public Group getGroup() { return cGroup; }
		
		//{Library}
		public Action getLibraryAction_0() { return cLibraryAction_0; }
		
		//'library'
		public Keyword getLibraryKeyword_1() { return cLibraryKeyword_1; }
		
		//'for'
		public Keyword getForKeyword_2() { return cForKeyword_2; }
		
		//'metamodel'
		public Keyword getMetamodelKeyword_3() { return cMetamodelKeyword_3; }
		
		//metamodel=EString
		public Assignment getMetamodelAssignment_4() { return cMetamodelAssignment_4; }
		
		//EString
		public RuleCall getMetamodelEStringParserRuleCall_4_0() { return cMetamodelEStringParserRuleCall_4_0; }
	}
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProgramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGenerateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cNumAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cNumEIntParserRuleCall_2_0_0 = (RuleCall)cNumAssignment_2_0.eContents().get(0);
		private final Assignment cExhaustiveAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Keyword cExhaustiveExhaustiveKeyword_2_1_0 = (Keyword)cExhaustiveAssignment_2_1.eContents().get(0);
		private final Keyword cMutantsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOutputAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOutputEStringParserRuleCall_5_0 = (RuleCall)cOutputAssignment_5.eContents().get(0);
		private final Keyword cFromKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSourceAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSourceSourceParserRuleCall_7_0 = (RuleCall)cSourceAssignment_7.eContents().get(0);
		private final Keyword cMetamodelKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMetamodelAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMetamodelEStringParserRuleCall_9_0 = (RuleCall)cMetamodelAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cWithKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cResourcesKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cFromKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Assignment cResourcesAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cResourcesResourceParserRuleCall_10_4_0 = (RuleCall)cResourcesAssignment_10_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_5 = (Keyword)cGroup_10.eContents().get(5);
		private final Group cGroup_10_6 = (Group)cGroup_10.eContents().get(6);
		private final Keyword cCommaKeyword_10_6_0 = (Keyword)cGroup_10_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_6_1 = (Keyword)cGroup_10_6.eContents().get(1);
		private final Assignment cResourcesAssignment_10_6_2 = (Assignment)cGroup_10_6.eContents().get(2);
		private final RuleCall cResourcesResourceParserRuleCall_10_6_2_0 = (RuleCall)cResourcesAssignment_10_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_6_3 = (Keyword)cGroup_10_6.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDescriptionKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cDescriptionAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_11_1_0 = (RuleCall)cDescriptionAssignment_11_1.eContents().get(0);
		
		//Program returns Program:
		//    {Program}
		//    'generate' (num=EInt | exhaustive ?= 'exhaustive')? 'mutants'
		//    'in' output=EString
		//    'from' source=Source
		//    'metamodel' metamodel=EString
		//    ('with' 'resources' 'from' '{' resources+=Resource '}' (',' '{' resources+=Resource '}')*)?
		//    ('description' description=EString)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Program}
		//'generate' (num=EInt | exhaustive ?= 'exhaustive')? 'mutants'
		//'in' output=EString
		//'from' source=Source
		//'metamodel' metamodel=EString
		//('with' 'resources' 'from' '{' resources+=Resource '}' (',' '{' resources+=Resource '}')*)?
		//('description' description=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Program}
		public Action getProgramAction_0() { return cProgramAction_0; }
		
		//'generate'
		public Keyword getGenerateKeyword_1() { return cGenerateKeyword_1; }
		
		//(num=EInt | exhaustive ?= 'exhaustive')?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//num=EInt
		public Assignment getNumAssignment_2_0() { return cNumAssignment_2_0; }
		
		//EInt
		public RuleCall getNumEIntParserRuleCall_2_0_0() { return cNumEIntParserRuleCall_2_0_0; }
		
		//exhaustive ?= 'exhaustive'
		public Assignment getExhaustiveAssignment_2_1() { return cExhaustiveAssignment_2_1; }
		
		//'exhaustive'
		public Keyword getExhaustiveExhaustiveKeyword_2_1_0() { return cExhaustiveExhaustiveKeyword_2_1_0; }
		
		//'mutants'
		public Keyword getMutantsKeyword_3() { return cMutantsKeyword_3; }
		
		//'in'
		public Keyword getInKeyword_4() { return cInKeyword_4; }
		
		//output=EString
		public Assignment getOutputAssignment_5() { return cOutputAssignment_5; }
		
		//EString
		public RuleCall getOutputEStringParserRuleCall_5_0() { return cOutputEStringParserRuleCall_5_0; }
		
		//'from'
		public Keyword getFromKeyword_6() { return cFromKeyword_6; }
		
		//source=Source
		public Assignment getSourceAssignment_7() { return cSourceAssignment_7; }
		
		//Source
		public RuleCall getSourceSourceParserRuleCall_7_0() { return cSourceSourceParserRuleCall_7_0; }
		
		//'metamodel'
		public Keyword getMetamodelKeyword_8() { return cMetamodelKeyword_8; }
		
		//metamodel=EString
		public Assignment getMetamodelAssignment_9() { return cMetamodelAssignment_9; }
		
		//EString
		public RuleCall getMetamodelEStringParserRuleCall_9_0() { return cMetamodelEStringParserRuleCall_9_0; }
		
		//('with' 'resources' 'from' '{' resources+=Resource '}' (',' '{' resources+=Resource '}')*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'with'
		public Keyword getWithKeyword_10_0() { return cWithKeyword_10_0; }
		
		//'resources'
		public Keyword getResourcesKeyword_10_1() { return cResourcesKeyword_10_1; }
		
		//'from'
		public Keyword getFromKeyword_10_2() { return cFromKeyword_10_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_3() { return cLeftCurlyBracketKeyword_10_3; }
		
		//resources+=Resource
		public Assignment getResourcesAssignment_10_4() { return cResourcesAssignment_10_4; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_10_4_0() { return cResourcesResourceParserRuleCall_10_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_5() { return cRightCurlyBracketKeyword_10_5; }
		
		//(',' '{' resources+=Resource '}')*
		public Group getGroup_10_6() { return cGroup_10_6; }
		
		//','
		public Keyword getCommaKeyword_10_6_0() { return cCommaKeyword_10_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_6_1() { return cLeftCurlyBracketKeyword_10_6_1; }
		
		//resources+=Resource
		public Assignment getResourcesAssignment_10_6_2() { return cResourcesAssignment_10_6_2; }
		
		//Resource
		public RuleCall getResourcesResourceParserRuleCall_10_6_2_0() { return cResourcesResourceParserRuleCall_10_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_6_3() { return cRightCurlyBracketKeyword_10_6_3; }
		
		//('description' description=EString)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'description'
		public Keyword getDescriptionKeyword_11_0() { return cDescriptionKeyword_11_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_11_1() { return cDescriptionAssignment_11_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_11_1_0() { return cDescriptionEStringParserRuleCall_11_1_0; }
	}
	public class SourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Source");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathEStringParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		
		//Source returns Source:
		//    {Source}
		//    path=EString /*(multiple?='all')?*/
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Source}
		//path=EString
		public Group getGroup() { return cGroup; }
		
		//{Source}
		public Action getSourceAction_0() { return cSourceAction_0; }
		
		//path=EString
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }
		
		//EString
		public RuleCall getPathEStringParserRuleCall_1_0() { return cPathEStringParserRuleCall_1_0; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Resource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSourceParserRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cMetamodelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMetamodelAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMetamodelEStringParserRuleCall_6_0 = (RuleCall)cMetamodelAssignment_6.eContents().get(0);
		
		//Resource returns Resource:
		//    {Resource}
		//    name=ID '=' path=Source 'metamodel' '=' metamodel=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Resource}
		//name=ID '=' path=Source 'metamodel' '=' metamodel=EString
		public Group getGroup() { return cGroup; }
		
		//{Resource}
		public Action getResourceAction_0() { return cResourceAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//path=Source
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }
		
		//Source
		public RuleCall getPathSourceParserRuleCall_3_0() { return cPathSourceParserRuleCall_3_0; }
		
		//'metamodel'
		public Keyword getMetamodelKeyword_4() { return cMetamodelKeyword_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }
		
		//metamodel=EString
		public Assignment getMetamodelAssignment_6() { return cMetamodelAssignment_6; }
		
		//EString
		public RuleCall getMetamodelEStringParserRuleCall_6_0() { return cMetamodelEStringParserRuleCall_6_0; }
	}
	public class BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFromAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cFromBlockCrossReference_2_1_0 = (CrossReference)cFromAssignment_2_1.eContents().get(0);
		private final RuleCall cFromBlockIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFromBlockCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFromAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cFromBlockCrossReference_2_2_1_0 = (CrossReference)cFromAssignment_2_2_1.eContents().get(0);
		private final RuleCall cFromBlockIDTerminalRuleCall_2_2_1_0_1 = (RuleCall)cFromBlockCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRepeatKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRepeatAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRepeatRepeatEnumRuleCall_3_2_0 = (RuleCall)cRepeatAssignment_3_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCommandsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCommandsMutatorParserRuleCall_5_0 = (RuleCall)cCommandsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Group cGroup_7_1_0 = (Group)cAlternatives_7_1.eContents().get(0);
		private final Assignment cMinAssignment_7_1_0_0 = (Assignment)cGroup_7_1_0.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_7_1_0_0_0 = (RuleCall)cMinAssignment_7_1_0_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_7_1_0_1 = (Keyword)cGroup_7_1_0.eContents().get(1);
		private final Assignment cMaxAssignment_7_1_0_2 = (Assignment)cGroup_7_1_0.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_7_1_0_2_0 = (RuleCall)cMaxAssignment_7_1_0_2.eContents().get(0);
		private final Assignment cFixedAssignment_7_1_1 = (Assignment)cAlternatives_7_1.eContents().get(1);
		private final RuleCall cFixedEIntParserRuleCall_7_1_1_0 = (RuleCall)cFixedAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//Block returns Block:
		//    name=ID (description=EString)? ('from' from+=[Block|ID] (',' from+=[Block|ID])*)? ('repeat' '=' repeat=Repeat)? '{' commands+=Mutator* '}' ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID (description=EString)? ('from' from+=[Block|ID] (',' from+=[Block|ID])*)? ('repeat' '=' repeat=Repeat)? '{' commands+=Mutator* '}' ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//(description=EString)?
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_1_0() { return cDescriptionEStringParserRuleCall_1_0; }
		
		//('from' from+=[Block|ID] (',' from+=[Block|ID])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'from'
		public Keyword getFromKeyword_2_0() { return cFromKeyword_2_0; }
		
		//from+=[Block|ID]
		public Assignment getFromAssignment_2_1() { return cFromAssignment_2_1; }
		
		//[Block|ID]
		public CrossReference getFromBlockCrossReference_2_1_0() { return cFromBlockCrossReference_2_1_0; }
		
		//ID
		public RuleCall getFromBlockIDTerminalRuleCall_2_1_0_1() { return cFromBlockIDTerminalRuleCall_2_1_0_1; }
		
		//(',' from+=[Block|ID])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//from+=[Block|ID]
		public Assignment getFromAssignment_2_2_1() { return cFromAssignment_2_2_1; }
		
		//[Block|ID]
		public CrossReference getFromBlockCrossReference_2_2_1_0() { return cFromBlockCrossReference_2_2_1_0; }
		
		//ID
		public RuleCall getFromBlockIDTerminalRuleCall_2_2_1_0_1() { return cFromBlockIDTerminalRuleCall_2_2_1_0_1; }
		
		//('repeat' '=' repeat=Repeat)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'repeat'
		public Keyword getRepeatKeyword_3_0() { return cRepeatKeyword_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }
		
		//repeat=Repeat
		public Assignment getRepeatAssignment_3_2() { return cRepeatAssignment_3_2; }
		
		//Repeat
		public RuleCall getRepeatRepeatEnumRuleCall_3_2_0() { return cRepeatRepeatEnumRuleCall_3_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//commands+=Mutator*
		public Assignment getCommandsAssignment_5() { return cCommandsAssignment_5; }
		
		//Mutator
		public RuleCall getCommandsMutatorParserRuleCall_5_0() { return cCommandsMutatorParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_0() { return cLeftSquareBracketKeyword_7_0; }
		
		//(min=EInt '..' max=MaxCardinality | fixed=EInt)
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }
		
		//min=EInt '..' max=MaxCardinality
		public Group getGroup_7_1_0() { return cGroup_7_1_0; }
		
		//min=EInt
		public Assignment getMinAssignment_7_1_0_0() { return cMinAssignment_7_1_0_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_7_1_0_0_0() { return cMinEIntParserRuleCall_7_1_0_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_7_1_0_1() { return cFullStopFullStopKeyword_7_1_0_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_7_1_0_2() { return cMaxAssignment_7_1_0_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_7_1_0_2_0() { return cMaxMaxCardinalityParserRuleCall_7_1_0_2_0; }
		
		//fixed=EInt
		public Assignment getFixedAssignment_7_1_1() { return cFixedAssignment_7_1_1; }
		
		//EInt
		public RuleCall getFixedEIntParserRuleCall_7_1_1_0() { return cFixedEIntParserRuleCall_7_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_2() { return cRightSquareBracketKeyword_7_2; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeEClassCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeEClassCrossReference_1_0.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdEStringParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cColonKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cExpressionsAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cExpressionsInvariantCSParserRuleCall_3_0_1_0 = (RuleCall)cExpressionsAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cRulesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cRulesEStringParserRuleCall_3_1_1_0 = (RuleCall)cRulesAssignment_3_1_1.eContents().get(0);
		
		//Constraint returns Constraint:
		//    'context' type=[ecore::EClass|ID] id=EString (':' (expressions+=InvariantCS)+ | '::' (rules+=EString)+)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'context' type=[ecore::EClass|ID] id=EString (':' (expressions+=InvariantCS)+ | '::' (rules+=EString)+)
		public Group getGroup() { return cGroup; }
		
		//'context'
		public Keyword getContextKeyword_0() { return cContextKeyword_0; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_1_0() { return cTypeEClassCrossReference_1_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_1_0_1() { return cTypeEClassIDTerminalRuleCall_1_0_1; }
		
		//id=EString
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_2_0() { return cIdEStringParserRuleCall_2_0; }
		
		//(':' (expressions+=InvariantCS)+ | '::' (rules+=EString)+)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//':' (expressions+=InvariantCS)+
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_0_0() { return cColonKeyword_3_0_0; }
		
		//(expressions+=InvariantCS)+
		public Assignment getExpressionsAssignment_3_0_1() { return cExpressionsAssignment_3_0_1; }
		
		//InvariantCS
		public RuleCall getExpressionsInvariantCSParserRuleCall_3_0_1_0() { return cExpressionsInvariantCSParserRuleCall_3_0_1_0; }
		
		//'::' (rules+=EString)+
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_0() { return cColonColonKeyword_3_1_0; }
		
		//(rules+=EString)+
		public Assignment getRulesAssignment_3_1_1() { return cRulesAssignment_3_1_1; }
		
		//EString
		public RuleCall getRulesEStringParserRuleCall_3_1_1_0() { return cRulesEStringParserRuleCall_3_1_1_0; }
	}
	public class InvariantCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.InvariantCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpExpCSParserRuleCall_0_0 = (RuleCall)cExpAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//// Expressions
		//InvariantCS returns miniocl::InvariantCS:
		//    exp=ExpCS ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//exp=ExpCS ';'
		public Group getGroup() { return cGroup; }
		
		//exp=ExpCS
		public Assignment getExpAssignment_0() { return cExpAssignment_0; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_0_0() { return cExpExpCSParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class ExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ExpCS");
		private final RuleCall cLogicExpCSParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// Expressions
		//ExpCS returns miniocl::ExpCS:
		//    LogicExpCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//LogicExpCS
		public RuleCall getLogicExpCSParserRuleCall() { return cLogicExpCSParserRuleCall; }
	}
	public class LogicExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.LogicExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCallExpCSParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cLogicExpCSLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cOpAlternatives_1_1_0 = (Alternatives)cOpAssignment_1_1.eContents().get(0);
		private final Keyword cOpEqualsSignKeyword_1_1_0_0 = (Keyword)cOpAlternatives_1_1_0.eContents().get(0);
		private final Keyword cOpLessThanSignGreaterThanSignKeyword_1_1_0_1 = (Keyword)cOpAlternatives_1_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightCallExpCSParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//LogicExpCS returns miniocl::LogicExpCS:
		//    CallExpCS ({miniocl::LogicExpCS.left=current} op=('=' | '<>') right=CallExpCS)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CallExpCS ({miniocl::LogicExpCS.left=current} op=('=' | '<>') right=CallExpCS)*
		public Group getGroup() { return cGroup; }
		
		//CallExpCS
		public RuleCall getCallExpCSParserRuleCall_0() { return cCallExpCSParserRuleCall_0; }
		
		//({miniocl::LogicExpCS.left=current} op=('=' | '<>') right=CallExpCS)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{miniocl::LogicExpCS.left=current}
		public Action getLogicExpCSLeftAction_1_0() { return cLogicExpCSLeftAction_1_0; }
		
		//op=('=' | '<>')
		public Assignment getOpAssignment_1_1() { return cOpAssignment_1_1; }
		
		//('=' | '<>')
		public Alternatives getOpAlternatives_1_1_0() { return cOpAlternatives_1_1_0; }
		
		//'='
		public Keyword getOpEqualsSignKeyword_1_1_0_0() { return cOpEqualsSignKeyword_1_1_0_0; }
		
		//'<>'
		public Keyword getOpLessThanSignGreaterThanSignKeyword_1_1_0_1() { return cOpLessThanSignGreaterThanSignKeyword_1_1_0_1; }
		
		//right=CallExpCS
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }
		
		//CallExpCS
		public RuleCall getRightCallExpCSParserRuleCall_1_2_0() { return cRightCallExpCSParserRuleCall_1_2_0; }
	}
	public class CallExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CallExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryExpCSParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cCallExpCSSourceAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cOpAlternatives_1_1_0 = (Alternatives)cOpAssignment_1_1.eContents().get(0);
		private final Keyword cOpFullStopKeyword_1_1_0_0 = (Keyword)cOpAlternatives_1_1_0.eContents().get(0);
		private final Keyword cOpHyphenMinusGreaterThanSignKeyword_1_1_0_1 = (Keyword)cOpAlternatives_1_1_0.eContents().get(1);
		private final Assignment cNavExpAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cNavExpNavigationExpCSParserRuleCall_1_2_0 = (RuleCall)cNavExpAssignment_1_2.eContents().get(0);
		
		//CallExpCS returns miniocl::CallExpCS:
		//    PrimaryExpCS ({miniocl::CallExpCS.source=current} op=('.' | '->') navExp=NavigationExpCS)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimaryExpCS ({miniocl::CallExpCS.source=current} op=('.' | '->') navExp=NavigationExpCS)*
		public Group getGroup() { return cGroup; }
		
		//PrimaryExpCS
		public RuleCall getPrimaryExpCSParserRuleCall_0() { return cPrimaryExpCSParserRuleCall_0; }
		
		//({miniocl::CallExpCS.source=current} op=('.' | '->') navExp=NavigationExpCS)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{miniocl::CallExpCS.source=current}
		public Action getCallExpCSSourceAction_1_0() { return cCallExpCSSourceAction_1_0; }
		
		//op=('.' | '->')
		public Assignment getOpAssignment_1_1() { return cOpAssignment_1_1; }
		
		//('.' | '->')
		public Alternatives getOpAlternatives_1_1_0() { return cOpAlternatives_1_1_0; }
		
		//'.'
		public Keyword getOpFullStopKeyword_1_1_0_0() { return cOpFullStopKeyword_1_1_0_0; }
		
		//'->'
		public Keyword getOpHyphenMinusGreaterThanSignKeyword_1_1_0_1() { return cOpHyphenMinusGreaterThanSignKeyword_1_1_0_1; }
		
		//navExp=NavigationExpCS
		public Assignment getNavExpAssignment_1_2() { return cNavExpAssignment_1_2; }
		
		//NavigationExpCS
		public RuleCall getNavExpNavigationExpCSParserRuleCall_1_2_0() { return cNavExpNavigationExpCSParserRuleCall_1_2_0; }
	}
	public class PrimaryExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.PrimaryExpCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameExpCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////CallExpCS returns miniocl::CallExpCS:
		////    PrimaryExpCS ({miniocl::CallExpCS.source=current} op=('.' | '->') nameExp=NameExpCS)
		////;
		//PrimaryExpCS returns miniocl::PrimaryExpCS:
		//    NameExpCS | LiteralExpCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NameExpCS | LiteralExpCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NameExpCS
		public RuleCall getNameExpCSParserRuleCall_0() { return cNameExpCSParserRuleCall_0; }
		
		//LiteralExpCS
		public RuleCall getLiteralExpCSParserRuleCall_1() { return cLiteralExpCSParserRuleCall_1; }
	}
	public class NavigationExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationExpCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLoopExpCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNavigationNameExpCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NavigationExpCS returns miniocl::NavigationExpCS:
		//  LoopExpCS | NavigationNameExpCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//LoopExpCS | NavigationNameExpCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LoopExpCS
		public RuleCall getLoopExpCSParserRuleCall_0() { return cLoopExpCSParserRuleCall_0; }
		
		//NavigationNameExpCS
		public RuleCall getNavigationNameExpCSParserRuleCall_1() { return cNavigationNameExpCSParserRuleCall_1; }
	}
	public class LoopExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.LoopExpCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCollectExpCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIterateExpCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExistsExpCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForAllExpCSParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//LoopExpCS returns miniocl::LoopExpCS:
		//  CollectExpCS | IterateExpCS | ExistsExpCS | ForAllExpCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CollectExpCS | IterateExpCS | ExistsExpCS | ForAllExpCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CollectExpCS
		public RuleCall getCollectExpCSParserRuleCall_0() { return cCollectExpCSParserRuleCall_0; }
		
		//IterateExpCS
		public RuleCall getIterateExpCSParserRuleCall_1() { return cIterateExpCSParserRuleCall_1; }
		
		//ExistsExpCS
		public RuleCall getExistsExpCSParserRuleCall_2() { return cExistsExpCSParserRuleCall_2; }
		
		//ForAllExpCS
		public RuleCall getForAllExpCSParserRuleCall_3() { return cForAllExpCSParserRuleCall_3; }
	}
	public class CollectExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CollectExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItVarAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItVarIteratorVarCSParserRuleCall_2_0_0 = (RuleCall)cItVarAssignment_2_0.eContents().get(0);
		private final Keyword cVerticalLineKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cExpAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpExpCSParserRuleCall_3_0 = (RuleCall)cExpAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cLogicOpAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Alternatives cLogicOpAlternatives_4_0_0 = (Alternatives)cLogicOpAssignment_4_0.eContents().get(0);
		private final Keyword cLogicOpOrKeyword_4_0_0_0 = (Keyword)cLogicOpAlternatives_4_0_0.eContents().get(0);
		private final Keyword cLogicOpAndKeyword_4_0_0_1 = (Keyword)cLogicOpAlternatives_4_0_0.eContents().get(1);
		private final Assignment cExpAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cExpExpCSParserRuleCall_4_1_0 = (RuleCall)cExpAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CollectExpCS returns miniocl::CollectExpCS:
		//  'collect' '(' (itVar=IteratorVarCS '|')? exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)* ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'collect' '(' (itVar=IteratorVarCS '|')? exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)* ')'
		public Group getGroup() { return cGroup; }
		
		//'collect'
		public Keyword getCollectKeyword_0() { return cCollectKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(itVar=IteratorVarCS '|')?
		public Group getGroup_2() { return cGroup_2; }
		
		//itVar=IteratorVarCS
		public Assignment getItVarAssignment_2_0() { return cItVarAssignment_2_0; }
		
		//IteratorVarCS
		public RuleCall getItVarIteratorVarCSParserRuleCall_2_0_0() { return cItVarIteratorVarCSParserRuleCall_2_0_0; }
		
		//'|'
		public Keyword getVerticalLineKeyword_2_1() { return cVerticalLineKeyword_2_1; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_3() { return cExpAssignment_3; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_3_0() { return cExpExpCSParserRuleCall_3_0; }
		
		//(logicOp+=('or' | 'and') exp+=ExpCS)*
		public Group getGroup_4() { return cGroup_4; }
		
		//logicOp+=('or' | 'and')
		public Assignment getLogicOpAssignment_4_0() { return cLogicOpAssignment_4_0; }
		
		//('or' | 'and')
		public Alternatives getLogicOpAlternatives_4_0_0() { return cLogicOpAlternatives_4_0_0; }
		
		//'or'
		public Keyword getLogicOpOrKeyword_4_0_0_0() { return cLogicOpOrKeyword_4_0_0_0; }
		
		//'and'
		public Keyword getLogicOpAndKeyword_4_0_0_1() { return cLogicOpAndKeyword_4_0_0_1; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_4_1() { return cExpAssignment_4_1; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_4_1_0() { return cExpExpCSParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class IteratorVarCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.IteratorVarCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cItNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cItNameIDTerminalRuleCall_0_0 = (RuleCall)cItNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cItTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cItTypePathNameCSParserRuleCall_1_1_0 = (RuleCall)cItTypeAssignment_1_1.eContents().get(0);
		
		//IteratorVarCS returns miniocl::IteratorVarCS:
		//  itName = ID (':' itType=PathNameCS)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//itName = ID (':' itType=PathNameCS)?
		public Group getGroup() { return cGroup; }
		
		//itName = ID
		public Assignment getItNameAssignment_0() { return cItNameAssignment_0; }
		
		//ID
		public RuleCall getItNameIDTerminalRuleCall_0_0() { return cItNameIDTerminalRuleCall_0_0; }
		
		//(':' itType=PathNameCS)?
		public Group getGroup_1() { return cGroup_1; }
		
		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }
		
		//itType=PathNameCS
		public Assignment getItTypeAssignment_1_1() { return cItTypeAssignment_1_1; }
		
		//PathNameCS
		public RuleCall getItTypePathNameCSParserRuleCall_1_1_0() { return cItTypePathNameCSParserRuleCall_1_1_0; }
	}
	public class IterateExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.IterateExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIterateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cItVarAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cItVarIteratorVarCSParserRuleCall_2_0 = (RuleCall)cItVarAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAccVarAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAccVarAccVarCSParserRuleCall_4_0 = (RuleCall)cAccVarAssignment_4.eContents().get(0);
		private final Keyword cVerticalLineKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cExpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cExpExpCSParserRuleCall_6_0 = (RuleCall)cExpAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cLogicOpAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Alternatives cLogicOpAlternatives_7_0_0 = (Alternatives)cLogicOpAssignment_7_0.eContents().get(0);
		private final Keyword cLogicOpOrKeyword_7_0_0_0 = (Keyword)cLogicOpAlternatives_7_0_0.eContents().get(0);
		private final Keyword cLogicOpAndKeyword_7_0_0_1 = (Keyword)cLogicOpAlternatives_7_0_0.eContents().get(1);
		private final Assignment cExpAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExpExpCSParserRuleCall_7_1_0 = (RuleCall)cExpAssignment_7_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//IterateExpCS returns miniocl::IterateExpCS:
		//  'iterate' '(' itVar=IteratorVarCS ';' accVar=AccVarCS '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'iterate' '(' itVar=IteratorVarCS ';' accVar=AccVarCS '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		public Group getGroup() { return cGroup; }
		
		//'iterate'
		public Keyword getIterateKeyword_0() { return cIterateKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//itVar=IteratorVarCS
		public Assignment getItVarAssignment_2() { return cItVarAssignment_2; }
		
		//IteratorVarCS
		public RuleCall getItVarIteratorVarCSParserRuleCall_2_0() { return cItVarIteratorVarCSParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//accVar=AccVarCS
		public Assignment getAccVarAssignment_4() { return cAccVarAssignment_4; }
		
		//AccVarCS
		public RuleCall getAccVarAccVarCSParserRuleCall_4_0() { return cAccVarAccVarCSParserRuleCall_4_0; }
		
		//'|'
		public Keyword getVerticalLineKeyword_5() { return cVerticalLineKeyword_5; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_6() { return cExpAssignment_6; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_6_0() { return cExpExpCSParserRuleCall_6_0; }
		
		//(logicOp+=('or' | 'and') exp+=ExpCS)*
		public Group getGroup_7() { return cGroup_7; }
		
		//logicOp+=('or' | 'and')
		public Assignment getLogicOpAssignment_7_0() { return cLogicOpAssignment_7_0; }
		
		//('or' | 'and')
		public Alternatives getLogicOpAlternatives_7_0_0() { return cLogicOpAlternatives_7_0_0; }
		
		//'or'
		public Keyword getLogicOpOrKeyword_7_0_0_0() { return cLogicOpOrKeyword_7_0_0_0; }
		
		//'and'
		public Keyword getLogicOpAndKeyword_7_0_0_1() { return cLogicOpAndKeyword_7_0_0_1; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_7_1() { return cExpAssignment_7_1; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_7_1_0() { return cExpExpCSParserRuleCall_7_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class AccVarCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AccVarCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAccVarNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAccVarNameIDTerminalRuleCall_1_0 = (RuleCall)cAccVarNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAccTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAccTypePathNameCSParserRuleCall_2_1_0 = (RuleCall)cAccTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAccInitExpAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAccInitExpExpCSParserRuleCall_3_1_0 = (RuleCall)cAccInitExpAssignment_3_1.eContents().get(0);
		
		//AccVarCS returns miniocl::AccVarCS:
		//  '$' accVarName = ID (':' accType=PathNameCS)? ('=' accInitExp=ExpCS)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'$' accVarName = ID (':' accType=PathNameCS)? ('=' accInitExp=ExpCS)?
		public Group getGroup() { return cGroup; }
		
		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }
		
		//accVarName = ID
		public Assignment getAccVarNameAssignment_1() { return cAccVarNameAssignment_1; }
		
		//ID
		public RuleCall getAccVarNameIDTerminalRuleCall_1_0() { return cAccVarNameIDTerminalRuleCall_1_0; }
		
		//(':' accType=PathNameCS)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//accType=PathNameCS
		public Assignment getAccTypeAssignment_2_1() { return cAccTypeAssignment_2_1; }
		
		//PathNameCS
		public RuleCall getAccTypePathNameCSParserRuleCall_2_1_0() { return cAccTypePathNameCSParserRuleCall_2_1_0; }
		
		//('=' accInitExp=ExpCS)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0() { return cEqualsSignKeyword_3_0; }
		
		//accInitExp=ExpCS
		public Assignment getAccInitExpAssignment_3_1() { return cAccInitExpAssignment_3_1; }
		
		//ExpCS
		public RuleCall getAccInitExpExpCSParserRuleCall_3_1_0() { return cAccInitExpExpCSParserRuleCall_3_1_0; }
	}
	public class ExistsExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ExistsExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExistsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccVarsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccVarsAccVarCSParserRuleCall_2_0 = (RuleCall)cAccVarsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAccVarsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAccVarsAccVarCSParserRuleCall_3_1_0 = (RuleCall)cAccVarsAssignment_3_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpExpCSParserRuleCall_5_0 = (RuleCall)cExpAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cLogicOpAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Alternatives cLogicOpAlternatives_6_0_0 = (Alternatives)cLogicOpAssignment_6_0.eContents().get(0);
		private final Keyword cLogicOpOrKeyword_6_0_0_0 = (Keyword)cLogicOpAlternatives_6_0_0.eContents().get(0);
		private final Keyword cLogicOpAndKeyword_6_0_0_1 = (Keyword)cLogicOpAlternatives_6_0_0.eContents().get(1);
		private final Assignment cExpAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cExpExpCSParserRuleCall_6_1_0 = (RuleCall)cExpAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ExistsExpCS returns miniocl::ExistsExpCS:
		//  'exists' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'exists' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		public Group getGroup() { return cGroup; }
		
		//'exists'
		public Keyword getExistsKeyword_0() { return cExistsKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//accVars+=AccVarCS
		public Assignment getAccVarsAssignment_2() { return cAccVarsAssignment_2; }
		
		//AccVarCS
		public RuleCall getAccVarsAccVarCSParserRuleCall_2_0() { return cAccVarsAccVarCSParserRuleCall_2_0; }
		
		//(',' accVars+=AccVarCS)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//accVars+=AccVarCS
		public Assignment getAccVarsAssignment_3_1() { return cAccVarsAssignment_3_1; }
		
		//AccVarCS
		public RuleCall getAccVarsAccVarCSParserRuleCall_3_1_0() { return cAccVarsAccVarCSParserRuleCall_3_1_0; }
		
		//'|'
		public Keyword getVerticalLineKeyword_4() { return cVerticalLineKeyword_4; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_5() { return cExpAssignment_5; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_5_0() { return cExpExpCSParserRuleCall_5_0; }
		
		//(logicOp+=('or' | 'and') exp+=ExpCS)*
		public Group getGroup_6() { return cGroup_6; }
		
		//logicOp+=('or' | 'and')
		public Assignment getLogicOpAssignment_6_0() { return cLogicOpAssignment_6_0; }
		
		//('or' | 'and')
		public Alternatives getLogicOpAlternatives_6_0_0() { return cLogicOpAlternatives_6_0_0; }
		
		//'or'
		public Keyword getLogicOpOrKeyword_6_0_0_0() { return cLogicOpOrKeyword_6_0_0_0; }
		
		//'and'
		public Keyword getLogicOpAndKeyword_6_0_0_1() { return cLogicOpAndKeyword_6_0_0_1; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_6_1() { return cExpAssignment_6_1; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_6_1_0() { return cExpExpCSParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ForAllExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ForAllExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForAllKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAccVarsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAccVarsAccVarCSParserRuleCall_2_0 = (RuleCall)cAccVarsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAccVarsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAccVarsAccVarCSParserRuleCall_3_1_0 = (RuleCall)cAccVarsAssignment_3_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpExpCSParserRuleCall_5_0 = (RuleCall)cExpAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cLogicOpAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Alternatives cLogicOpAlternatives_6_0_0 = (Alternatives)cLogicOpAssignment_6_0.eContents().get(0);
		private final Keyword cLogicOpOrKeyword_6_0_0_0 = (Keyword)cLogicOpAlternatives_6_0_0.eContents().get(0);
		private final Keyword cLogicOpAndKeyword_6_0_0_1 = (Keyword)cLogicOpAlternatives_6_0_0.eContents().get(1);
		private final Assignment cExpAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cExpExpCSParserRuleCall_6_1_0 = (RuleCall)cExpAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ForAllExpCS returns miniocl::ForAllExpCS:
		//  'forAll' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'forAll' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
		public Group getGroup() { return cGroup; }
		
		//'forAll'
		public Keyword getForAllKeyword_0() { return cForAllKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//accVars+=AccVarCS
		public Assignment getAccVarsAssignment_2() { return cAccVarsAssignment_2; }
		
		//AccVarCS
		public RuleCall getAccVarsAccVarCSParserRuleCall_2_0() { return cAccVarsAccVarCSParserRuleCall_2_0; }
		
		//(',' accVars+=AccVarCS)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//accVars+=AccVarCS
		public Assignment getAccVarsAssignment_3_1() { return cAccVarsAssignment_3_1; }
		
		//AccVarCS
		public RuleCall getAccVarsAccVarCSParserRuleCall_3_1_0() { return cAccVarsAccVarCSParserRuleCall_3_1_0; }
		
		//'|'
		public Keyword getVerticalLineKeyword_4() { return cVerticalLineKeyword_4; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_5() { return cExpAssignment_5; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_5_0() { return cExpExpCSParserRuleCall_5_0; }
		
		//(logicOp+=('or' | 'and') exp+=ExpCS)*
		public Group getGroup_6() { return cGroup_6; }
		
		//logicOp+=('or' | 'and')
		public Assignment getLogicOpAssignment_6_0() { return cLogicOpAssignment_6_0; }
		
		//('or' | 'and')
		public Alternatives getLogicOpAlternatives_6_0_0() { return cLogicOpAlternatives_6_0_0; }
		
		//'or'
		public Keyword getLogicOpOrKeyword_6_0_0_0() { return cLogicOpOrKeyword_6_0_0_0; }
		
		//'and'
		public Keyword getLogicOpAndKeyword_6_0_0_1() { return cLogicOpAndKeyword_6_0_0_1; }
		
		//exp+=ExpCS
		public Assignment getExpAssignment_6_1() { return cExpAssignment_6_1; }
		
		//ExpCS
		public RuleCall getExpExpCSParserRuleCall_6_1_0() { return cExpExpCSParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class NameExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NameExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpNamePathNameCSParserRuleCall_0_0 = (RuleCall)cExpNameAssignment_0.eContents().get(0);
		private final Assignment cRoundedBracketsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0 = (RuleCall)cRoundedBracketsAssignment_1.eContents().get(0);
		private final Assignment cCallExpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallExpCallExpCSParserRuleCall_2_0 = (RuleCall)cCallExpAssignment_2.eContents().get(0);
		
		//NameExpCS returns miniocl::NameExpCS:
		//    expName=PathNameCS
		//    (roundedBrackets=RoundedBracketClauseCS)?
		//    (callExp=CallExpCS)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expName=PathNameCS
		//(roundedBrackets=RoundedBracketClauseCS)?
		//(callExp=CallExpCS)?
		public Group getGroup() { return cGroup; }
		
		//expName=PathNameCS
		public Assignment getExpNameAssignment_0() { return cExpNameAssignment_0; }
		
		//PathNameCS
		public RuleCall getExpNamePathNameCSParserRuleCall_0_0() { return cExpNamePathNameCSParserRuleCall_0_0; }
		
		//(roundedBrackets=RoundedBracketClauseCS)?
		public Assignment getRoundedBracketsAssignment_1() { return cRoundedBracketsAssignment_1; }
		
		//RoundedBracketClauseCS
		public RuleCall getRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0() { return cRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0; }
		
		//(callExp=CallExpCS)?
		public Assignment getCallExpAssignment_2() { return cCallExpAssignment_2; }
		
		//CallExpCS
		public RuleCall getCallExpCallExpCSParserRuleCall_2_0() { return cCallExpCallExpCSParserRuleCall_2_0; }
	}
	public class NavigationNameExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationNameExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpNameNavigationPathNameCSParserRuleCall_0_0 = (RuleCall)cExpNameAssignment_0.eContents().get(0);
		private final Assignment cRoundedBracketsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0 = (RuleCall)cRoundedBracketsAssignment_1.eContents().get(0);
		private final Assignment cCallExpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallExpCallExpCSParserRuleCall_2_0 = (RuleCall)cCallExpAssignment_2.eContents().get(0);
		
		//NavigationNameExpCS returns miniocl::NavigationNameExpCS:
		//    expName=NavigationPathNameCS
		//    (roundedBrackets=RoundedBracketClauseCS)?
		//    (callExp=CallExpCS)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expName=NavigationPathNameCS
		//(roundedBrackets=RoundedBracketClauseCS)?
		//(callExp=CallExpCS)?
		public Group getGroup() { return cGroup; }
		
		//expName=NavigationPathNameCS
		public Assignment getExpNameAssignment_0() { return cExpNameAssignment_0; }
		
		//NavigationPathNameCS
		public RuleCall getExpNameNavigationPathNameCSParserRuleCall_0_0() { return cExpNameNavigationPathNameCSParserRuleCall_0_0; }
		
		//(roundedBrackets=RoundedBracketClauseCS)?
		public Assignment getRoundedBracketsAssignment_1() { return cRoundedBracketsAssignment_1; }
		
		//RoundedBracketClauseCS
		public RuleCall getRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0() { return cRoundedBracketsRoundedBracketClauseCSParserRuleCall_1_0; }
		
		//(callExp=CallExpCS)?
		public Assignment getCallExpAssignment_2() { return cCallExpAssignment_2; }
		
		//CallExpCS
		public RuleCall getCallExpCallExpCSParserRuleCall_2_0() { return cCallExpCallExpCSParserRuleCall_2_0; }
	}
	public class RoundedBracketClauseCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RoundedBracketClauseCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoundedBracketClauseCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cArgsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cArgsExpCSParserRuleCall_2_0_0 = (RuleCall)cArgsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cArgsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cArgsExpCSParserRuleCall_2_1_1_0 = (RuleCall)cArgsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RoundedBracketClauseCS returns miniocl::RoundedBracketClauseCS:
		//    {miniocl::RoundedBracketClauseCS}
		//    '('
		//        (args+=ExpCS (','args+=ExpCS)* )?
		//    ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{miniocl::RoundedBracketClauseCS}
		//'('
		//    (args+=ExpCS (','args+=ExpCS)* )?
		//')'
		public Group getGroup() { return cGroup; }
		
		//{miniocl::RoundedBracketClauseCS}
		public Action getRoundedBracketClauseCSAction_0() { return cRoundedBracketClauseCSAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//(args+=ExpCS (','args+=ExpCS)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//args+=ExpCS
		public Assignment getArgsAssignment_2_0() { return cArgsAssignment_2_0; }
		
		//ExpCS
		public RuleCall getArgsExpCSParserRuleCall_2_0_0() { return cArgsExpCSParserRuleCall_2_0_0; }
		
		//(','args+=ExpCS)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//args+=ExpCS
		public Assignment getArgsAssignment_2_1_1() { return cArgsAssignment_2_1_1; }
		
		//ExpCS
		public RuleCall getArgsExpCSParserRuleCall_2_1_1_0() { return cArgsExpCSParserRuleCall_2_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class LiteralExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.LiteralExpCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntLiteralExpCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralExpCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanLiteralExpCSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//LiteralExpCS returns miniocl::LiteralExpCS:
		//    IntLiteralExpCS | StringLiteralExpCS | BooleanLiteralExpCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//IntLiteralExpCS | StringLiteralExpCS | BooleanLiteralExpCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntLiteralExpCS
		public RuleCall getIntLiteralExpCSParserRuleCall_0() { return cIntLiteralExpCSParserRuleCall_0; }
		
		//StringLiteralExpCS
		public RuleCall getStringLiteralExpCSParserRuleCall_1() { return cStringLiteralExpCSParserRuleCall_1; }
		
		//BooleanLiteralExpCS
		public RuleCall getBooleanLiteralExpCSParserRuleCall_2() { return cBooleanLiteralExpCSParserRuleCall_2; }
	}
	public class IntLiteralExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.IntLiteralExpCS");
		private final Assignment cIntSymbolAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIntSymbolINTTerminalRuleCall_0 = (RuleCall)cIntSymbolAssignment.eContents().get(0);
		
		//IntLiteralExpCS returns miniocl::IntLiteralExpCS:
		//    intSymbol=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//intSymbol=INT
		public Assignment getIntSymbolAssignment() { return cIntSymbolAssignment; }
		
		//INT
		public RuleCall getIntSymbolINTTerminalRuleCall_0() { return cIntSymbolINTTerminalRuleCall_0; }
	}
	public class StringLiteralExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.StringLiteralExpCS");
		private final Assignment cStringSymbolAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStringSymbolSTRINGTerminalRuleCall_0 = (RuleCall)cStringSymbolAssignment.eContents().get(0);
		
		//StringLiteralExpCS returns miniocl::StringLiteralExpCS:
		//    stringSymbol=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//stringSymbol=STRING
		public Assignment getStringSymbolAssignment() { return cStringSymbolAssignment; }
		
		//STRING
		public RuleCall getStringSymbolSTRINGTerminalRuleCall_0() { return cStringSymbolSTRINGTerminalRuleCall_0; }
	}
	public class BooleanLiteralExpCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.BooleanLiteralExpCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanExpCSAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cBoolSymbolAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cBoolSymbolTrueKeyword_1_0_0 = (Keyword)cBoolSymbolAssignment_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		
		//BooleanLiteralExpCS returns miniocl::BooleanLiteralExpCS:
		//    {miniocl::BooleanExpCS}
		//    (boolSymbol?='true'
		//    | 'false')
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{miniocl::BooleanExpCS}
		//(boolSymbol?='true'
		//| 'false')
		public Group getGroup() { return cGroup; }
		
		//{miniocl::BooleanExpCS}
		public Action getBooleanExpCSAction_0() { return cBooleanExpCSAction_0; }
		
		//(boolSymbol?='true'
		//| 'false')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//boolSymbol?='true'
		public Assignment getBoolSymbolAssignment_1_0() { return cBoolSymbolAssignment_1_0; }
		
		//'true'
		public Keyword getBoolSymbolTrueKeyword_1_0_0() { return cBoolSymbolTrueKeyword_1_0_0; }
		
		//'false'
		public Keyword getFalseKeyword_1_1() { return cFalseKeyword_1_1; }
	}
	public class PathNameCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.PathNameCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPathAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPathPathCSParserRuleCall_0_0 = (RuleCall)cPathAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPathAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPathPathCSParserRuleCall_1_1_0 = (RuleCall)cPathAssignment_1_1.eContents().get(0);
		
		//PathNameCS returns miniocl::PathNameCS:
		//    path+=PathCS
		//    ('::'path+=PathCS)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//path+=PathCS
		//('::'path+=PathCS)*
		public Group getGroup() { return cGroup; }
		
		//path+=PathCS
		public Assignment getPathAssignment_0() { return cPathAssignment_0; }
		
		//PathCS
		public RuleCall getPathPathCSParserRuleCall_0_0() { return cPathPathCSParserRuleCall_0_0; }
		
		//('::'path+=PathCS)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//path+=PathCS
		public Assignment getPathAssignment_1_1() { return cPathAssignment_1_1; }
		
		//PathCS
		public RuleCall getPathPathCSParserRuleCall_1_1_0() { return cPathPathCSParserRuleCall_1_1_0; }
	}
	public class NavigationPathNameCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationPathNameCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPathAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPathNavigationPathCSParserRuleCall_0_0 = (RuleCall)cPathAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPathAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPathNavigationPathCSParserRuleCall_1_1_0 = (RuleCall)cPathAssignment_1_1.eContents().get(0);
		
		//NavigationPathNameCS returns miniocl::NavigationPathNameCS:
		//    path+=NavigationPathCS
		//    ('::'path+=NavigationPathCS)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//path+=NavigationPathCS
		//('::'path+=NavigationPathCS)*
		public Group getGroup() { return cGroup; }
		
		//path+=NavigationPathCS
		public Assignment getPathAssignment_0() { return cPathAssignment_0; }
		
		//NavigationPathCS
		public RuleCall getPathNavigationPathCSParserRuleCall_0_0() { return cPathNavigationPathCSParserRuleCall_0_0; }
		
		//('::'path+=NavigationPathCS)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//path+=NavigationPathCS
		public Assignment getPathAssignment_1_1() { return cPathAssignment_1_1; }
		
		//NavigationPathCS
		public RuleCall getPathNavigationPathCSParserRuleCall_1_1_0() { return cPathNavigationPathCSParserRuleCall_1_1_0; }
	}
	public class PathCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.PathCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPathElementCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPathVariableCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PathCS returns miniocl::PathCS:
		//    PathElementCS | PathVariableCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PathElementCS | PathVariableCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PathElementCS
		public RuleCall getPathElementCSParserRuleCall_0() { return cPathElementCSParserRuleCall_0; }
		
		//PathVariableCS
		public RuleCall getPathVariableCSParserRuleCall_1() { return cPathVariableCSParserRuleCall_1; }
	}
	public class NavigationPathCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationPathCS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNavigationPathElementCSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNavigationPathVariableCSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NavigationPathCS returns miniocl::NavigationPathCS:
		//    NavigationPathElementCS | NavigationPathVariableCS
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NavigationPathElementCS | NavigationPathVariableCS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NavigationPathElementCS
		public RuleCall getNavigationPathElementCSParserRuleCall_0() { return cNavigationPathElementCSParserRuleCall_0; }
		
		//NavigationPathVariableCS
		public RuleCall getNavigationPathVariableCSParserRuleCall_1() { return cNavigationPathVariableCSParserRuleCall_1; }
	}
	public class PathElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.PathElementCS");
		private final Assignment cPathNameAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cPathNameEStructuralFeatureCrossReference_0 = (CrossReference)cPathNameAssignment.eContents().get(0);
		private final RuleCall cPathNameEStructuralFeatureIDTerminalRuleCall_0_1 = (RuleCall)cPathNameEStructuralFeatureCrossReference_0.eContents().get(1);
		
		//PathElementCS returns miniocl::PathElementCS:
		//    pathName=[ecore::EStructuralFeature|ID]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//pathName=[ecore::EStructuralFeature|ID]
		public Assignment getPathNameAssignment() { return cPathNameAssignment; }
		
		//[ecore::EStructuralFeature|ID]
		public CrossReference getPathNameEStructuralFeatureCrossReference_0() { return cPathNameEStructuralFeatureCrossReference_0; }
		
		//ID
		public RuleCall getPathNameEStructuralFeatureIDTerminalRuleCall_0_1() { return cPathNameEStructuralFeatureIDTerminalRuleCall_0_1; }
	}
	public class NavigationPathElementCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationPathElementCS");
		private final Assignment cPathNameAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cPathNameEStructuralFeatureCrossReference_0 = (CrossReference)cPathNameAssignment.eContents().get(0);
		private final RuleCall cPathNameEStructuralFeatureIDTerminalRuleCall_0_1 = (RuleCall)cPathNameEStructuralFeatureCrossReference_0.eContents().get(1);
		
		//NavigationPathElementCS returns miniocl::NavigationPathElementCS:
		//    pathName=[ecore::EStructuralFeature|ID]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//pathName=[ecore::EStructuralFeature|ID]
		public Assignment getPathNameAssignment() { return cPathNameAssignment; }
		
		//[ecore::EStructuralFeature|ID]
		public CrossReference getPathNameEStructuralFeatureCrossReference_0() { return cPathNameEStructuralFeatureCrossReference_0; }
		
		//ID
		public RuleCall getPathNameEStructuralFeatureIDTerminalRuleCall_0_1() { return cPathNameEStructuralFeatureIDTerminalRuleCall_0_1; }
	}
	public class PathVariableCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.PathVariableCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVarNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVarNameEStringParserRuleCall_1_0 = (RuleCall)cVarNameAssignment_1.eContents().get(0);
		
		//PathVariableCS returns miniocl::PathVariableCS:
		//    '$' varName=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'$' varName=EString
		public Group getGroup() { return cGroup; }
		
		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }
		
		//varName=EString
		public Assignment getVarNameAssignment_1() { return cVarNameAssignment_1; }
		
		//EString
		public RuleCall getVarNameEStringParserRuleCall_1_0() { return cVarNameEStringParserRuleCall_1_0; }
	}
	public class NavigationPathVariableCSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NavigationPathVariableCS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDollarSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVarNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVarNameEStringParserRuleCall_1_0 = (RuleCall)cVarNameAssignment_1.eContents().get(0);
		
		//NavigationPathVariableCS returns miniocl::NavigationPathVariableCS:
		//    '$' varName=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'$' varName=EString
		public Group getGroup() { return cGroup; }
		
		//'$'
		public Keyword getDollarSignKeyword_0() { return cDollarSignKeyword_0; }
		
		//varName=EString
		public Assignment getVarNameAssignment_1() { return cVarNameAssignment_1; }
		
		//EString
		public RuleCall getVarNameEStringParserRuleCall_1_0() { return cVarNameEStringParserRuleCall_1_0; }
	}
	public class MutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Mutator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateObjectMutatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSelectObjectMutatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSelectSampleMutatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCompositeMutatorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cModifySourceReferenceMutatorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cModifyTargetReferenceMutatorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCreateReferenceMutatorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRemoveObjectMutatorParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRemoveReferenceMutatorParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cModifyInformationMutatorParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCloneObjectMutatorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cRetypeObjectMutatorParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//Mutator returns Mutator:
		//    CreateObjectMutator | SelectObjectMutator | SelectSampleMutator | CompositeMutator | ModifySourceReferenceMutator | ModifyTargetReferenceMutator
		//     | CreateReferenceMutator | RemoveObjectMutator | RemoveReferenceMutator | ModifyInformationMutator | CloneObjectMutator | RetypeObjectMutator;
		@Override public ParserRule getRule() { return rule; }
		
		//CreateObjectMutator | SelectObjectMutator | SelectSampleMutator | CompositeMutator | ModifySourceReferenceMutator | ModifyTargetReferenceMutator
		// | CreateReferenceMutator | RemoveObjectMutator | RemoveReferenceMutator | ModifyInformationMutator | CloneObjectMutator | RetypeObjectMutator
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CreateObjectMutator
		public RuleCall getCreateObjectMutatorParserRuleCall_0() { return cCreateObjectMutatorParserRuleCall_0; }
		
		//SelectObjectMutator
		public RuleCall getSelectObjectMutatorParserRuleCall_1() { return cSelectObjectMutatorParserRuleCall_1; }
		
		//SelectSampleMutator
		public RuleCall getSelectSampleMutatorParserRuleCall_2() { return cSelectSampleMutatorParserRuleCall_2; }
		
		//CompositeMutator
		public RuleCall getCompositeMutatorParserRuleCall_3() { return cCompositeMutatorParserRuleCall_3; }
		
		//ModifySourceReferenceMutator
		public RuleCall getModifySourceReferenceMutatorParserRuleCall_4() { return cModifySourceReferenceMutatorParserRuleCall_4; }
		
		//ModifyTargetReferenceMutator
		public RuleCall getModifyTargetReferenceMutatorParserRuleCall_5() { return cModifyTargetReferenceMutatorParserRuleCall_5; }
		
		//CreateReferenceMutator
		public RuleCall getCreateReferenceMutatorParserRuleCall_6() { return cCreateReferenceMutatorParserRuleCall_6; }
		
		//RemoveObjectMutator
		public RuleCall getRemoveObjectMutatorParserRuleCall_7() { return cRemoveObjectMutatorParserRuleCall_7; }
		
		//RemoveReferenceMutator
		public RuleCall getRemoveReferenceMutatorParserRuleCall_8() { return cRemoveReferenceMutatorParserRuleCall_8; }
		
		//ModifyInformationMutator
		public RuleCall getModifyInformationMutatorParserRuleCall_9() { return cModifyInformationMutatorParserRuleCall_9; }
		
		//CloneObjectMutator
		public RuleCall getCloneObjectMutatorParserRuleCall_10() { return cCloneObjectMutatorParserRuleCall_10; }
		
		//RetypeObjectMutator
		public RuleCall getRetypeObjectMutatorParserRuleCall_11() { return cRetypeObjectMutatorParserRuleCall_11; }
	}
	public class ObSelectionStrategyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ObSelectionStrategy");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRandomSelectionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpecificSelectionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompleteSelectionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOtherSelectionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTypedSelectionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ObSelectionStrategy returns ObSelectionStrategy:
		//    RandomSelection | SpecificSelection | CompleteSelection | OtherSelection | TypedSelection;
		@Override public ParserRule getRule() { return rule; }
		
		//RandomSelection | SpecificSelection | CompleteSelection | OtherSelection | TypedSelection
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RandomSelection
		public RuleCall getRandomSelectionParserRuleCall_0() { return cRandomSelectionParserRuleCall_0; }
		
		//SpecificSelection
		public RuleCall getSpecificSelectionParserRuleCall_1() { return cSpecificSelectionParserRuleCall_1; }
		
		//CompleteSelection
		public RuleCall getCompleteSelectionParserRuleCall_2() { return cCompleteSelectionParserRuleCall_2; }
		
		//OtherSelection
		public RuleCall getOtherSelectionParserRuleCall_3() { return cOtherSelectionParserRuleCall_3; }
		
		//TypedSelection
		public RuleCall getTypedSelectionParserRuleCall_4() { return cTypedSelectionParserRuleCall_4; }
	}
	public class RandomSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomSelection");
		private final RuleCall cRandomTypeSelectionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RandomSelection returns RandomSelection:
		//    RandomTypeSelection;
		@Override public ParserRule getRule() { return rule; }
		
		//RandomTypeSelection
		public RuleCall getRandomTypeSelectionParserRuleCall() { return cRandomTypeSelectionParserRuleCall; }
	}
	public class SpecificSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificSelection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpecificObjectSelectionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpecificClosureSelectionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SpecificSelection returns SpecificSelection:
		//    SpecificObjectSelection | SpecificClosureSelection;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecificObjectSelection | SpecificClosureSelection
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpecificObjectSelection
		public RuleCall getSpecificObjectSelectionParserRuleCall_0() { return cSpecificObjectSelectionParserRuleCall_0; }
		
		//SpecificClosureSelection
		public RuleCall getSpecificClosureSelectionParserRuleCall_1() { return cSpecificClosureSelectionParserRuleCall_1; }
	}
	public class CompleteSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CompleteSelection");
		private final RuleCall cCompleteTypeSelectionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//CompleteSelection returns CompleteSelection:
		//    CompleteTypeSelection;
		@Override public ParserRule getRule() { return rule; }
		
		//CompleteTypeSelection
		public RuleCall getCompleteTypeSelectionParserRuleCall() { return cCompleteTypeSelectionParserRuleCall; }
	}
	public class OtherSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.OtherSelection");
		private final RuleCall cOtherTypeSelectionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//OtherSelection returns OtherSelection:
		//    OtherTypeSelection;
		@Override public ParserRule getRule() { return rule; }
		
		//OtherTypeSelection
		public RuleCall getOtherTypeSelectionParserRuleCall() { return cOtherTypeSelectionParserRuleCall; }
	}
	public class AttributeEvaluationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeEvaluationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjectAttributeTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AttributeEvaluationType returns AttributeEvaluationType:
		//    AttributeType | ObjectAttributeType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeType | ObjectAttributeType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeType
		public RuleCall getAttributeTypeParserRuleCall_0() { return cAttributeTypeParserRuleCall_0; }
		
		//ObjectAttributeType
		public RuleCall getObjectAttributeTypeParserRuleCall_1() { return cObjectAttributeTypeParserRuleCall_1; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumberTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cListStringTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRandomTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cListTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//AttributeType returns AttributeType:
		//    NumberType | BooleanType | StringType | ListStringType | RandomType | ListType;
		@Override public ParserRule getRule() { return rule; }
		
		//NumberType | BooleanType | StringType | ListStringType | RandomType | ListType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NumberType
		public RuleCall getNumberTypeParserRuleCall_0() { return cNumberTypeParserRuleCall_0; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_1() { return cBooleanTypeParserRuleCall_1; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_2() { return cStringTypeParserRuleCall_2; }
		
		//ListStringType
		public RuleCall getListStringTypeParserRuleCall_3() { return cListStringTypeParserRuleCall_3; }
		
		//RandomType
		public RuleCall getRandomTypeParserRuleCall_4() { return cRandomTypeParserRuleCall_4; }
		
		//ListType
		public RuleCall getListTypeParserRuleCall_5() { return cListTypeParserRuleCall_5; }
	}
	public class NumberTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.NumberType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntegerTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDoubleTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMinValueTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxValueTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRandomNumberTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//NumberType returns NumberType:
		//    IntegerType | DoubleType | MinValueType | MaxValueType | RandomNumberType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//IntegerType | DoubleType | MinValueType | MaxValueType | RandomNumberType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntegerType
		public RuleCall getIntegerTypeParserRuleCall_0() { return cIntegerTypeParserRuleCall_0; }
		
		//DoubleType
		public RuleCall getDoubleTypeParserRuleCall_1() { return cDoubleTypeParserRuleCall_1; }
		
		//MinValueType
		public RuleCall getMinValueTypeParserRuleCall_2() { return cMinValueTypeParserRuleCall_2; }
		
		//MaxValueType
		public RuleCall getMaxValueTypeParserRuleCall_3() { return cMaxValueTypeParserRuleCall_3; }
		
		//RandomNumberType
		public RuleCall getRandomNumberTypeParserRuleCall_4() { return cRandomNumberTypeParserRuleCall_4; }
	}
	public class RandomNumberTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomNumberType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRandomDoubleNumberTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomIntegerNumberTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RandomNumberType returns RandomNumberType:
		//    RandomDoubleNumberType | RandomIntegerNumberType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RandomDoubleNumberType | RandomIntegerNumberType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RandomDoubleNumberType
		public RuleCall getRandomDoubleNumberTypeParserRuleCall_0() { return cRandomDoubleNumberTypeParserRuleCall_0; }
		
		//RandomIntegerNumberType
		public RuleCall getRandomIntegerNumberTypeParserRuleCall_1() { return cRandomIntegerNumberTypeParserRuleCall_1; }
	}
	public class LoadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Load");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoadAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFileAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFileEStringParserRuleCall_2_0 = (RuleCall)cFileAssignment_2.eContents().get(0);
		
		//Load returns Load:
		//    {Load}
		//    'import' file=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Load}
		//'import' file=EString
		public Group getGroup() { return cGroup; }
		
		//{Load}
		public Action getLoadAction_0() { return cLoadAction_0; }
		
		//'import'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//file=EString
		public Assignment getFileAssignment_2() { return cFileAssignment_2; }
		
		//EString
		public RuleCall getFileEStringParserRuleCall_2_0() { return cFileEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    ("true" | "false");
		@Override public ParserRule getRule() { return rule; }
		
		//("true" | "false")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class BinaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.BinaryOperator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBinaryOperatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeLogicOperatorEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//BinaryOperator returns BinaryOperator:
		//    {BinaryOperator}
		//    type = LogicOperator
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{BinaryOperator}
		//type = LogicOperator
		public Group getGroup() { return cGroup; }
		
		//{BinaryOperator}
		public Action getBinaryOperatorAction_0() { return cBinaryOperatorAction_0; }
		
		//type = LogicOperator
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//LogicOperator
		public RuleCall getTypeLogicOperatorEnumRuleCall_1_0() { return cTypeLogicOperatorEnumRuleCall_1_0; }
	}
	public class AttributeEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeEvaluationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cNameEAttributeCrossReference_1_0 = (CrossReference)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameEAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cNameEAttributeCrossReference_1_0.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeEvaluationTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AttributeEvaluation returns AttributeEvaluation:
		//    {AttributeEvaluation}
		//    name=[ecore::EAttribute|ID]
		//    value=AttributeEvaluationType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{AttributeEvaluation}
		//name=[ecore::EAttribute|ID]
		//value=AttributeEvaluationType
		public Group getGroup() { return cGroup; }
		
		//{AttributeEvaluation}
		public Action getAttributeEvaluationAction_0() { return cAttributeEvaluationAction_0; }
		
		//name=[ecore::EAttribute|ID]
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getNameEAttributeCrossReference_1_0() { return cNameEAttributeCrossReference_1_0; }
		
		//ID
		public RuleCall getNameEAttributeIDTerminalRuleCall_1_0_1() { return cNameEAttributeIDTerminalRuleCall_1_0_1; }
		
		//value=AttributeEvaluationType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeEvaluationType
		public RuleCall getValueAttributeEvaluationTypeParserRuleCall_2_0() { return cValueAttributeEvaluationTypeParserRuleCall_2_0; }
	}
	public class ReferenceEvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceEvaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceEvaluationAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final CrossReference cNameEReferenceCrossReference_1_0_0 = (CrossReference)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cNameEReferenceIDTerminalRuleCall_1_0_0_1 = (RuleCall)cNameEReferenceCrossReference_1_0_0.eContents().get(1);
		private final Assignment cSelfAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cSelfSelfKeyword_1_1_0 = (Keyword)cSelfAssignment_1_1.eContents().get(0);
		private final Assignment cContainerAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final Keyword cContainerContainerKeyword_1_2_0 = (Keyword)cContainerAssignment_1_2.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFullStopKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cAttNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cAttNameEAttributeCrossReference_2_0_1_0 = (CrossReference)cAttNameAssignment_2_0_1.eContents().get(0);
		private final RuleCall cAttNameEAttributeIDTerminalRuleCall_2_0_1_0_1 = (RuleCall)cAttNameEAttributeCrossReference_2_0_1_0.eContents().get(1);
		private final Assignment cAttValueAssignment_2_0_2 = (Assignment)cGroup_2_0.eContents().get(2);
		private final RuleCall cAttValueAttributeEvaluationTypeParserRuleCall_2_0_2_0 = (RuleCall)cAttValueAssignment_2_0_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRefNameAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cRefNameEReferenceCrossReference_2_1_1_0 = (CrossReference)cRefNameAssignment_2_1_1.eContents().get(0);
		private final RuleCall cRefNameEReferenceIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cRefNameEReferenceCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cRefRefNameAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cRefRefNameEReferenceCrossReference_2_1_2_1_0 = (CrossReference)cRefRefNameAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cRefRefNameEReferenceIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cRefRefNameEReferenceCrossReference_2_1_2_1_0.eContents().get(1);
		private final Assignment cOperatorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOperatorOperatorEnumRuleCall_3_0 = (RuleCall)cOperatorAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cValueObSelectionStrategyParserRuleCall_4_0_0 = (RuleCall)cValueAssignment_4_0.eContents().get(0);
		private final Keyword cNullKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//ReferenceEvaluation returns ReferenceEvaluation:
		//    {ReferenceEvaluation}
		//    (name=[ecore::EReference|ID] | self?='self' | container ?= 'container')
		//    (('.' attName=[ecore::EAttribute|ID] attValue=AttributeEvaluationType)
		//        | ('->' refName=[ecore::EReference|ID] ('->' refRefName=[ecore::EReference|ID])?)?) operator=Operator (value=ObSelectionStrategy | 'null' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ReferenceEvaluation}
		//(name=[ecore::EReference|ID] | self?='self' | container ?= 'container')
		//(('.' attName=[ecore::EAttribute|ID] attValue=AttributeEvaluationType)
		//    | ('->' refName=[ecore::EReference|ID] ('->' refRefName=[ecore::EReference|ID])?)?) operator=Operator (value=ObSelectionStrategy | 'null' )
		public Group getGroup() { return cGroup; }
		
		//{ReferenceEvaluation}
		public Action getReferenceEvaluationAction_0() { return cReferenceEvaluationAction_0; }
		
		//(name=[ecore::EReference|ID] | self?='self' | container ?= 'container')
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//name=[ecore::EReference|ID]
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//[ecore::EReference|ID]
		public CrossReference getNameEReferenceCrossReference_1_0_0() { return cNameEReferenceCrossReference_1_0_0; }
		
		//ID
		public RuleCall getNameEReferenceIDTerminalRuleCall_1_0_0_1() { return cNameEReferenceIDTerminalRuleCall_1_0_0_1; }
		
		//self?='self'
		public Assignment getSelfAssignment_1_1() { return cSelfAssignment_1_1; }
		
		//'self'
		public Keyword getSelfSelfKeyword_1_1_0() { return cSelfSelfKeyword_1_1_0; }
		
		//container ?= 'container'
		public Assignment getContainerAssignment_1_2() { return cContainerAssignment_1_2; }
		
		//'container'
		public Keyword getContainerContainerKeyword_1_2_0() { return cContainerContainerKeyword_1_2_0; }
		
		//(('.' attName=[ecore::EAttribute|ID] attValue=AttributeEvaluationType)
		//    | ('->' refName=[ecore::EReference|ID] ('->' refRefName=[ecore::EReference|ID])?)?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//('.' attName=[ecore::EAttribute|ID] attValue=AttributeEvaluationType)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0_0() { return cFullStopKeyword_2_0_0; }
		
		//attName=[ecore::EAttribute|ID]
		public Assignment getAttNameAssignment_2_0_1() { return cAttNameAssignment_2_0_1; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttNameEAttributeCrossReference_2_0_1_0() { return cAttNameEAttributeCrossReference_2_0_1_0; }
		
		//ID
		public RuleCall getAttNameEAttributeIDTerminalRuleCall_2_0_1_0_1() { return cAttNameEAttributeIDTerminalRuleCall_2_0_1_0_1; }
		
		//attValue=AttributeEvaluationType
		public Assignment getAttValueAssignment_2_0_2() { return cAttValueAssignment_2_0_2; }
		
		//AttributeEvaluationType
		public RuleCall getAttValueAttributeEvaluationTypeParserRuleCall_2_0_2_0() { return cAttValueAttributeEvaluationTypeParserRuleCall_2_0_2_0; }
		
		//('->' refName=[ecore::EReference|ID] ('->' refRefName=[ecore::EReference|ID])?)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_1_0() { return cHyphenMinusGreaterThanSignKeyword_2_1_0; }
		
		//refName=[ecore::EReference|ID]
		public Assignment getRefNameAssignment_2_1_1() { return cRefNameAssignment_2_1_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefNameEReferenceCrossReference_2_1_1_0() { return cRefNameEReferenceCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getRefNameEReferenceIDTerminalRuleCall_2_1_1_0_1() { return cRefNameEReferenceIDTerminalRuleCall_2_1_1_0_1; }
		
		//('->' refRefName=[ecore::EReference|ID])?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_1_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_1_2_0; }
		
		//refRefName=[ecore::EReference|ID]
		public Assignment getRefRefNameAssignment_2_1_2_1() { return cRefRefNameAssignment_2_1_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefNameEReferenceCrossReference_2_1_2_1_0() { return cRefRefNameEReferenceCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getRefRefNameEReferenceIDTerminalRuleCall_2_1_2_1_0_1() { return cRefRefNameEReferenceIDTerminalRuleCall_2_1_2_1_0_1; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_3() { return cOperatorAssignment_3; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_3_0() { return cOperatorOperatorEnumRuleCall_3_0; }
		
		//(value=ObSelectionStrategy | 'null' )
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//value=ObSelectionStrategy
		public Assignment getValueAssignment_4_0() { return cValueAssignment_4_0; }
		
		//ObSelectionStrategy
		public RuleCall getValueObSelectionStrategyParserRuleCall_4_0_0() { return cValueObSelectionStrategyParserRuleCall_4_0_0; }
		
		//'null'
		public Keyword getNullKeyword_4_1() { return cNullKeyword_4_1; }
	}
	public class EvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Evaluation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeEvaluationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceEvaluationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Evaluation returns Evaluation:
		//    AttributeEvaluation | ReferenceEvaluation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeEvaluation | ReferenceEvaluation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeEvaluation
		public RuleCall getAttributeEvaluationParserRuleCall_0() { return cAttributeEvaluationParserRuleCall_0; }
		
		//ReferenceEvaluation
		public RuleCall getReferenceEvaluationParserRuleCall_1() { return cReferenceEvaluationParserRuleCall_1; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cFirstAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFirstEvaluationParserRuleCall_1_0 = (RuleCall)cFirstAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cOperatorAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOperatorBinaryOperatorParserRuleCall_2_0_0 = (RuleCall)cOperatorAssignment_2_0.eContents().get(0);
		private final Assignment cSecondAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSecondEvaluationParserRuleCall_2_1_0 = (RuleCall)cSecondAssignment_2_1.eContents().get(0);
		
		//Expression returns Expression:
		//    {Expression}
		//    first=Evaluation (operator+=BinaryOperator second+=Evaluation)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Expression}
		//first=Evaluation (operator+=BinaryOperator second+=Evaluation)*
		public Group getGroup() { return cGroup; }
		
		//{Expression}
		public Action getExpressionAction_0() { return cExpressionAction_0; }
		
		//first=Evaluation
		public Assignment getFirstAssignment_1() { return cFirstAssignment_1; }
		
		//Evaluation
		public RuleCall getFirstEvaluationParserRuleCall_1_0() { return cFirstEvaluationParserRuleCall_1_0; }
		
		//(operator+=BinaryOperator second+=Evaluation)*
		public Group getGroup_2() { return cGroup_2; }
		
		//operator+=BinaryOperator
		public Assignment getOperatorAssignment_2_0() { return cOperatorAssignment_2_0; }
		
		//BinaryOperator
		public RuleCall getOperatorBinaryOperatorParserRuleCall_2_0_0() { return cOperatorBinaryOperatorParserRuleCall_2_0_0; }
		
		//second+=Evaluation
		public Assignment getSecondAssignment_2_1() { return cSecondAssignment_2_1; }
		
		//Evaluation
		public RuleCall getSecondEvaluationParserRuleCall_2_1_0() { return cSecondEvaluationParserRuleCall_2_1_0; }
	}
	public class RemoveObjectMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RemoveObjectMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRemoveObjectMutatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRemoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_2_0 = (RuleCall)cObjectAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContainerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_3_1_0 = (RuleCall)cContainerAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Assignment cMinAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_4_1_0_0 = (RuleCall)cMinAssignment_4_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cMaxAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_4_2_0 = (RuleCall)cMaxAssignment_4_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		///*
		//RemoveObjectMutator returns RemoveObjectMutator:
		//    'remove' object=ObSelectionStrategy
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		//RemoveReferenceMutator returns RemoveReferenceMutator:
		//    'remove' 'reference' refType=[ecore::EReference|ID]
		//    'in' container=ObSelectionStrategy
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		//*/
		//RemoveObjectMutator returns RemoveObjectMutator:
		//    {RemoveObjectMutator}
		//    'remove' object=ObSelectionStrategy ('from' container=ObSelectionStrategy)?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RemoveObjectMutator}
		//'remove' object=ObSelectionStrategy ('from' container=ObSelectionStrategy)?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//{RemoveObjectMutator}
		public Action getRemoveObjectMutatorAction_0() { return cRemoveObjectMutatorAction_0; }
		
		//'remove'
		public Keyword getRemoveKeyword_1() { return cRemoveKeyword_1; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_2_0() { return cObjectObSelectionStrategyParserRuleCall_2_0; }
		
		//('from' container=ObSelectionStrategy)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'from'
		public Keyword getFromKeyword_3_0() { return cFromKeyword_3_0; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_3_1() { return cContainerAssignment_3_1; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_3_1_0() { return cContainerObSelectionStrategyParserRuleCall_3_1_0; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//(min=EInt '..')?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//min=EInt
		public Assignment getMinAssignment_4_1_0() { return cMinAssignment_4_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_4_1_0_0() { return cMinEIntParserRuleCall_4_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_1_1() { return cFullStopFullStopKeyword_4_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_4_2() { return cMaxAssignment_4_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_4_2_0() { return cMaxMaxCardinalityParserRuleCall_4_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }
	}
	public class RemoveReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RemoveReferenceMutator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRemoveRandomReferenceMutatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRemoveSpecificReferenceMutatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRemoveCompleteReferenceMutatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//RemoveReferenceMutator returns RemoveReferenceMutator:
		//    RemoveRandomReferenceMutator | RemoveSpecificReferenceMutator | RemoveCompleteReferenceMutator;
		@Override public ParserRule getRule() { return rule; }
		
		//RemoveRandomReferenceMutator | RemoveSpecificReferenceMutator | RemoveCompleteReferenceMutator
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RemoveRandomReferenceMutator
		public RuleCall getRemoveRandomReferenceMutatorParserRuleCall_0() { return cRemoveRandomReferenceMutatorParserRuleCall_0; }
		
		//RemoveSpecificReferenceMutator
		public RuleCall getRemoveSpecificReferenceMutatorParserRuleCall_1() { return cRemoveSpecificReferenceMutatorParserRuleCall_1; }
		
		//RemoveCompleteReferenceMutator
		public RuleCall getRemoveCompleteReferenceMutatorParserRuleCall_2() { return cRemoveCompleteReferenceMutatorParserRuleCall_2; }
	}
	public class RemoveRandomReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RemoveRandomReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRemoveRandomReferenceMutatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRemoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOneKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReferenceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRefTypeEReferenceCrossReference_4_0 = (CrossReference)cRefTypeAssignment_4.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_4_0.eContents().get(1);
		private final Keyword cInKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTypeEClassCrossReference_6_0 = (CrossReference)cTypeAssignment_6.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_6_0_1 = (RuleCall)cTypeEClassCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Assignment cMinAssignment_7_1_0 = (Assignment)cGroup_7_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_7_1_0_0 = (RuleCall)cMinAssignment_7_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_7_1_1 = (Keyword)cGroup_7_1.eContents().get(1);
		private final Assignment cMaxAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_7_2_0 = (RuleCall)cMaxAssignment_7_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//RemoveRandomReferenceMutator returns RemoveRandomReferenceMutator:
		//    {RemoveRandomReferenceMutator}
		//    'remove' 'one' 'reference' refType=[ecore::EReference|ID]
		//    'in' type=[ecore::EClass|ID]
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RemoveRandomReferenceMutator}
		//'remove' 'one' 'reference' refType=[ecore::EReference|ID]
		//'in' type=[ecore::EClass|ID]
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//{RemoveRandomReferenceMutator}
		public Action getRemoveRandomReferenceMutatorAction_0() { return cRemoveRandomReferenceMutatorAction_0; }
		
		//'remove'
		public Keyword getRemoveKeyword_1() { return cRemoveKeyword_1; }
		
		//'one'
		public Keyword getOneKeyword_2() { return cOneKeyword_2; }
		
		//'reference'
		public Keyword getReferenceKeyword_3() { return cReferenceKeyword_3; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_4() { return cRefTypeAssignment_4; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_4_0() { return cRefTypeEReferenceCrossReference_4_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_4_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_4_0_1; }
		
		//'in'
		public Keyword getInKeyword_5() { return cInKeyword_5; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_6_0() { return cTypeEClassCrossReference_6_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_6_0_1() { return cTypeEClassIDTerminalRuleCall_6_0_1; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_0() { return cLeftSquareBracketKeyword_7_0; }
		
		//(min=EInt '..')?
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//min=EInt
		public Assignment getMinAssignment_7_1_0() { return cMinAssignment_7_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_7_1_0_0() { return cMinEIntParserRuleCall_7_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_7_1_1() { return cFullStopFullStopKeyword_7_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_7_2() { return cMaxAssignment_7_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_7_2_0() { return cMaxMaxCardinalityParserRuleCall_7_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_3() { return cRightSquareBracketKeyword_7_3; }
	}
	public class RemoveSpecificReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RemoveSpecificReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRemoveSpecificReferenceMutatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRemoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cReferenceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRefTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRefTypeEReferenceCrossReference_3_0 = (CrossReference)cRefTypeAssignment_3.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_3_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_3_0.eContents().get(1);
		private final Keyword cInKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContainerAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_5_0 = (RuleCall)cContainerAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Assignment cMinAssignment_6_1_0 = (Assignment)cGroup_6_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_6_1_0_0 = (RuleCall)cMinAssignment_6_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cMaxAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_6_2_0 = (RuleCall)cMaxAssignment_6_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//RemoveSpecificReferenceMutator returns RemoveSpecificReferenceMutator:
		//    {RemoveSpecificReferenceMutator}
		//    'remove' 'reference' refType=[ecore::EReference|ID]
		//    'in' container=ObSelectionStrategy
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RemoveSpecificReferenceMutator}
		//'remove' 'reference' refType=[ecore::EReference|ID]
		//'in' container=ObSelectionStrategy
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//{RemoveSpecificReferenceMutator}
		public Action getRemoveSpecificReferenceMutatorAction_0() { return cRemoveSpecificReferenceMutatorAction_0; }
		
		//'remove'
		public Keyword getRemoveKeyword_1() { return cRemoveKeyword_1; }
		
		//'reference'
		public Keyword getReferenceKeyword_2() { return cReferenceKeyword_2; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_3() { return cRefTypeAssignment_3; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_3_0() { return cRefTypeEReferenceCrossReference_3_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_3_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_3_0_1; }
		
		//'in'
		public Keyword getInKeyword_4() { return cInKeyword_4; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_5() { return cContainerAssignment_5; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_5_0() { return cContainerObSelectionStrategyParserRuleCall_5_0; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//(min=EInt '..')?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//min=EInt
		public Assignment getMinAssignment_6_1_0() { return cMinAssignment_6_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_6_1_0_0() { return cMinEIntParserRuleCall_6_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_6_1_1() { return cFullStopFullStopKeyword_6_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_6_2() { return cMaxAssignment_6_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_6_2_0() { return cMaxMaxCardinalityParserRuleCall_6_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }
	}
	public class RemoveCompleteReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RemoveCompleteReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRemoveCompleteReferenceMutatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRemoveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAllKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReferenceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRefTypeEReferenceCrossReference_4_0 = (CrossReference)cRefTypeAssignment_4.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_4_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_4_0.eContents().get(1);
		private final Keyword cInKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTypeEClassCrossReference_6_0 = (CrossReference)cTypeAssignment_6.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_6_0_1 = (RuleCall)cTypeEClassCrossReference_6_0.eContents().get(1);
		
		//RemoveCompleteReferenceMutator returns RemoveCompleteReferenceMutator:
		//    {RemoveCompleteReferenceMutator}
		//    'remove' 'all' 'reference' refType=[ecore::EReference|ID]
		//    'in' type=[ecore::EClass|ID]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RemoveCompleteReferenceMutator}
		//'remove' 'all' 'reference' refType=[ecore::EReference|ID]
		//'in' type=[ecore::EClass|ID]
		public Group getGroup() { return cGroup; }
		
		//{RemoveCompleteReferenceMutator}
		public Action getRemoveCompleteReferenceMutatorAction_0() { return cRemoveCompleteReferenceMutatorAction_0; }
		
		//'remove'
		public Keyword getRemoveKeyword_1() { return cRemoveKeyword_1; }
		
		//'all'
		public Keyword getAllKeyword_2() { return cAllKeyword_2; }
		
		//'reference'
		public Keyword getReferenceKeyword_3() { return cReferenceKeyword_3; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_4() { return cRefTypeAssignment_4; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_4_0() { return cRefTypeEReferenceCrossReference_4_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_4_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_4_0_1; }
		
		//'in'
		public Keyword getInKeyword_5() { return cInKeyword_5; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_6_0() { return cTypeEClassCrossReference_6_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_6_0_1() { return cTypeEClassIDTerminalRuleCall_6_0_1; }
	}
	public class CreateObjectMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CreateObjectMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cCreateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeEClassCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeEClassCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContainerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_3_1_0 = (RuleCall)cContainerAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWithKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Alternatives cAlternatives_4_2 = (Alternatives)cGroup_4.eContents().get(2);
		private final Assignment cAttributesAssignment_4_2_0 = (Assignment)cAlternatives_4_2.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_4_2_0_0 = (RuleCall)cAttributesAssignment_4_2_0.eContents().get(0);
		private final Assignment cReferencesAssignment_4_2_1 = (Assignment)cAlternatives_4_2.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_4_2_1_0 = (RuleCall)cReferencesAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Alternatives cAlternatives_4_3_1 = (Alternatives)cGroup_4_3.eContents().get(1);
		private final Assignment cAttributesAssignment_4_3_1_0 = (Assignment)cAlternatives_4_3_1.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_4_3_1_0_0 = (RuleCall)cAttributesAssignment_4_3_1_0.eContents().get(0);
		private final Assignment cReferencesAssignment_4_3_1_1 = (Assignment)cAlternatives_4_3_1.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_4_3_1_1_0 = (RuleCall)cReferencesAssignment_4_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Assignment cMinAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_5_1_0_0 = (RuleCall)cMinAssignment_5_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cMaxAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_5_2_0 = (RuleCall)cMaxAssignment_5_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//CreateObjectMutator returns CreateObjectMutator:
		//    (name=ID '=')? 'create' type=[ecore::EClass|ID]
		//    ('in' container=ObSelectionStrategy)?
		//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? 'create' type=[ecore::EClass|ID]
		//('in' container=ObSelectionStrategy)?
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//'create'
		public Keyword getCreateKeyword_1() { return cCreateKeyword_1; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_2_0() { return cTypeEClassCrossReference_2_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_2_0_1() { return cTypeEClassIDTerminalRuleCall_2_0_1; }
		
		//('in' container=ObSelectionStrategy)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'in'
		public Keyword getInKeyword_3_0() { return cInKeyword_3_0; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_3_1() { return cContainerAssignment_3_1; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_3_1_0() { return cContainerObSelectionStrategyParserRuleCall_3_1_0; }
		
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'with'
		public Keyword getWithKeyword_4_0() { return cWithKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)?
		public Alternatives getAlternatives_4_2() { return cAlternatives_4_2; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_4_2_0() { return cAttributesAssignment_4_2_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_4_2_0_0() { return cAttributesAttributeSetParserRuleCall_4_2_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_4_2_1() { return cReferencesAssignment_4_2_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_4_2_1_0() { return cReferencesReferenceSetParserRuleCall_4_2_1_0; }
		
		//( "," (attributes+=AttributeSet | references+=ReferenceSet))*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)
		public Alternatives getAlternatives_4_3_1() { return cAlternatives_4_3_1; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_4_3_1_0() { return cAttributesAssignment_4_3_1_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_4_3_1_0_0() { return cAttributesAttributeSetParserRuleCall_4_3_1_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_4_3_1_1() { return cReferencesAssignment_4_3_1_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_4_3_1_1_0() { return cReferencesReferenceSetParserRuleCall_4_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//(min=EInt '..')?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//min=EInt
		public Assignment getMinAssignment_5_1_0() { return cMinAssignment_5_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_5_1_0_0() { return cMinEIntParserRuleCall_5_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_5_1_1() { return cFullStopFullStopKeyword_5_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_5_2() { return cMaxAssignment_5_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_5_2_0() { return cMaxMaxCardinalityParserRuleCall_5_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_3() { return cRightSquareBracketKeyword_5_3; }
	}
	public class SelectObjectMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SelectObjectMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_3_0 = (RuleCall)cObjectAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cContainerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_4_1_0 = (RuleCall)cContainerAssignment_4_1.eContents().get(0);
		
		//SelectObjectMutator returns SelectObjectMutator:
		//    name=ID '=' 'select' object=ObSelectionStrategy
		//    ('in' container=ObSelectionStrategy)?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' 'select' object=ObSelectionStrategy
		//('in' container=ObSelectionStrategy)?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//'select'
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_3() { return cObjectAssignment_3; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_3_0() { return cObjectObSelectionStrategyParserRuleCall_3_0; }
		
		//('in' container=ObSelectionStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'in'
		public Keyword getInKeyword_4_0() { return cInKeyword_4_0; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_4_1() { return cContainerAssignment_4_1; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_4_1_0() { return cContainerObSelectionStrategyParserRuleCall_4_1_0; }
	}
	public class SelectSampleMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SelectSampleMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSelectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSampleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cObjectAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_5_0 = (RuleCall)cObjectAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWithKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cClauseAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cClauseSampleClauseEnumRuleCall_6_1_0 = (RuleCall)cClauseAssignment_6_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cFeaturesAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cFeaturesEStructuralFeatureCrossReference_6_3_0 = (CrossReference)cFeaturesAssignment_6_3.eContents().get(0);
		private final RuleCall cFeaturesEStructuralFeatureIDTerminalRuleCall_6_3_0_1 = (RuleCall)cFeaturesEStructuralFeatureCrossReference_6_3_0.eContents().get(1);
		private final Group cGroup_6_4 = (Group)cGroup_6.eContents().get(4);
		private final Keyword cCommaKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Assignment cFeaturesAssignment_6_4_1 = (Assignment)cGroup_6_4.eContents().get(1);
		private final CrossReference cFeaturesEStructuralFeatureCrossReference_6_4_1_0 = (CrossReference)cFeaturesAssignment_6_4_1.eContents().get(0);
		private final RuleCall cFeaturesEStructuralFeatureIDTerminalRuleCall_6_4_1_0_1 = (RuleCall)cFeaturesEStructuralFeatureCrossReference_6_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		
		//SelectSampleMutator returns SelectSampleMutator:
		//    name=ID '=' 'select' 'sample'
		//    'from' object=ObSelectionStrategy
		//    ('with' clause=SampleClause
		//    '{' (features+=[ecore::EStructuralFeature|ID])? ("," features+=[ecore::EStructuralFeature|ID])* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' 'select' 'sample'
		//'from' object=ObSelectionStrategy
		//('with' clause=SampleClause
		//'{' (features+=[ecore::EStructuralFeature|ID])? ("," features+=[ecore::EStructuralFeature|ID])* '}' )?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//'select'
		public Keyword getSelectKeyword_2() { return cSelectKeyword_2; }
		
		//'sample'
		public Keyword getSampleKeyword_3() { return cSampleKeyword_3; }
		
		//'from'
		public Keyword getFromKeyword_4() { return cFromKeyword_4; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_5() { return cObjectAssignment_5; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_5_0() { return cObjectObSelectionStrategyParserRuleCall_5_0; }
		
		//('with' clause=SampleClause
		//'{' (features+=[ecore::EStructuralFeature|ID])? ("," features+=[ecore::EStructuralFeature|ID])* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'with'
		public Keyword getWithKeyword_6_0() { return cWithKeyword_6_0; }
		
		//clause=SampleClause
		public Assignment getClauseAssignment_6_1() { return cClauseAssignment_6_1; }
		
		//SampleClause
		public RuleCall getClauseSampleClauseEnumRuleCall_6_1_0() { return cClauseSampleClauseEnumRuleCall_6_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_2() { return cLeftCurlyBracketKeyword_6_2; }
		
		//(features+=[ecore::EStructuralFeature|ID])?
		public Assignment getFeaturesAssignment_6_3() { return cFeaturesAssignment_6_3; }
		
		//[ecore::EStructuralFeature|ID]
		public CrossReference getFeaturesEStructuralFeatureCrossReference_6_3_0() { return cFeaturesEStructuralFeatureCrossReference_6_3_0; }
		
		//ID
		public RuleCall getFeaturesEStructuralFeatureIDTerminalRuleCall_6_3_0_1() { return cFeaturesEStructuralFeatureIDTerminalRuleCall_6_3_0_1; }
		
		//("," features+=[ecore::EStructuralFeature|ID])*
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//","
		public Keyword getCommaKeyword_6_4_0() { return cCommaKeyword_6_4_0; }
		
		//features+=[ecore::EStructuralFeature|ID]
		public Assignment getFeaturesAssignment_6_4_1() { return cFeaturesAssignment_6_4_1; }
		
		//[ecore::EStructuralFeature|ID]
		public CrossReference getFeaturesEStructuralFeatureCrossReference_6_4_1_0() { return cFeaturesEStructuralFeatureCrossReference_6_4_1_0; }
		
		//ID
		public RuleCall getFeaturesEStructuralFeatureIDTerminalRuleCall_6_4_1_0_1() { return cFeaturesEStructuralFeatureIDTerminalRuleCall_6_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_5() { return cRightCurlyBracketKeyword_6_5; }
	}
	public class ModifyInformationMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ModifyInformationMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cModifyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_2_0 = (RuleCall)cObjectAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWithKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Alternatives cAlternatives_3_2 = (Alternatives)cGroup_3.eContents().get(2);
		private final Assignment cAttributesAssignment_3_2_0 = (Assignment)cAlternatives_3_2.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_3_2_0_0 = (RuleCall)cAttributesAssignment_3_2_0.eContents().get(0);
		private final Assignment cReferencesAssignment_3_2_1 = (Assignment)cAlternatives_3_2.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_3_2_1_0 = (RuleCall)cReferencesAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Alternatives cAlternatives_3_3_1 = (Alternatives)cGroup_3_3.eContents().get(1);
		private final Assignment cAttributesAssignment_3_3_1_0 = (Assignment)cAlternatives_3_3_1.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_3_3_1_0_0 = (RuleCall)cAttributesAssignment_3_3_1_0.eContents().get(0);
		private final Assignment cReferencesAssignment_3_3_1_1 = (Assignment)cAlternatives_3_3_1.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_3_3_1_1_0 = (RuleCall)cReferencesAssignment_3_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Assignment cMinAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_4_1_0_0 = (RuleCall)cMinAssignment_4_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cMaxAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_4_2_0 = (RuleCall)cMaxAssignment_4_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//ModifyInformationMutator returns ModifyInformationMutator:
		//    (name=ID '=')? 'modify' object=ObSelectionStrategy
		//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? 'modify' object=ObSelectionStrategy
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//'modify'
		public Keyword getModifyKeyword_1() { return cModifyKeyword_1; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_2_0() { return cObjectObSelectionStrategyParserRuleCall_2_0; }
		
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'with'
		public Keyword getWithKeyword_3_0() { return cWithKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)?
		public Alternatives getAlternatives_3_2() { return cAlternatives_3_2; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_3_2_0() { return cAttributesAssignment_3_2_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_3_2_0_0() { return cAttributesAttributeSetParserRuleCall_3_2_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_3_2_1() { return cReferencesAssignment_3_2_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_3_2_1_0() { return cReferencesReferenceSetParserRuleCall_3_2_1_0; }
		
		//( "," (attributes+=AttributeSet | references+=ReferenceSet))*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)
		public Alternatives getAlternatives_3_3_1() { return cAlternatives_3_3_1; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_3_3_1_0() { return cAttributesAssignment_3_3_1_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_3_3_1_0_0() { return cAttributesAttributeSetParserRuleCall_3_3_1_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_3_3_1_1() { return cReferencesAssignment_3_3_1_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_3_3_1_1_0() { return cReferencesReferenceSetParserRuleCall_3_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//(min=EInt '..')?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//min=EInt
		public Assignment getMinAssignment_4_1_0() { return cMinAssignment_4_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_4_1_0_0() { return cMinEIntParserRuleCall_4_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_1_1() { return cFullStopFullStopKeyword_4_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_4_2() { return cMaxAssignment_4_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_4_2_0() { return cMaxMaxCardinalityParserRuleCall_4_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }
	}
	public class CreateReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CreateReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cCreateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cReferenceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRefTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRefTypeEReferenceCrossReference_3_0 = (CrossReference)cRefTypeAssignment_3.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_3_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTargetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTargetObSelectionStrategyParserRuleCall_4_1_0 = (RuleCall)cTargetAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSourceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSourceObSelectionStrategyParserRuleCall_5_1_0 = (RuleCall)cSourceAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Assignment cMinAssignment_6_1_0 = (Assignment)cGroup_6_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_6_1_0_0 = (RuleCall)cMinAssignment_6_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cMaxAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_6_2_0 = (RuleCall)cMaxAssignment_6_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//CreateReferenceMutator returns CreateReferenceMutator:
		//    (name=ID '=')? 'create' 'reference' refType=[ecore::EReference|ID]
		//    ('to' target=ObSelectionStrategy)?
		//    ('in' source=ObSelectionStrategy)?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? 'create' 'reference' refType=[ecore::EReference|ID]
		//('to' target=ObSelectionStrategy)?
		//('in' source=ObSelectionStrategy)?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//'create'
		public Keyword getCreateKeyword_1() { return cCreateKeyword_1; }
		
		//'reference'
		public Keyword getReferenceKeyword_2() { return cReferenceKeyword_2; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_3() { return cRefTypeAssignment_3; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_3_0() { return cRefTypeEReferenceCrossReference_3_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_3_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_3_0_1; }
		
		//('to' target=ObSelectionStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'to'
		public Keyword getToKeyword_4_0() { return cToKeyword_4_0; }
		
		//target=ObSelectionStrategy
		public Assignment getTargetAssignment_4_1() { return cTargetAssignment_4_1; }
		
		//ObSelectionStrategy
		public RuleCall getTargetObSelectionStrategyParserRuleCall_4_1_0() { return cTargetObSelectionStrategyParserRuleCall_4_1_0; }
		
		//('in' source=ObSelectionStrategy)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'in'
		public Keyword getInKeyword_5_0() { return cInKeyword_5_0; }
		
		//source=ObSelectionStrategy
		public Assignment getSourceAssignment_5_1() { return cSourceAssignment_5_1; }
		
		//ObSelectionStrategy
		public RuleCall getSourceObSelectionStrategyParserRuleCall_5_1_0() { return cSourceObSelectionStrategyParserRuleCall_5_1_0; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//(min=EInt '..')?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//min=EInt
		public Assignment getMinAssignment_6_1_0() { return cMinAssignment_6_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_6_1_0_0() { return cMinEIntParserRuleCall_6_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_6_1_1() { return cFullStopFullStopKeyword_6_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_6_2() { return cMaxAssignment_6_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_6_2_0() { return cMaxMaxCardinalityParserRuleCall_6_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }
	}
	public class ModifySourceReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ModifySourceReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModifyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefTypeEReferenceCrossReference_2_0 = (CrossReference)cRefTypeAssignment_2.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_2_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceObSelectionStrategyParserRuleCall_3_1_0 = (RuleCall)cSourceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNewSourceAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNewSourceObSelectionStrategyParserRuleCall_4_1_0 = (RuleCall)cNewSourceAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Assignment cMinAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_5_1_0_0 = (RuleCall)cMinAssignment_5_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cMaxAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_5_2_0 = (RuleCall)cMaxAssignment_5_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//ModifySourceReferenceMutator returns ModifySourceReferenceMutator:
		//    'modify' 'source' refType=[ecore::EReference|ID]
		//    ('from' source=ObSelectionStrategy)?
		//    ('to' newSource=ObSelectionStrategy)?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'modify' 'source' refType=[ecore::EReference|ID]
		//('from' source=ObSelectionStrategy)?
		//('to' newSource=ObSelectionStrategy)?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//'modify'
		public Keyword getModifyKeyword_0() { return cModifyKeyword_0; }
		
		//'source'
		public Keyword getSourceKeyword_1() { return cSourceKeyword_1; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_2() { return cRefTypeAssignment_2; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_2_0() { return cRefTypeEReferenceCrossReference_2_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_2_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_2_0_1; }
		
		//('from' source=ObSelectionStrategy)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'from'
		public Keyword getFromKeyword_3_0() { return cFromKeyword_3_0; }
		
		//source=ObSelectionStrategy
		public Assignment getSourceAssignment_3_1() { return cSourceAssignment_3_1; }
		
		//ObSelectionStrategy
		public RuleCall getSourceObSelectionStrategyParserRuleCall_3_1_0() { return cSourceObSelectionStrategyParserRuleCall_3_1_0; }
		
		//('to' newSource=ObSelectionStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'to'
		public Keyword getToKeyword_4_0() { return cToKeyword_4_0; }
		
		//newSource=ObSelectionStrategy
		public Assignment getNewSourceAssignment_4_1() { return cNewSourceAssignment_4_1; }
		
		//ObSelectionStrategy
		public RuleCall getNewSourceObSelectionStrategyParserRuleCall_4_1_0() { return cNewSourceObSelectionStrategyParserRuleCall_4_1_0; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//(min=EInt '..')?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//min=EInt
		public Assignment getMinAssignment_5_1_0() { return cMinAssignment_5_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_5_1_0_0() { return cMinEIntParserRuleCall_5_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_5_1_1() { return cFullStopFullStopKeyword_5_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_5_2() { return cMaxAssignment_5_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_5_2_0() { return cMaxMaxCardinalityParserRuleCall_5_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_3() { return cRightSquareBracketKeyword_5_3; }
	}
	public class ModifyTargetReferenceMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ModifyTargetReferenceMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModifyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTargetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRefTypeEReferenceCrossReference_2_0 = (CrossReference)cRefTypeAssignment_2.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_2_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSourceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSourceObSelectionStrategyParserRuleCall_3_1_0 = (RuleCall)cSourceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cToKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNewTargetAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNewTargetObSelectionStrategyParserRuleCall_4_1_0 = (RuleCall)cNewTargetAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Assignment cMinAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_5_1_0_0 = (RuleCall)cMinAssignment_5_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cMaxAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_5_2_0 = (RuleCall)cMaxAssignment_5_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//ModifyTargetReferenceMutator returns ModifyTargetReferenceMutator:
		//    'modify' 'target' refType=[ecore::EReference|ID]
		//    ('from' source=ObSelectionStrategy)?
		//    ('to' newTarget=ObSelectionStrategy)?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'modify' 'target' refType=[ecore::EReference|ID]
		//('from' source=ObSelectionStrategy)?
		//('to' newTarget=ObSelectionStrategy)?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//'modify'
		public Keyword getModifyKeyword_0() { return cModifyKeyword_0; }
		
		//'target'
		public Keyword getTargetKeyword_1() { return cTargetKeyword_1; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_2() { return cRefTypeAssignment_2; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_2_0() { return cRefTypeEReferenceCrossReference_2_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_2_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_2_0_1; }
		
		//('from' source=ObSelectionStrategy)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'from'
		public Keyword getFromKeyword_3_0() { return cFromKeyword_3_0; }
		
		//source=ObSelectionStrategy
		public Assignment getSourceAssignment_3_1() { return cSourceAssignment_3_1; }
		
		//ObSelectionStrategy
		public RuleCall getSourceObSelectionStrategyParserRuleCall_3_1_0() { return cSourceObSelectionStrategyParserRuleCall_3_1_0; }
		
		//('to' newTarget=ObSelectionStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'to'
		public Keyword getToKeyword_4_0() { return cToKeyword_4_0; }
		
		//newTarget=ObSelectionStrategy
		public Assignment getNewTargetAssignment_4_1() { return cNewTargetAssignment_4_1; }
		
		//ObSelectionStrategy
		public RuleCall getNewTargetObSelectionStrategyParserRuleCall_4_1_0() { return cNewTargetObSelectionStrategyParserRuleCall_4_1_0; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//(min=EInt '..')?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//min=EInt
		public Assignment getMinAssignment_5_1_0() { return cMinAssignment_5_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_5_1_0_0() { return cMinEIntParserRuleCall_5_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_5_1_1() { return cFullStopFullStopKeyword_5_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_5_2() { return cMaxAssignment_5_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_5_2_0() { return cMaxMaxCardinalityParserRuleCall_5_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_3() { return cRightSquareBracketKeyword_5_3; }
	}
	public class CompositeMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CompositeMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCommandsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCommandsMutatorParserRuleCall_2_0 = (RuleCall)cCommandsAssignment_2.eContents().get(0);
		private final Assignment cCommandsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCommandsMutatorParserRuleCall_3_0 = (RuleCall)cCommandsAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Alternatives cAlternatives_5_1 = (Alternatives)cGroup_5.eContents().get(1);
		private final Group cGroup_5_1_0 = (Group)cAlternatives_5_1.eContents().get(0);
		private final Assignment cMinAssignment_5_1_0_0 = (Assignment)cGroup_5_1_0.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_5_1_0_0_0 = (RuleCall)cMinAssignment_5_1_0_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_5_1_0_1 = (Keyword)cGroup_5_1_0.eContents().get(1);
		private final Assignment cMaxAssignment_5_1_0_2 = (Assignment)cGroup_5_1_0.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_5_1_0_2_0 = (RuleCall)cMaxAssignment_5_1_0_2.eContents().get(0);
		private final Assignment cFixedAssignment_5_1_1 = (Assignment)cAlternatives_5_1.eContents().get(1);
		private final RuleCall cFixedEIntParserRuleCall_5_1_1_0 = (RuleCall)cFixedAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//CompositeMutator returns CompositeMutator:
		//    (name=ID '=')? '['
		//    commands+=Mutator (commands+=Mutator)*
		//    ']'
		//    ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? '['
		//commands+=Mutator (commands+=Mutator)*
		//']'
		//('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//commands+=Mutator
		public Assignment getCommandsAssignment_2() { return cCommandsAssignment_2; }
		
		//Mutator
		public RuleCall getCommandsMutatorParserRuleCall_2_0() { return cCommandsMutatorParserRuleCall_2_0; }
		
		//(commands+=Mutator)*
		public Assignment getCommandsAssignment_3() { return cCommandsAssignment_3; }
		
		//Mutator
		public RuleCall getCommandsMutatorParserRuleCall_3_0() { return cCommandsMutatorParserRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
		
		//('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//(min=EInt '..' max=MaxCardinality | fixed=EInt)
		public Alternatives getAlternatives_5_1() { return cAlternatives_5_1; }
		
		//min=EInt '..' max=MaxCardinality
		public Group getGroup_5_1_0() { return cGroup_5_1_0; }
		
		//min=EInt
		public Assignment getMinAssignment_5_1_0_0() { return cMinAssignment_5_1_0_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_5_1_0_0_0() { return cMinEIntParserRuleCall_5_1_0_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_5_1_0_1() { return cFullStopFullStopKeyword_5_1_0_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_5_1_0_2() { return cMaxAssignment_5_1_0_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_5_1_0_2_0() { return cMaxMaxCardinalityParserRuleCall_5_1_0_2_0; }
		
		//fixed=EInt
		public Assignment getFixedAssignment_5_1_1() { return cFixedAssignment_5_1_1; }
		
		//EInt
		public RuleCall getFixedEIntParserRuleCall_5_1_1_0() { return cFixedEIntParserRuleCall_5_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_2() { return cRightSquareBracketKeyword_5_2; }
	}
	public class CloneObjectMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CloneObjectMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cContentsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cContentsDeepKeyword_1_0 = (Keyword)cContentsAssignment_1.eContents().get(0);
		private final Keyword cCloneKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_3_0 = (RuleCall)cObjectAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cContainerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_4_1_0 = (RuleCall)cContainerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Alternatives cAlternatives_5_2 = (Alternatives)cGroup_5.eContents().get(2);
		private final Assignment cAttributesAssignment_5_2_0 = (Assignment)cAlternatives_5_2.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_5_2_0_0 = (RuleCall)cAttributesAssignment_5_2_0.eContents().get(0);
		private final Assignment cReferencesAssignment_5_2_1 = (Assignment)cAlternatives_5_2.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_5_2_1_0 = (RuleCall)cReferencesAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Alternatives cAlternatives_5_3_1 = (Alternatives)cGroup_5_3.eContents().get(1);
		private final Assignment cAttributesAssignment_5_3_1_0 = (Assignment)cAlternatives_5_3_1.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_5_3_1_0_0 = (RuleCall)cAttributesAssignment_5_3_1_0.eContents().get(0);
		private final Assignment cReferencesAssignment_5_3_1_1 = (Assignment)cAlternatives_5_3_1.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_5_3_1_1_0 = (RuleCall)cReferencesAssignment_5_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Assignment cMinAssignment_6_1_0 = (Assignment)cGroup_6_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_6_1_0_0 = (RuleCall)cMinAssignment_6_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Assignment cMaxAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_6_2_0 = (RuleCall)cMaxAssignment_6_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//CloneObjectMutator returns CloneObjectMutator:
		//    (name=ID '=')? (contents?='deep')? 'clone' object=ObSelectionStrategy
		//    ('in' container=ObSelectionStrategy)?
		//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? (contents?='deep')? 'clone' object=ObSelectionStrategy
		//('in' container=ObSelectionStrategy)?
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//(contents?='deep')?
		public Assignment getContentsAssignment_1() { return cContentsAssignment_1; }
		
		//'deep'
		public Keyword getContentsDeepKeyword_1_0() { return cContentsDeepKeyword_1_0; }
		
		//'clone'
		public Keyword getCloneKeyword_2() { return cCloneKeyword_2; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_3() { return cObjectAssignment_3; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_3_0() { return cObjectObSelectionStrategyParserRuleCall_3_0; }
		
		//('in' container=ObSelectionStrategy)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'in'
		public Keyword getInKeyword_4_0() { return cInKeyword_4_0; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_4_1() { return cContainerAssignment_4_1; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_4_1_0() { return cContainerObSelectionStrategyParserRuleCall_4_1_0; }
		
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'with'
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)?
		public Alternatives getAlternatives_5_2() { return cAlternatives_5_2; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_5_2_0() { return cAttributesAssignment_5_2_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_5_2_0_0() { return cAttributesAttributeSetParserRuleCall_5_2_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_5_2_1() { return cReferencesAssignment_5_2_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_5_2_1_0() { return cReferencesReferenceSetParserRuleCall_5_2_1_0; }
		
		//( "," (attributes+=AttributeSet | references+=ReferenceSet))*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)
		public Alternatives getAlternatives_5_3_1() { return cAlternatives_5_3_1; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_5_3_1_0() { return cAttributesAssignment_5_3_1_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_5_3_1_0_0() { return cAttributesAttributeSetParserRuleCall_5_3_1_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_5_3_1_1() { return cReferencesAssignment_5_3_1_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_5_3_1_1_0() { return cReferencesReferenceSetParserRuleCall_5_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_0() { return cLeftSquareBracketKeyword_6_0; }
		
		//(min=EInt '..')?
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//min=EInt
		public Assignment getMinAssignment_6_1_0() { return cMinAssignment_6_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_6_1_0_0() { return cMinEIntParserRuleCall_6_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_6_1_1() { return cFullStopFullStopKeyword_6_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_6_2() { return cMaxAssignment_6_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_6_2_0() { return cMaxMaxCardinalityParserRuleCall_6_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_3() { return cRightSquareBracketKeyword_6_3; }
	}
	public class RetypeObjectMutatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RetypeObjectMutator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cRetypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_2_0 = (RuleCall)cObjectAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContainerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContainerObSelectionStrategyParserRuleCall_3_1_0 = (RuleCall)cContainerAssignment_3_1.eContents().get(0);
		private final Keyword cAsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final CrossReference cTypeEClassCrossReference_5_0_0 = (CrossReference)cTypeAssignment_5_0.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_5_0_0_1 = (RuleCall)cTypeEClassCrossReference_5_0_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cTypesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_5_1_1_0 = (CrossReference)cTypesAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cTypesEClassCrossReference_5_1_1_0.eContents().get(1);
		private final Group cGroup_5_1_2 = (Group)cGroup_5_1.eContents().get(2);
		private final Keyword cCommaKeyword_5_1_2_0 = (Keyword)cGroup_5_1_2.eContents().get(0);
		private final Assignment cTypesAssignment_5_1_2_1 = (Assignment)cGroup_5_1_2.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_5_1_2_1_0 = (CrossReference)cTypesAssignment_5_1_2_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_5_1_2_1_0_1 = (RuleCall)cTypesEClassCrossReference_5_1_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWithKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Alternatives cAlternatives_6_2 = (Alternatives)cGroup_6.eContents().get(2);
		private final Assignment cAttributesAssignment_6_2_0 = (Assignment)cAlternatives_6_2.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_6_2_0_0 = (RuleCall)cAttributesAssignment_6_2_0.eContents().get(0);
		private final Assignment cReferencesAssignment_6_2_1 = (Assignment)cAlternatives_6_2.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_6_2_1_0 = (RuleCall)cReferencesAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Alternatives cAlternatives_6_3_1 = (Alternatives)cGroup_6_3.eContents().get(1);
		private final Assignment cAttributesAssignment_6_3_1_0 = (Assignment)cAlternatives_6_3_1.eContents().get(0);
		private final RuleCall cAttributesAttributeSetParserRuleCall_6_3_1_0_0 = (RuleCall)cAttributesAssignment_6_3_1_0.eContents().get(0);
		private final Assignment cReferencesAssignment_6_3_1_1 = (Assignment)cAlternatives_6_3_1.eContents().get(1);
		private final RuleCall cReferencesReferenceSetParserRuleCall_6_3_1_1_0 = (RuleCall)cReferencesAssignment_6_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Assignment cMinAssignment_7_1_0 = (Assignment)cGroup_7_1.eContents().get(0);
		private final RuleCall cMinEIntParserRuleCall_7_1_0_0 = (RuleCall)cMinAssignment_7_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_7_1_1 = (Keyword)cGroup_7_1.eContents().get(1);
		private final Assignment cMaxAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMaxMaxCardinalityParserRuleCall_7_2_0 = (RuleCall)cMaxAssignment_7_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		
		//RetypeObjectMutator returns RetypeObjectMutator:
		//    (name=ID '=')? 'retype' object=ObSelectionStrategy
		//    ('in' container=ObSelectionStrategy)?
		//    'as' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID '=')? 'retype' object=ObSelectionStrategy
		//('in' container=ObSelectionStrategy)?
		//'as' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup() { return cGroup; }
		
		//(name=ID '=')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//'retype'
		public Keyword getRetypeKeyword_1() { return cRetypeKeyword_1; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_2_0() { return cObjectObSelectionStrategyParserRuleCall_2_0; }
		
		//('in' container=ObSelectionStrategy)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'in'
		public Keyword getInKeyword_3_0() { return cInKeyword_3_0; }
		
		//container=ObSelectionStrategy
		public Assignment getContainerAssignment_3_1() { return cContainerAssignment_3_1; }
		
		//ObSelectionStrategy
		public RuleCall getContainerObSelectionStrategyParserRuleCall_3_1_0() { return cContainerObSelectionStrategyParserRuleCall_3_1_0; }
		
		//'as'
		public Keyword getAsKeyword_4() { return cAsKeyword_4; }
		
		//(type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_5_0() { return cTypeAssignment_5_0; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_5_0_0() { return cTypeEClassCrossReference_5_0_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_5_0_0_1() { return cTypeEClassIDTerminalRuleCall_5_0_0_1; }
		
		//'[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']'
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_1_0() { return cLeftSquareBracketKeyword_5_1_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_5_1_1() { return cTypesAssignment_5_1_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_5_1_1_0() { return cTypesEClassCrossReference_5_1_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_5_1_1_0_1() { return cTypesEClassIDTerminalRuleCall_5_1_1_0_1; }
		
		//( "," types+=[ecore::EClass|ID])*
		public Group getGroup_5_1_2() { return cGroup_5_1_2; }
		
		//","
		public Keyword getCommaKeyword_5_1_2_0() { return cCommaKeyword_5_1_2_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_5_1_2_1() { return cTypesAssignment_5_1_2_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_5_1_2_1_0() { return cTypesEClassCrossReference_5_1_2_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_5_1_2_1_0_1() { return cTypesEClassIDTerminalRuleCall_5_1_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_1_3() { return cRightSquareBracketKeyword_5_1_3; }
		
		//('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'with'
		public Keyword getWithKeyword_6_0() { return cWithKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)?
		public Alternatives getAlternatives_6_2() { return cAlternatives_6_2; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_6_2_0() { return cAttributesAssignment_6_2_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_6_2_0_0() { return cAttributesAttributeSetParserRuleCall_6_2_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_6_2_1() { return cReferencesAssignment_6_2_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_6_2_1_0() { return cReferencesReferenceSetParserRuleCall_6_2_1_0; }
		
		//( "," (attributes+=AttributeSet | references+=ReferenceSet))*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//(attributes+=AttributeSet | references+=ReferenceSet)
		public Alternatives getAlternatives_6_3_1() { return cAlternatives_6_3_1; }
		
		//attributes+=AttributeSet
		public Assignment getAttributesAssignment_6_3_1_0() { return cAttributesAssignment_6_3_1_0; }
		
		//AttributeSet
		public RuleCall getAttributesAttributeSetParserRuleCall_6_3_1_0_0() { return cAttributesAttributeSetParserRuleCall_6_3_1_0_0; }
		
		//references+=ReferenceSet
		public Assignment getReferencesAssignment_6_3_1_1() { return cReferencesAssignment_6_3_1_1; }
		
		//ReferenceSet
		public RuleCall getReferencesReferenceSetParserRuleCall_6_3_1_1_0() { return cReferencesReferenceSetParserRuleCall_6_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('[' (min=EInt '..')? max=MaxCardinality ']')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7_0() { return cLeftSquareBracketKeyword_7_0; }
		
		//(min=EInt '..')?
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//min=EInt
		public Assignment getMinAssignment_7_1_0() { return cMinAssignment_7_1_0; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_7_1_0_0() { return cMinEIntParserRuleCall_7_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_7_1_1() { return cFullStopFullStopKeyword_7_1_1; }
		
		//max=MaxCardinality
		public Assignment getMaxAssignment_7_2() { return cMaxAssignment_7_2; }
		
		//MaxCardinality
		public RuleCall getMaxMaxCardinalityParserRuleCall_7_2_0() { return cMaxMaxCardinalityParserRuleCall_7_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7_3() { return cRightSquareBracketKeyword_7_3; }
	}
	public class AttributeSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeScalarParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUnsetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAttributeSwapParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAttributeCopyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAttributeReverseParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAttributeOperationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//AttributeSet returns AttributeSet:
		//    AttributeScalar | AttributeUnset | AttributeSwap | AttributeCopy | AttributeReverse | AttributeOperation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeScalar | AttributeUnset | AttributeSwap | AttributeCopy | AttributeReverse | AttributeOperation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeScalar
		public RuleCall getAttributeScalarParserRuleCall_0() { return cAttributeScalarParserRuleCall_0; }
		
		//AttributeUnset
		public RuleCall getAttributeUnsetParserRuleCall_1() { return cAttributeUnsetParserRuleCall_1; }
		
		//AttributeSwap
		public RuleCall getAttributeSwapParserRuleCall_2() { return cAttributeSwapParserRuleCall_2; }
		
		//AttributeCopy
		public RuleCall getAttributeCopyParserRuleCall_3() { return cAttributeCopyParserRuleCall_3; }
		
		//AttributeReverse
		public RuleCall getAttributeReverseParserRuleCall_4() { return cAttributeReverseParserRuleCall_4; }
		
		//AttributeOperation
		public RuleCall getAttributeOperationParserRuleCall_5() { return cAttributeOperationParserRuleCall_5; }
	}
	public class AttributeScalarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeScalar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeEAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_0_0_1 = (RuleCall)cAttributeEAttributeCrossReference_0_0.eContents().get(1);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueAttributeTypeParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//AttributeScalar returns AttributeScalar:
		//    attribute+=[ecore::EAttribute|ID]
		//    value=AttributeType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute+=[ecore::EAttribute|ID]
		//value=AttributeType
		public Group getGroup() { return cGroup; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_0_0() { return cAttributeEAttributeCrossReference_0_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_0_0_1() { return cAttributeEAttributeIDTerminalRuleCall_0_0_1; }
		
		//value=AttributeType
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//AttributeType
		public RuleCall getValueAttributeTypeParserRuleCall_1_0() { return cValueAttributeTypeParserRuleCall_1_0; }
	}
	public class AttributeUnsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeUnset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnsetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeEAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_2_0_1 = (RuleCall)cAttributeEAttributeCrossReference_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AttributeUnset returns AttributeUnset:
		//    'unset' '(' attribute+=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'unset' '(' attribute+=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//'unset'
		public Keyword getUnsetKeyword_0() { return cUnsetKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_2_0() { return cAttributeEAttributeCrossReference_2_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_2_0_1() { return cAttributeEAttributeIDTerminalRuleCall_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class AttributeSwapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeSwap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSwapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeEAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_2_0_1 = (RuleCall)cAttributeEAttributeCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cObjectAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_4_0_0 = (RuleCall)cObjectAssignment_4_0.eContents().get(0);
		private final Keyword cFullStopKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAttributeEAttributeCrossReference_5_0 = (CrossReference)cAttributeAssignment_5.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_5_0_1 = (RuleCall)cAttributeEAttributeCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AttributeSwap returns AttributeSwap:
		//    'swap' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'swap' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//'swap'
		public Keyword getSwapKeyword_0() { return cSwapKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_2_0() { return cAttributeEAttributeCrossReference_2_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_2_0_1() { return cAttributeEAttributeIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//(object=ObSelectionStrategy '.')?
		public Group getGroup_4() { return cGroup_4; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_4_0() { return cObjectAssignment_4_0; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_4_0_0() { return cObjectObSelectionStrategyParserRuleCall_4_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_4_1() { return cFullStopKeyword_4_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_5() { return cAttributeAssignment_5; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_5_0() { return cAttributeEAttributeCrossReference_5_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_5_0_1() { return cAttributeEAttributeIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class AttributeCopyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeCopy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCopyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeEAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_2_0_1 = (RuleCall)cAttributeEAttributeCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cObjectAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_4_0_0 = (RuleCall)cObjectAssignment_4_0.eContents().get(0);
		private final Keyword cFullStopKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAttributeEAttributeCrossReference_5_0 = (CrossReference)cAttributeAssignment_5.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_5_0_1 = (RuleCall)cAttributeEAttributeCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AttributeCopy returns AttributeCopy:
		//    'copy' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'copy' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//'copy'
		public Keyword getCopyKeyword_0() { return cCopyKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_2_0() { return cAttributeEAttributeCrossReference_2_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_2_0_1() { return cAttributeEAttributeIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//(object=ObSelectionStrategy '.')?
		public Group getGroup_4() { return cGroup_4; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_4_0() { return cObjectAssignment_4_0; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_4_0_0() { return cObjectObSelectionStrategyParserRuleCall_4_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_4_1() { return cFullStopKeyword_4_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_5() { return cAttributeAssignment_5; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_5_0() { return cAttributeEAttributeCrossReference_5_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_5_0_1() { return cAttributeEAttributeIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class AttributeReverseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeReverse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReverseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeEAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_2_0_1 = (RuleCall)cAttributeEAttributeCrossReference_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AttributeReverse returns AttributeReverse:
		//    'reverse' '(' attribute+=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'reverse' '(' attribute+=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//'reverse'
		public Keyword getReverseKeyword_0() { return cReverseKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_2_0() { return cAttributeEAttributeCrossReference_2_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_2_0_1() { return cAttributeEAttributeIDTerminalRuleCall_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class AttributeOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.AttributeOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeEAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_0_0_1 = (RuleCall)cAttributeEAttributeCrossReference_0_0.eContents().get(1);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorArithmeticOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAttributeEvaluationTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AttributeOperation returns AttributeOperation:
		//    attribute+=[ecore::EAttribute|ID] operator=ArithmeticOperator value=AttributeEvaluationType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attribute+=[ecore::EAttribute|ID] operator=ArithmeticOperator value=AttributeEvaluationType
		public Group getGroup() { return cGroup; }
		
		//attribute+=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_0_0() { return cAttributeEAttributeCrossReference_0_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_0_0_1() { return cAttributeEAttributeIDTerminalRuleCall_0_0_1; }
		
		//operator=ArithmeticOperator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//ArithmeticOperator
		public RuleCall getOperatorArithmeticOperatorEnumRuleCall_1_0() { return cOperatorArithmeticOperatorEnumRuleCall_1_0; }
		
		//value=AttributeEvaluationType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//AttributeEvaluationType
		public RuleCall getValueAttributeEvaluationTypeParserRuleCall_2_0() { return cValueAttributeEvaluationTypeParserRuleCall_2_0; }
	}
	public class ReferenceSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceSet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceInitParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceSwapParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceAttParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cReferenceAddParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cReferenceRemoveParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ReferenceSet returns ReferenceSet:
		//    ReferenceInit | ReferenceSwap | ReferenceAtt | ReferenceAdd | ReferenceRemove
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceInit | ReferenceSwap | ReferenceAtt | ReferenceAdd | ReferenceRemove
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceInit
		public RuleCall getReferenceInitParserRuleCall_0() { return cReferenceInitParserRuleCall_0; }
		
		//ReferenceSwap
		public RuleCall getReferenceSwapParserRuleCall_1() { return cReferenceSwapParserRuleCall_1; }
		
		//ReferenceAtt
		public RuleCall getReferenceAttParserRuleCall_2() { return cReferenceAttParserRuleCall_2; }
		
		//ReferenceAdd
		public RuleCall getReferenceAddParserRuleCall_3() { return cReferenceAddParserRuleCall_3; }
		
		//ReferenceRemove
		public RuleCall getReferenceRemoveParserRuleCall_4() { return cReferenceRemoveParserRuleCall_4; }
	}
	public class ReferenceInitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceInit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferenceEReferenceCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_0_0_1 = (RuleCall)cReferenceEReferenceCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_2_0 = (RuleCall)cObjectAssignment_2.eContents().get(0);
		
		//ReferenceInit returns ReferenceInit:
		//    reference+=[ecore::EReference|ID]
		//    '=' object=ObSelectionStrategy
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//reference+=[ecore::EReference|ID]
		//'=' object=ObSelectionStrategy
		public Group getGroup() { return cGroup; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_0_0() { return cReferenceEReferenceCrossReference_0_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_0_0_1() { return cReferenceEReferenceIDTerminalRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_2_0() { return cObjectObSelectionStrategyParserRuleCall_2_0; }
	}
	public class ReferenceAddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceAdd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferenceEReferenceCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_0_0_1 = (RuleCall)cReferenceEReferenceCrossReference_0_0.eContents().get(1);
		private final Keyword cPlusSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_3_0 = (RuleCall)cObjectAssignment_3.eContents().get(0);
		
		//ReferenceAdd returns ReferenceAdd:
		//    reference+=[ecore::EReference|ID]
		//    '+' '=' object=ObSelectionStrategy
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//reference+=[ecore::EReference|ID]
		//'+' '=' object=ObSelectionStrategy
		public Group getGroup() { return cGroup; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_0_0() { return cReferenceEReferenceCrossReference_0_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_0_0_1() { return cReferenceEReferenceIDTerminalRuleCall_0_0_1; }
		
		//'+'
		public Keyword getPlusSignKeyword_1() { return cPlusSignKeyword_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_3() { return cObjectAssignment_3; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_3_0() { return cObjectObSelectionStrategyParserRuleCall_3_0; }
	}
	public class ReferenceRemoveElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceRemove");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferenceEReferenceCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_0_0_1 = (RuleCall)cReferenceEReferenceCrossReference_0_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjectAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_3_0 = (RuleCall)cObjectAssignment_3.eContents().get(0);
		
		//ReferenceRemove returns ReferenceRemove:
		//    reference+=[ecore::EReference|ID]
		//    '-' '=' object=ObSelectionStrategy
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//reference+=[ecore::EReference|ID]
		//'-' '=' object=ObSelectionStrategy
		public Group getGroup() { return cGroup; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_0_0() { return cReferenceEReferenceCrossReference_0_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_0_0_1() { return cReferenceEReferenceIDTerminalRuleCall_0_0_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_3() { return cObjectAssignment_3; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_3_0() { return cObjectObSelectionStrategyParserRuleCall_3_0; }
	}
	public class ReferenceSwapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceSwap");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSwaprefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReferenceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cReferenceEReferenceCrossReference_2_0 = (CrossReference)cReferenceAssignment_2.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_2_0_1 = (RuleCall)cReferenceEReferenceCrossReference_2_0.eContents().get(1);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cObjectAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_4_0_0 = (RuleCall)cObjectAssignment_4_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cReferenceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReferenceEReferenceCrossReference_5_0 = (CrossReference)cReferenceAssignment_5.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_5_0_1 = (RuleCall)cReferenceEReferenceCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ReferenceSwap returns ReferenceSwap:
		//    'swapref' '(' reference+=[ecore::EReference|ID] ',' (object=ObSelectionStrategy '->')? reference+=[ecore::EReference|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'swapref' '(' reference+=[ecore::EReference|ID] ',' (object=ObSelectionStrategy '->')? reference+=[ecore::EReference|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//'swapref'
		public Keyword getSwaprefKeyword_0() { return cSwaprefKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_2() { return cReferenceAssignment_2; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_2_0() { return cReferenceEReferenceCrossReference_2_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_2_0_1() { return cReferenceEReferenceIDTerminalRuleCall_2_0_1; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//(object=ObSelectionStrategy '->')?
		public Group getGroup_4() { return cGroup_4; }
		
		//object=ObSelectionStrategy
		public Assignment getObjectAssignment_4_0() { return cObjectAssignment_4_0; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_4_0_0() { return cObjectObSelectionStrategyParserRuleCall_4_0_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_1() { return cHyphenMinusGreaterThanSignKeyword_4_1; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_5() { return cReferenceAssignment_5; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_5_0() { return cReferenceEReferenceCrossReference_5_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_5_0_1() { return cReferenceEReferenceIDTerminalRuleCall_5_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class ReferenceAttElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReferenceAtt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferenceEReferenceCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceEReferenceIDTerminalRuleCall_0_0_1 = (RuleCall)cReferenceEReferenceCrossReference_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAttributeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAttributeEAttributeCrossReference_2_0 = (CrossReference)cAttributeAssignment_2.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_2_0_1 = (RuleCall)cAttributeEAttributeCrossReference_2_0.eContents().get(1);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueAttributeTypeParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//ReferenceAtt returns ReferenceAtt:
		//    reference+=[ecore::EReference|ID] '.' attribute=[ecore::EAttribute|ID]
		//    value=AttributeType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//reference+=[ecore::EReference|ID] '.' attribute=[ecore::EAttribute|ID]
		//value=AttributeType
		public Group getGroup() { return cGroup; }
		
		//reference+=[ecore::EReference|ID]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }
		
		//[ecore::EReference|ID]
		public CrossReference getReferenceEReferenceCrossReference_0_0() { return cReferenceEReferenceCrossReference_0_0; }
		
		//ID
		public RuleCall getReferenceEReferenceIDTerminalRuleCall_0_0_1() { return cReferenceEReferenceIDTerminalRuleCall_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//attribute=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_2() { return cAttributeAssignment_2; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_2_0() { return cAttributeEAttributeCrossReference_2_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_2_0_1() { return cAttributeEAttributeIDTerminalRuleCall_2_0_1; }
		
		//value=AttributeType
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//AttributeType
		public RuleCall getValueAttributeTypeParserRuleCall_3_0() { return cValueAttributeTypeParserRuleCall_3_0; }
	}
	public class RandomTypeSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomTypeSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomTypeSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeEClassCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeEClassCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_1_0 = (CrossReference)cTypesAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_2_1_0 = (CrossReference)cTypesAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRefTypeEReferenceCrossReference_3_1_0 = (CrossReference)cRefTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cRefRefTypeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cRefRefTypeEReferenceCrossReference_3_2_1_0 = (CrossReference)cRefRefTypeAssignment_3_2_1.eContents().get(0);
		private final RuleCall cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cRefRefTypeEReferenceCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Assignment cRefRefRefTypeAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final CrossReference cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0 = (CrossReference)cRefRefRefTypeAssignment_3_2_2_1.eContents().get(0);
		private final RuleCall cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1 = (RuleCall)cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFromKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cResourceAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cResourceIDTerminalRuleCall_4_1_0 = (RuleCall)cResourceAssignment_4_1.eContents().get(0);
		private final Keyword cResourcesKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWhereKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cExpressionAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_5_2_0 = (RuleCall)cExpressionAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//RandomTypeSelection returns RandomTypeSelection:
		//    {RandomTypeSelection}
		//    'one' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//    ('from' resource=ID 'resources')?
		//    ('where' '{' expression=Expression '}')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomTypeSelection}
		//'one' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//('from' resource=ID 'resources')?
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{RandomTypeSelection}
		public Action getRandomTypeSelectionAction_0() { return cRandomTypeSelectionAction_0; }
		
		//'one'
		public Keyword getOneKeyword_1() { return cOneKeyword_1; }
		
		//(type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_2_0_0() { return cTypeEClassCrossReference_2_0_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_2_0_0_1() { return cTypeEClassIDTerminalRuleCall_2_0_0_1; }
		
		//'[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1_0() { return cLeftSquareBracketKeyword_2_1_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_1() { return cTypesAssignment_2_1_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_1_0() { return cTypesEClassCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_1_0_1; }
		
		//( "," types+=[ecore::EClass|ID])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_2_1() { return cTypesAssignment_2_1_2_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_2_1_0() { return cTypesEClassCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_2_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_1_3() { return cRightSquareBracketKeyword_2_1_3; }
		
		//('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_3_1() { return cRefTypeAssignment_3_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_3_1_0() { return cRefTypeEReferenceCrossReference_3_1_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_3_1_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1; }
		
		//('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_0; }
		
		//refRefType=[ecore::EReference|ID]
		public Assignment getRefRefTypeAssignment_3_2_1() { return cRefRefTypeAssignment_3_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefTypeEReferenceCrossReference_3_2_1_0() { return cRefRefTypeEReferenceCrossReference_3_2_1_0; }
		
		//ID
		public RuleCall getRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1() { return cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1; }
		
		//('->' refRefRefType=[ecore::EReference|ID])?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_2_0; }
		
		//refRefRefType=[ecore::EReference|ID]
		public Assignment getRefRefRefTypeAssignment_3_2_2_1() { return cRefRefRefTypeAssignment_3_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefRefTypeEReferenceCrossReference_3_2_2_1_0() { return cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1() { return cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1; }
		
		//('from' resource=ID 'resources')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'from'
		public Keyword getFromKeyword_4_0() { return cFromKeyword_4_0; }
		
		//resource=ID
		public Assignment getResourceAssignment_4_1() { return cResourceAssignment_4_1; }
		
		//ID
		public RuleCall getResourceIDTerminalRuleCall_4_1_0() { return cResourceIDTerminalRuleCall_4_1_0; }
		
		//'resources'
		public Keyword getResourcesKeyword_4_2() { return cResourcesKeyword_4_2; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'where'
		public Keyword getWhereKeyword_5_0() { return cWhereKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_5_2() { return cExpressionAssignment_5_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_5_2_0() { return cExpressionExpressionParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
	}
	public class SpecificObjectSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificObjectSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificObjectSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cObjSelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjSelObjectEmitterCrossReference_1_0 = (CrossReference)cObjSelAssignment_1.eContents().get(0);
		private final RuleCall cObjSelObjectEmitterIDTerminalRuleCall_1_0_1 = (RuleCall)cObjSelObjectEmitterCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRefTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cRefTypeEReferenceCrossReference_2_1_0 = (CrossReference)cRefTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_2_1_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cRefRefTypeAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cRefRefTypeEReferenceCrossReference_2_2_1_0 = (CrossReference)cRefRefTypeAssignment_2_2_1.eContents().get(0);
		private final RuleCall cRefRefTypeEReferenceIDTerminalRuleCall_2_2_1_0_1 = (RuleCall)cRefRefTypeEReferenceCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_2_2_2 = (Group)cGroup_2_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_2_2_0 = (Keyword)cGroup_2_2_2.eContents().get(0);
		private final Assignment cRefRefRefTypeAssignment_2_2_2_1 = (Assignment)cGroup_2_2_2.eContents().get(1);
		private final CrossReference cRefRefRefTypeEReferenceCrossReference_2_2_2_1_0 = (CrossReference)cRefRefRefTypeAssignment_2_2_2_1.eContents().get(0);
		private final RuleCall cRefRefRefTypeEReferenceIDTerminalRuleCall_2_2_2_1_0_1 = (RuleCall)cRefRefRefTypeEReferenceCrossReference_2_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWhereKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cExpressionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_3_2_0 = (RuleCall)cExpressionAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//SpecificObjectSelection returns SpecificObjectSelection:
		//    {SpecificObjectSelection}
		//    objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//    ('where' '{' expression=Expression '}')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificObjectSelection}
		//objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{SpecificObjectSelection}
		public Action getSpecificObjectSelectionAction_0() { return cSpecificObjectSelectionAction_0; }
		
		//objSel=[ObjectEmitter|ID]
		public Assignment getObjSelAssignment_1() { return cObjSelAssignment_1; }
		
		//[ObjectEmitter|ID]
		public CrossReference getObjSelObjectEmitterCrossReference_1_0() { return cObjSelObjectEmitterCrossReference_1_0; }
		
		//ID
		public RuleCall getObjSelObjectEmitterIDTerminalRuleCall_1_0_1() { return cObjSelObjectEmitterIDTerminalRuleCall_1_0_1; }
		
		//('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_0; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_2_1() { return cRefTypeAssignment_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_2_1_0() { return cRefTypeEReferenceCrossReference_2_1_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_2_1_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_2_1_0_1; }
		
		//('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_2_0; }
		
		//refRefType=[ecore::EReference|ID]
		public Assignment getRefRefTypeAssignment_2_2_1() { return cRefRefTypeAssignment_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefTypeEReferenceCrossReference_2_2_1_0() { return cRefRefTypeEReferenceCrossReference_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefTypeEReferenceIDTerminalRuleCall_2_2_1_0_1() { return cRefRefTypeEReferenceIDTerminalRuleCall_2_2_1_0_1; }
		
		//('->' refRefRefType=[ecore::EReference|ID])?
		public Group getGroup_2_2_2() { return cGroup_2_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_2_2_2_0; }
		
		//refRefRefType=[ecore::EReference|ID]
		public Assignment getRefRefRefTypeAssignment_2_2_2_1() { return cRefRefRefTypeAssignment_2_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefRefTypeEReferenceCrossReference_2_2_2_1_0() { return cRefRefRefTypeEReferenceCrossReference_2_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefRefTypeEReferenceIDTerminalRuleCall_2_2_2_1_0_1() { return cRefRefRefTypeEReferenceIDTerminalRuleCall_2_2_2_1_0_1; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'where'
		public Keyword getWhereKeyword_3_0() { return cWhereKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_3_2() { return cExpressionAssignment_3_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_3_2_0() { return cExpressionExpressionParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class SpecificClosureSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificClosureSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificClosureSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClosureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObjSelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cObjSelObjectEmitterCrossReference_3_0 = (CrossReference)cObjSelAssignment_3.eContents().get(0);
		private final RuleCall cObjSelObjectEmitterIDTerminalRuleCall_3_0_1 = (RuleCall)cObjSelObjectEmitterCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRefTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cRefTypeEReferenceCrossReference_4_1_0 = (CrossReference)cRefTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_4_1_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cRefRefTypeAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cRefRefTypeEReferenceCrossReference_4_2_1_0 = (CrossReference)cRefRefTypeAssignment_4_2_1.eContents().get(0);
		private final RuleCall cRefRefTypeEReferenceIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cRefRefTypeEReferenceCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_4_2_2 = (Group)cGroup_4_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_2_2_0 = (Keyword)cGroup_4_2_2.eContents().get(0);
		private final Assignment cRefRefRefTypeAssignment_4_2_2_1 = (Assignment)cGroup_4_2_2.eContents().get(1);
		private final CrossReference cRefRefRefTypeEReferenceCrossReference_4_2_2_1_0 = (CrossReference)cRefRefRefTypeAssignment_4_2_2_1.eContents().get(0);
		private final RuleCall cRefRefRefTypeEReferenceIDTerminalRuleCall_4_2_2_1_0_1 = (RuleCall)cRefRefRefTypeEReferenceCrossReference_4_2_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWhereKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cExpressionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_6_2_0 = (RuleCall)cExpressionAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//SpecificClosureSelection returns SpecificClosureSelection:
		//    {SpecificClosureSelection}
		//    'closure' '(' objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)? ')'
		//    ('where' '{' expression=Expression '}')?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificClosureSelection}
		//'closure' '(' objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)? ')'
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{SpecificClosureSelection}
		public Action getSpecificClosureSelectionAction_0() { return cSpecificClosureSelectionAction_0; }
		
		//'closure'
		public Keyword getClosureKeyword_1() { return cClosureKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//objSel=[ObjectEmitter|ID]
		public Assignment getObjSelAssignment_3() { return cObjSelAssignment_3; }
		
		//[ObjectEmitter|ID]
		public CrossReference getObjSelObjectEmitterCrossReference_3_0() { return cObjSelObjectEmitterCrossReference_3_0; }
		
		//ID
		public RuleCall getObjSelObjectEmitterIDTerminalRuleCall_3_0_1() { return cObjSelObjectEmitterIDTerminalRuleCall_3_0_1; }
		
		//('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_0() { return cHyphenMinusGreaterThanSignKeyword_4_0; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_4_1() { return cRefTypeAssignment_4_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_4_1_0() { return cRefTypeEReferenceCrossReference_4_1_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_4_1_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_4_1_0_1; }
		
		//('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_2_0() { return cHyphenMinusGreaterThanSignKeyword_4_2_0; }
		
		//refRefType=[ecore::EReference|ID]
		public Assignment getRefRefTypeAssignment_4_2_1() { return cRefRefTypeAssignment_4_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefTypeEReferenceCrossReference_4_2_1_0() { return cRefRefTypeEReferenceCrossReference_4_2_1_0; }
		
		//ID
		public RuleCall getRefRefTypeEReferenceIDTerminalRuleCall_4_2_1_0_1() { return cRefRefTypeEReferenceIDTerminalRuleCall_4_2_1_0_1; }
		
		//('->' refRefRefType=[ecore::EReference|ID])?
		public Group getGroup_4_2_2() { return cGroup_4_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_4_2_2_0; }
		
		//refRefRefType=[ecore::EReference|ID]
		public Assignment getRefRefRefTypeAssignment_4_2_2_1() { return cRefRefRefTypeAssignment_4_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefRefTypeEReferenceCrossReference_4_2_2_1_0() { return cRefRefRefTypeEReferenceCrossReference_4_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefRefTypeEReferenceIDTerminalRuleCall_4_2_2_1_0_1() { return cRefRefRefTypeEReferenceIDTerminalRuleCall_4_2_2_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'where'
		public Keyword getWhereKeyword_6_0() { return cWhereKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_6_2() { return cExpressionAssignment_6_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_6_2_0() { return cExpressionExpressionParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
	}
	public class CompleteTypeSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CompleteTypeSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompleteTypeSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAllKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeEClassCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeEClassCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_1_0 = (CrossReference)cTypesAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_2_1_0 = (CrossReference)cTypesAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRefTypeEReferenceCrossReference_3_1_0 = (CrossReference)cRefTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cRefRefTypeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cRefRefTypeEReferenceCrossReference_3_2_1_0 = (CrossReference)cRefRefTypeAssignment_3_2_1.eContents().get(0);
		private final RuleCall cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cRefRefTypeEReferenceCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Assignment cRefRefRefTypeAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final CrossReference cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0 = (CrossReference)cRefRefRefTypeAssignment_3_2_2_1.eContents().get(0);
		private final RuleCall cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1 = (RuleCall)cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWhereKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExpressionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_4_2_0 = (RuleCall)cExpressionAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//CompleteTypeSelection returns CompleteTypeSelection:
		//    {CompleteTypeSelection}
		//    'all' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//    ('where' '{' expression=Expression '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{CompleteTypeSelection}
		//'all' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{CompleteTypeSelection}
		public Action getCompleteTypeSelectionAction_0() { return cCompleteTypeSelectionAction_0; }
		
		//'all'
		public Keyword getAllKeyword_1() { return cAllKeyword_1; }
		
		//(type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_2_0_0() { return cTypeEClassCrossReference_2_0_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_2_0_0_1() { return cTypeEClassIDTerminalRuleCall_2_0_0_1; }
		
		//'[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1_0() { return cLeftSquareBracketKeyword_2_1_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_1() { return cTypesAssignment_2_1_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_1_0() { return cTypesEClassCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_1_0_1; }
		
		//( "," types+=[ecore::EClass|ID])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_2_1() { return cTypesAssignment_2_1_2_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_2_1_0() { return cTypesEClassCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_2_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_1_3() { return cRightSquareBracketKeyword_2_1_3; }
		
		//('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_3_1() { return cRefTypeAssignment_3_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_3_1_0() { return cRefTypeEReferenceCrossReference_3_1_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_3_1_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1; }
		
		//('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_0; }
		
		//refRefType=[ecore::EReference|ID]
		public Assignment getRefRefTypeAssignment_3_2_1() { return cRefRefTypeAssignment_3_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefTypeEReferenceCrossReference_3_2_1_0() { return cRefRefTypeEReferenceCrossReference_3_2_1_0; }
		
		//ID
		public RuleCall getRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1() { return cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1; }
		
		//('->' refRefRefType=[ecore::EReference|ID])?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_2_0; }
		
		//refRefRefType=[ecore::EReference|ID]
		public Assignment getRefRefRefTypeAssignment_3_2_2_1() { return cRefRefRefTypeAssignment_3_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefRefTypeEReferenceCrossReference_3_2_2_1_0() { return cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1() { return cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'where'
		public Keyword getWhereKeyword_4_0() { return cWhereKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_4_2() { return cExpressionAssignment_4_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_4_2_0() { return cExpressionExpressionParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class OtherTypeSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.OtherTypeSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOtherTypeSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOtherKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeEClassCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeEClassCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_1_0 = (CrossReference)cTypesAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_2_1_0 = (CrossReference)cTypesAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRefTypeEReferenceCrossReference_3_1_0 = (CrossReference)cRefTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1 = (RuleCall)cRefTypeEReferenceCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cRefRefTypeAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cRefRefTypeEReferenceCrossReference_3_2_1_0 = (CrossReference)cRefRefTypeAssignment_3_2_1.eContents().get(0);
		private final RuleCall cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1 = (RuleCall)cRefRefTypeEReferenceCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Assignment cRefRefRefTypeAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final CrossReference cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0 = (CrossReference)cRefRefRefTypeAssignment_3_2_2_1.eContents().get(0);
		private final RuleCall cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1 = (RuleCall)cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWhereKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExpressionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_4_2_0 = (RuleCall)cExpressionAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//OtherTypeSelection returns OtherTypeSelection:
		//    {OtherTypeSelection}
		//    'other' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//    ('where' '{' expression=Expression '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{OtherTypeSelection}
		//'other' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{OtherTypeSelection}
		public Action getOtherTypeSelectionAction_0() { return cOtherTypeSelectionAction_0; }
		
		//'other'
		public Keyword getOtherKeyword_1() { return cOtherKeyword_1; }
		
		//(type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_2_0_0() { return cTypeEClassCrossReference_2_0_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_2_0_0_1() { return cTypeEClassIDTerminalRuleCall_2_0_0_1; }
		
		//'[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1_0() { return cLeftSquareBracketKeyword_2_1_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_1() { return cTypesAssignment_2_1_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_1_0() { return cTypesEClassCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_1_0_1; }
		
		//( "," types+=[ecore::EClass|ID])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_2_1() { return cTypesAssignment_2_1_2_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_2_1_0() { return cTypesEClassCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_2_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_1_3() { return cRightSquareBracketKeyword_2_1_3; }
		
		//('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_0() { return cHyphenMinusGreaterThanSignKeyword_3_0; }
		
		//refType=[ecore::EReference|ID]
		public Assignment getRefTypeAssignment_3_1() { return cRefTypeAssignment_3_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefTypeEReferenceCrossReference_3_1_0() { return cRefTypeEReferenceCrossReference_3_1_0; }
		
		//ID
		public RuleCall getRefTypeEReferenceIDTerminalRuleCall_3_1_0_1() { return cRefTypeEReferenceIDTerminalRuleCall_3_1_0_1; }
		
		//('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_0; }
		
		//refRefType=[ecore::EReference|ID]
		public Assignment getRefRefTypeAssignment_3_2_1() { return cRefRefTypeAssignment_3_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefTypeEReferenceCrossReference_3_2_1_0() { return cRefRefTypeEReferenceCrossReference_3_2_1_0; }
		
		//ID
		public RuleCall getRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1() { return cRefRefTypeEReferenceIDTerminalRuleCall_3_2_1_0_1; }
		
		//('->' refRefRefType=[ecore::EReference|ID])?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_3_2_2_0() { return cHyphenMinusGreaterThanSignKeyword_3_2_2_0; }
		
		//refRefRefType=[ecore::EReference|ID]
		public Assignment getRefRefRefTypeAssignment_3_2_2_1() { return cRefRefRefTypeAssignment_3_2_2_1; }
		
		//[ecore::EReference|ID]
		public CrossReference getRefRefRefTypeEReferenceCrossReference_3_2_2_1_0() { return cRefRefRefTypeEReferenceCrossReference_3_2_2_1_0; }
		
		//ID
		public RuleCall getRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1() { return cRefRefRefTypeEReferenceIDTerminalRuleCall_3_2_2_1_0_1; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'where'
		public Keyword getWhereKeyword_4_0() { return cWhereKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_4_2() { return cExpressionAssignment_4_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_4_2_0() { return cExpressionExpressionParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class TypedSelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.TypedSelection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypedSelectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypedKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final CrossReference cTypeEClassCrossReference_2_0_0 = (CrossReference)cTypeAssignment_2_0.eContents().get(0);
		private final RuleCall cTypeEClassIDTerminalRuleCall_2_0_0_1 = (RuleCall)cTypeEClassCrossReference_2_0_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_1_0 = (CrossReference)cTypesAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTypesAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cTypesEClassCrossReference_2_1_2_1_0 = (CrossReference)cTypesAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cTypesEClassCrossReference_2_1_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWhereKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cExpressionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cExpressionExpressionParserRuleCall_3_2_0 = (RuleCall)cExpressionAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//TypedSelection returns TypedSelection:
		//    {TypedSelection}
		//    'typed' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		//    ('where' '{' expression=Expression '}')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{TypedSelection}
		//'typed' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		//('where' '{' expression=Expression '}')?
		public Group getGroup() { return cGroup; }
		
		//{TypedSelection}
		public Action getTypedSelectionAction_0() { return cTypedSelectionAction_0; }
		
		//'typed'
		public Keyword getTypedKeyword_1() { return cTypedKeyword_1; }
		
		//(type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//type=[ecore::EClass|ID]
		public Assignment getTypeAssignment_2_0() { return cTypeAssignment_2_0; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypeEClassCrossReference_2_0_0() { return cTypeEClassCrossReference_2_0_0; }
		
		//ID
		public RuleCall getTypeEClassIDTerminalRuleCall_2_0_0_1() { return cTypeEClassIDTerminalRuleCall_2_0_0_1; }
		
		//'[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_1_0() { return cLeftSquareBracketKeyword_2_1_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_1() { return cTypesAssignment_2_1_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_1_0() { return cTypesEClassCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_1_0_1; }
		
		//( "," types+=[ecore::EClass|ID])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//types+=[ecore::EClass|ID]
		public Assignment getTypesAssignment_2_1_2_1() { return cTypesAssignment_2_1_2_1; }
		
		//[ecore::EClass|ID]
		public CrossReference getTypesEClassCrossReference_2_1_2_1_0() { return cTypesEClassCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getTypesEClassIDTerminalRuleCall_2_1_2_1_0_1() { return cTypesEClassIDTerminalRuleCall_2_1_2_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_1_3() { return cRightSquareBracketKeyword_2_1_3; }
		
		//('where' '{' expression=Expression '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'where'
		public Keyword getWhereKeyword_3_0() { return cWhereKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//expression=Expression
		public Assignment getExpressionAssignment_3_2() { return cExpressionAssignment_3_2; }
		
		//Expression
		public RuleCall getExpressionExpressionParserRuleCall_3_2_0() { return cExpressionExpressionParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.BooleanType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpecificBooleanTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomBooleanTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BooleanType returns BooleanType:
		//    SpecificBooleanType | RandomBooleanType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecificBooleanType | RandomBooleanType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpecificBooleanType
		public RuleCall getSpecificBooleanTypeParserRuleCall_0() { return cSpecificBooleanTypeParserRuleCall_0; }
		
		//RandomBooleanType
		public RuleCall getRandomBooleanTypeParserRuleCall_1() { return cRandomBooleanTypeParserRuleCall_1; }
	}
	public class RandomBooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomBooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomBooleanTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomBooleanKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//RandomBooleanType returns RandomBooleanType:
		//    {RandomBooleanType}
		//    operator=Operator
		//     'random-boolean'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomBooleanType}
		//operator=Operator
		// 'random-boolean'
		public Group getGroup() { return cGroup; }
		
		//{RandomBooleanType}
		public Action getRandomBooleanTypeAction_0() { return cRandomBooleanTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random-boolean'
		public Keyword getRandomBooleanKeyword_2() { return cRandomBooleanKeyword_2; }
	}
	public class SpecificBooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificBooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificBooleanTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEBooleanParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//SpecificBooleanType returns SpecificBooleanType:
		//    {SpecificBooleanType}
		//    operator=Operator
		//    value=EBoolean
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificBooleanType}
		//operator=Operator
		//value=EBoolean
		public Group getGroup() { return cGroup; }
		
		//{SpecificBooleanType}
		public Action getSpecificBooleanTypeAction_0() { return cSpecificBooleanTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//value=EBoolean
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_2_0() { return cValueEBooleanParserRuleCall_2_0; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.StringType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpecificStringTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomStringTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUpperStringTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLowerStringTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCatStartStringTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCatEndStringTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cReplaceStringTypeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRandomStringNumberTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//StringType returns StringType:
		//    SpecificStringType | RandomStringType | UpperStringType | LowerStringType | CatStartStringType | CatEndStringType | ReplaceStringType | RandomStringNumberType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecificStringType | RandomStringType | UpperStringType | LowerStringType | CatStartStringType | CatEndStringType | ReplaceStringType | RandomStringNumberType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpecificStringType
		public RuleCall getSpecificStringTypeParserRuleCall_0() { return cSpecificStringTypeParserRuleCall_0; }
		
		//RandomStringType
		public RuleCall getRandomStringTypeParserRuleCall_1() { return cRandomStringTypeParserRuleCall_1; }
		
		//UpperStringType
		public RuleCall getUpperStringTypeParserRuleCall_2() { return cUpperStringTypeParserRuleCall_2; }
		
		//LowerStringType
		public RuleCall getLowerStringTypeParserRuleCall_3() { return cLowerStringTypeParserRuleCall_3; }
		
		//CatStartStringType
		public RuleCall getCatStartStringTypeParserRuleCall_4() { return cCatStartStringTypeParserRuleCall_4; }
		
		//CatEndStringType
		public RuleCall getCatEndStringTypeParserRuleCall_5() { return cCatEndStringTypeParserRuleCall_5; }
		
		//ReplaceStringType
		public RuleCall getReplaceStringTypeParserRuleCall_6() { return cReplaceStringTypeParserRuleCall_6; }
		
		//RandomStringNumberType
		public RuleCall getRandomStringNumberTypeParserRuleCall_7() { return cRandomStringNumberTypeParserRuleCall_7; }
	}
	public class RandomStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomStringKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMinAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMinEIntParserRuleCall_4_0 = (RuleCall)cMinAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMaxEIntParserRuleCall_6_0 = (RuleCall)cMaxAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RandomStringType returns RandomStringType :
		//    {RandomStringType}
		//    operator=Operator
		//    'random-string' '(' min=EInt ',' max=EInt ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomStringType}
		//operator=Operator
		//'random-string' '(' min=EInt ',' max=EInt ')'
		public Group getGroup() { return cGroup; }
		
		//{RandomStringType}
		public Action getRandomStringTypeAction_0() { return cRandomStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random-string'
		public Keyword getRandomStringKeyword_2() { return cRandomStringKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//min=EInt
		public Assignment getMinAssignment_4() { return cMinAssignment_4; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_4_0() { return cMinEIntParserRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//max=EInt
		public Assignment getMaxAssignment_6() { return cMaxAssignment_6; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_6_0() { return cMaxEIntParserRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class SpecificStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//SpecificStringType returns SpecificStringType:
		//    {SpecificStringType}
		//    operator=Operator
		//    value=STRING
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificStringType}
		//operator=Operator
		//value=STRING
		public Group getGroup() { return cGroup; }
		
		//{SpecificStringType}
		public Action getSpecificStringTypeAction_0() { return cSpecificStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}
	public class UpperStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.UpperStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUpperStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cUpperKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//UpperStringType returns UpperStringType:
		//    {UpperStringType}
		//    operator=Operator
		//    'upper'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{UpperStringType}
		//operator=Operator
		//'upper'
		public Group getGroup() { return cGroup; }
		
		//{UpperStringType}
		public Action getUpperStringTypeAction_0() { return cUpperStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'upper'
		public Keyword getUpperKeyword_2() { return cUpperKeyword_2; }
	}
	public class CatStartStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CatStartStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCatStartStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cCatstartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CatStartStringType returns CatStartStringType:
		//    {CatStartStringType}
		//    operator=Operator
		//    'catstart' '('value=EString')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{CatStartStringType}
		//operator=Operator
		//'catstart' '('value=EString')'
		public Group getGroup() { return cGroup; }
		
		//{CatStartStringType}
		public Action getCatStartStringTypeAction_0() { return cCatStartStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'catstart'
		public Keyword getCatstartKeyword_2() { return cCatstartKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//value=EString
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_0() { return cValueEStringParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class CatEndStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.CatEndStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCatEndStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cCatendKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueEStringParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CatEndStringType returns CatEndStringType:
		//    {CatEndStringType}
		//    operator=Operator
		//    'catend' '('value=EString')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{CatEndStringType}
		//operator=Operator
		//'catend' '('value=EString')'
		public Group getGroup() { return cGroup; }
		
		//{CatEndStringType}
		public Action getCatEndStringTypeAction_0() { return cCatEndStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'catend'
		public Keyword getCatendKeyword_2() { return cCatendKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//value=EString
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_0() { return cValueEStringParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class ListStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ListStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ListStringType returns ListStringType:
		//    {ListStringType}
		//    operator=Operator
		//    '['value+=EString ( "," value+=EString)*']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ListStringType}
		//operator=Operator
		//'['value+=EString ( "," value+=EString)*']'
		public Group getGroup() { return cGroup; }
		
		//{ListStringType}
		public Action getListStringTypeAction_0() { return cListStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//value+=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
		
		//( "," value+=EString)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//value+=EString
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_4_1_0() { return cValueEStringParserRuleCall_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class LowerStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.LowerStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLowerStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cLowerKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//LowerStringType returns LowerStringType:
		//    {LowerStringType}
		//    operator=Operator
		//    'lower'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{LowerStringType}
		//operator=Operator
		//'lower'
		public Group getGroup() { return cGroup; }
		
		//{LowerStringType}
		public Action getLowerStringTypeAction_0() { return cLowerStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'lower'
		public Keyword getLowerKeyword_2() { return cLowerKeyword_2; }
	}
	public class ReplaceStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ReplaceStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReplaceStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cReplaceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOldstringAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOldstringEStringParserRuleCall_4_0 = (RuleCall)cOldstringAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNewstringAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNewstringEStringParserRuleCall_6_0 = (RuleCall)cNewstringAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ReplaceStringType returns ReplaceStringType:
		//    {ReplaceStringType}
		//    operator=Operator
		//    'replace' '(' oldstring=EString ',' newstring=EString ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ReplaceStringType}
		//operator=Operator
		//'replace' '(' oldstring=EString ',' newstring=EString ')'
		public Group getGroup() { return cGroup; }
		
		//{ReplaceStringType}
		public Action getReplaceStringTypeAction_0() { return cReplaceStringTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'replace'
		public Keyword getReplaceKeyword_2() { return cReplaceKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//oldstring=EString
		public Assignment getOldstringAssignment_4() { return cOldstringAssignment_4; }
		
		//EString
		public RuleCall getOldstringEStringParserRuleCall_4_0() { return cOldstringEStringParserRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//newstring=EString
		public Assignment getNewstringAssignment_6() { return cNewstringAssignment_6; }
		
		//EString
		public RuleCall getNewstringEStringParserRuleCall_6_0() { return cNewstringEStringParserRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class DoubleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.DoubleType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpecificDoubleTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomDoubleTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DoubleType returns DoubleType:
		//    SpecificDoubleType | RandomDoubleType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecificDoubleType | RandomDoubleType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpecificDoubleType
		public RuleCall getSpecificDoubleTypeParserRuleCall_0() { return cSpecificDoubleTypeParserRuleCall_0; }
		
		//RandomDoubleType
		public RuleCall getRandomDoubleTypeParserRuleCall_1() { return cRandomDoubleTypeParserRuleCall_1; }
	}
	public class RandomDoubleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomDoubleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomDoubleTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomDoubleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMinAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMinEDoubleParserRuleCall_3_1_0 = (RuleCall)cMinAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMaxAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMaxEDoubleParserRuleCall_3_3_0 = (RuleCall)cMaxAssignment_3_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//RandomDoubleType returns RandomDoubleType :
		//    {RandomDoubleType}
		//    operator=Operator
		//    'random-double' ('(' min=EDouble ',' max=EDouble ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomDoubleType}
		//operator=Operator
		//'random-double' ('(' min=EDouble ',' max=EDouble ')')?
		public Group getGroup() { return cGroup; }
		
		//{RandomDoubleType}
		public Action getRandomDoubleTypeAction_0() { return cRandomDoubleTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random-double'
		public Keyword getRandomDoubleKeyword_2() { return cRandomDoubleKeyword_2; }
		
		//('(' min=EDouble ',' max=EDouble ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//min=EDouble
		public Assignment getMinAssignment_3_1() { return cMinAssignment_3_1; }
		
		//EDouble
		public RuleCall getMinEDoubleParserRuleCall_3_1_0() { return cMinEDoubleParserRuleCall_3_1_0; }
		
		//','
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }
		
		//max=EDouble
		public Assignment getMaxAssignment_3_3() { return cMaxAssignment_3_3; }
		
		//EDouble
		public RuleCall getMaxEDoubleParserRuleCall_3_3_0() { return cMaxEDoubleParserRuleCall_3_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
	}
	public class SpecificDoubleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificDoubleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificDoubleTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEDoubleParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//SpecificDoubleType returns SpecificDoubleType:
		//    {SpecificDoubleType}
		//    operator=Operator
		//    value=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificDoubleType}
		//operator=Operator
		//value=EDouble
		public Group getGroup() { return cGroup; }
		
		//{SpecificDoubleType}
		public Action getSpecificDoubleTypeAction_0() { return cSpecificDoubleTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//value=EDouble
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_2_0() { return cValueEDoubleParserRuleCall_2_0; }
	}
	public class MinValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.MinValueType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Keyword cMinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributeEAttributeCrossReference_3_0 = (CrossReference)cAttributeAssignment_3.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_3_0_1 = (RuleCall)cAttributeEAttributeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MinValueType returns MinValueType:
		//    operator=Operator
		//    'min' '(' attribute=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=Operator
		//'min' '(' attribute=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0() { return cOperatorOperatorEnumRuleCall_0_0; }
		
		//'min'
		public Keyword getMinKeyword_1() { return cMinKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//attribute=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_3_0() { return cAttributeEAttributeCrossReference_3_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_3_0_1() { return cAttributeEAttributeIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class MaxValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.MaxValueType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Keyword cMaxKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributeEAttributeCrossReference_3_0 = (CrossReference)cAttributeAssignment_3.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_3_0_1 = (RuleCall)cAttributeEAttributeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MaxValueType returns MaxValueType:
		//    operator=Operator
		//    'max' '(' attribute=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=Operator
		//'max' '(' attribute=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0() { return cOperatorOperatorEnumRuleCall_0_0; }
		
		//'max'
		public Keyword getMaxKeyword_1() { return cMaxKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//attribute=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_3_0() { return cAttributeEAttributeCrossReference_3_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_3_0_1() { return cAttributeEAttributeIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class IntegerTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.IntegerType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSpecificIntegerTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomIntegerTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//IntegerType returns IntegerType:
		//    SpecificIntegerType | RandomIntegerType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecificIntegerType | RandomIntegerType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SpecificIntegerType
		public RuleCall getSpecificIntegerTypeParserRuleCall_0() { return cSpecificIntegerTypeParserRuleCall_0; }
		
		//RandomIntegerType
		public RuleCall getRandomIntegerTypeParserRuleCall_1() { return cRandomIntegerTypeParserRuleCall_1; }
	}
	public class SpecificIntegerTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SpecificIntegerType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecificIntegerTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEIntParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//SpecificIntegerType returns SpecificIntegerType:
		//    {SpecificIntegerType}
		//    operator=Operator
		//    value=EInt
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SpecificIntegerType}
		//operator=Operator
		//value=EInt
		public Group getGroup() { return cGroup; }
		
		//{SpecificIntegerType}
		public Action getSpecificIntegerTypeAction_0() { return cSpecificIntegerTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//value=EInt
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_2_0() { return cValueEIntParserRuleCall_2_0; }
	}
	public class RandomIntegerTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomIntegerType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomIntegerTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomIntKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMinAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMinEIntParserRuleCall_3_1_0 = (RuleCall)cMinAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMaxAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMaxEIntParserRuleCall_3_3_0 = (RuleCall)cMaxAssignment_3_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//RandomIntegerType returns RandomIntegerType:
		//    {RandomIntegerType}
		//    operator=Operator
		//    'random-int' ('(' min=EInt ',' max=EInt ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomIntegerType}
		//operator=Operator
		//'random-int' ('(' min=EInt ',' max=EInt ')')?
		public Group getGroup() { return cGroup; }
		
		//{RandomIntegerType}
		public Action getRandomIntegerTypeAction_0() { return cRandomIntegerTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random-int'
		public Keyword getRandomIntKeyword_2() { return cRandomIntKeyword_2; }
		
		//('(' min=EInt ',' max=EInt ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//min=EInt
		public Assignment getMinAssignment_3_1() { return cMinAssignment_3_1; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_3_1_0() { return cMinEIntParserRuleCall_3_1_0; }
		
		//','
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }
		
		//max=EInt
		public Assignment getMaxAssignment_3_3() { return cMaxAssignment_3_3; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_3_3_0() { return cMaxEIntParserRuleCall_3_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
	}
	public class RandomStringNumberTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomStringNumberType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomStringNumberTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomIntStringKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMinAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMinEIntParserRuleCall_3_1_0 = (RuleCall)cMinAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMaxAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cMaxEIntParserRuleCall_3_3_0 = (RuleCall)cMaxAssignment_3_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//RandomStringNumberType returns RandomStringNumberType:
		//    {RandomStringNumberType}
		//    operator=Operator
		//    'random-int-string' ('(' min=EInt ',' max=EInt ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomStringNumberType}
		//operator=Operator
		//'random-int-string' ('(' min=EInt ',' max=EInt ')')?
		public Group getGroup() { return cGroup; }
		
		//{RandomStringNumberType}
		public Action getRandomStringNumberTypeAction_0() { return cRandomStringNumberTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random-int-string'
		public Keyword getRandomIntStringKeyword_2() { return cRandomIntStringKeyword_2; }
		
		//('(' min=EInt ',' max=EInt ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//min=EInt
		public Assignment getMinAssignment_3_1() { return cMinAssignment_3_1; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_3_1_0() { return cMinEIntParserRuleCall_3_1_0; }
		
		//','
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }
		
		//max=EInt
		public Assignment getMaxAssignment_3_3() { return cMaxAssignment_3_3; }
		
		//EInt
		public RuleCall getMaxEIntParserRuleCall_3_3_0() { return cMaxEIntParserRuleCall_3_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
	}
	public class RandomTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRandomTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cRandomKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//RandomType returns RandomType:
		//    {RandomType}
		//    operator=Operator
		//    'random'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{RandomType}
		//operator=Operator
		//'random'
		public Group getGroup() { return cGroup; }
		
		//{RandomType}
		public Action getRandomTypeAction_0() { return cRandomTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'random'
		public Keyword getRandomKeyword_2() { return cRandomKeyword_2; }
	}
	public class RandomDoubleNumberTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomDoubleNumberType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Keyword cRandomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMinAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMinEDoubleParserRuleCall_3_0 = (RuleCall)cMinAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cObjectAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_5_0_0 = (RuleCall)cObjectAssignment_5_0.eContents().get(0);
		private final Keyword cFullStopKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cMaxEAttributeCrossReference_6_0 = (CrossReference)cMaxAssignment_6.eContents().get(0);
		private final RuleCall cMaxEAttributeIDTerminalRuleCall_6_0_1 = (RuleCall)cMaxEAttributeCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RandomDoubleNumberType returns RandomDoubleNumberType:
		//    operator=Operator
		//    'random' '(' min=EDouble ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=Operator
		//'random' '(' min=EDouble ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0() { return cOperatorOperatorEnumRuleCall_0_0; }
		
		//'random'
		public Keyword getRandomKeyword_1() { return cRandomKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//min=EDouble
		public Assignment getMinAssignment_3() { return cMinAssignment_3; }
		
		//EDouble
		public RuleCall getMinEDoubleParserRuleCall_3_0() { return cMinEDoubleParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//(object = ObSelectionStrategy '.')?
		public Group getGroup_5() { return cGroup_5; }
		
		//object = ObSelectionStrategy
		public Assignment getObjectAssignment_5_0() { return cObjectAssignment_5_0; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_5_0_0() { return cObjectObSelectionStrategyParserRuleCall_5_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_5_1() { return cFullStopKeyword_5_1; }
		
		//max=[ecore::EAttribute|ID]
		public Assignment getMaxAssignment_6() { return cMaxAssignment_6; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getMaxEAttributeCrossReference_6_0() { return cMaxEAttributeCrossReference_6_0; }
		
		//ID
		public RuleCall getMaxEAttributeIDTerminalRuleCall_6_0_1() { return cMaxEAttributeIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class RandomIntegerNumberTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.RandomIntegerNumberType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Keyword cRandomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMinAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMinEIntParserRuleCall_3_0 = (RuleCall)cMinAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cObjectAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cObjectObSelectionStrategyParserRuleCall_5_0_0 = (RuleCall)cObjectAssignment_5_0.eContents().get(0);
		private final Keyword cFullStopKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cMaxEAttributeCrossReference_6_0 = (CrossReference)cMaxAssignment_6.eContents().get(0);
		private final RuleCall cMaxEAttributeIDTerminalRuleCall_6_0_1 = (RuleCall)cMaxEAttributeCrossReference_6_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//RandomIntegerNumberType returns RandomIntegerNumberType:
		//    operator=Operator
		//    'random' '(' min=EInt ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=Operator
		//'random' '(' min=EInt ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
		public Group getGroup() { return cGroup; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0() { return cOperatorOperatorEnumRuleCall_0_0; }
		
		//'random'
		public Keyword getRandomKeyword_1() { return cRandomKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//min=EInt
		public Assignment getMinAssignment_3() { return cMinAssignment_3; }
		
		//EInt
		public RuleCall getMinEIntParserRuleCall_3_0() { return cMinEIntParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//(object = ObSelectionStrategy '.')?
		public Group getGroup_5() { return cGroup_5; }
		
		//object = ObSelectionStrategy
		public Assignment getObjectAssignment_5_0() { return cObjectAssignment_5_0; }
		
		//ObSelectionStrategy
		public RuleCall getObjectObSelectionStrategyParserRuleCall_5_0_0() { return cObjectObSelectionStrategyParserRuleCall_5_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_5_1() { return cFullStopKeyword_5_1; }
		
		//max=[ecore::EAttribute|ID]
		public Assignment getMaxAssignment_6() { return cMaxAssignment_6; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getMaxEAttributeCrossReference_6_0() { return cMaxEAttributeCrossReference_6_0; }
		
		//ID
		public RuleCall getMaxEAttributeIDTerminalRuleCall_6_0_1() { return cMaxEAttributeIDTerminalRuleCall_6_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cValueEObjectCrossReference_3_0 = (CrossReference)cValueAssignment_3.eContents().get(0);
		private final RuleCall cValueEObjectIDTerminalRuleCall_3_0_1 = (RuleCall)cValueEObjectCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cValueEObjectCrossReference_4_1_0 = (CrossReference)cValueAssignment_4_1.eContents().get(0);
		private final RuleCall cValueEObjectIDTerminalRuleCall_4_1_0_1 = (RuleCall)cValueEObjectCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ListType returns ListType:
		//    {ListType}
		//    operator=Operator
		//    '{'value+=[ecore::EObject] ( "," value+=[ecore::EObject])*'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ListType}
		//operator=Operator
		//'{'value+=[ecore::EObject] ( "," value+=[ecore::EObject])*'}'
		public Group getGroup() { return cGroup; }
		
		//{ListType}
		public Action getListTypeAction_0() { return cListTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//value+=[ecore::EObject]
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//[ecore::EObject]
		public CrossReference getValueEObjectCrossReference_3_0() { return cValueEObjectCrossReference_3_0; }
		
		//ID
		public RuleCall getValueEObjectIDTerminalRuleCall_3_0_1() { return cValueEObjectIDTerminalRuleCall_3_0_1; }
		
		//( "," value+=[ecore::EObject])*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//value+=[ecore::EObject]
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }
		
		//[ecore::EObject]
		public CrossReference getValueEObjectCrossReference_4_1_0() { return cValueEObjectCrossReference_4_1_0; }
		
		//ID
		public RuleCall getValueEObjectIDTerminalRuleCall_4_1_0_1() { return cValueEObjectIDTerminalRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ObjectAttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ObjectAttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectAttributeTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOperatorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_1_0 = (RuleCall)cOperatorAssignment_1.eContents().get(0);
		private final Assignment cObjSelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cObjSelObjectEmitterCrossReference_2_0 = (CrossReference)cObjSelAssignment_2.eContents().get(0);
		private final RuleCall cObjSelObjectEmitterIDTerminalRuleCall_2_0_1 = (RuleCall)cObjSelObjectEmitterCrossReference_2_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttributeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAttributeEAttributeCrossReference_4_0 = (CrossReference)cAttributeAssignment_4.eContents().get(0);
		private final RuleCall cAttributeEAttributeIDTerminalRuleCall_4_0_1 = (RuleCall)cAttributeEAttributeCrossReference_4_0.eContents().get(1);
		
		//ObjectAttributeType returns ObjectAttributeType:
		//    {ObjectAttributeType}
		//    operator=Operator
		//    objSel=[ObjectEmitter|ID] '.' attribute=[ecore::EAttribute|ID]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ObjectAttributeType}
		//operator=Operator
		//objSel=[ObjectEmitter|ID] '.' attribute=[ecore::EAttribute|ID]
		public Group getGroup() { return cGroup; }
		
		//{ObjectAttributeType}
		public Action getObjectAttributeTypeAction_0() { return cObjectAttributeTypeAction_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_1() { return cOperatorAssignment_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_1_0() { return cOperatorOperatorEnumRuleCall_1_0; }
		
		//objSel=[ObjectEmitter|ID]
		public Assignment getObjSelAssignment_2() { return cObjSelAssignment_2; }
		
		//[ObjectEmitter|ID]
		public CrossReference getObjSelObjectEmitterCrossReference_2_0() { return cObjSelObjectEmitterCrossReference_2_0; }
		
		//ID
		public RuleCall getObjSelObjectEmitterIDTerminalRuleCall_2_0_1() { return cObjSelObjectEmitterIDTerminalRuleCall_2_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//attribute=[ecore::EAttribute|ID]
		public Assignment getAttributeAssignment_4() { return cAttributeAssignment_4; }
		
		//[ecore::EAttribute|ID]
		public CrossReference getAttributeEAttributeCrossReference_4_0() { return cAttributeEAttributeCrossReference_4_0; }
		
		//ID
		public RuleCall getAttributeEAttributeIDTerminalRuleCall_4_0_1() { return cAttributeEAttributeIDTerminalRuleCall_4_0_1; }
	}
	public class MaxCardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.MaxCardinality");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEIntParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//MaxCardinality returns ecore::EIntegerObject: EInt | '*';
		@Override public ParserRule getRule() { return rule; }
		
		//EInt | '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EInt
		public RuleCall getEIntParserRuleCall_0() { return cEIntParserRuleCall_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}
	
	public class LogicOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.LogicOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum LogicOperator returns LogicOperator:
		//    and = 'and' | or = 'or'
		//;
		public EnumRule getRule() { return rule; }
		
		//and = 'and' | or = 'or'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//and = 'and'
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }
		
		//'and'
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }
		
		//or = 'or'
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }
		
		//'or'
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }
	}
	public class OperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualsEqualsSignKeyword_0_0 = (Keyword)cEqualsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDifferentEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDifferentLessThanSignGreaterThanSignKeyword_1_0 = (Keyword)cDifferentEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInInKeyword_2_0 = (Keyword)cInEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIsEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIsIsKeyword_3_0 = (Keyword)cIsEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cNotEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cNotNotKeyword_4_0 = (Keyword)cNotEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cGteEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cGteGreaterThanSignEqualsSignKeyword_5_0 = (Keyword)cGteEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLteEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLteLessThanSignEqualsSignKeyword_6_0 = (Keyword)cLteEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cGtEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cGtGreaterThanSignKeyword_7_0 = (Keyword)cGtEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cLtEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cLtLessThanSignKeyword_8_0 = (Keyword)cLtEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum Operator returns Operator:
		//    equals = '=' | different = '<>' | in = 'in' | is = 'is' | not = 'not' | gte = '>=' | lte = '<=' | gt = '>' | lt = '<'
		//;
		public EnumRule getRule() { return rule; }
		
		//equals = '=' | different = '<>' | in = 'in' | is = 'is' | not = 'not' | gte = '>=' | lte = '<=' | gt = '>' | lt = '<'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//equals = '='
		public EnumLiteralDeclaration getEqualsEnumLiteralDeclaration_0() { return cEqualsEnumLiteralDeclaration_0; }
		
		//'='
		public Keyword getEqualsEqualsSignKeyword_0_0() { return cEqualsEqualsSignKeyword_0_0; }
		
		//different = '<>'
		public EnumLiteralDeclaration getDifferentEnumLiteralDeclaration_1() { return cDifferentEnumLiteralDeclaration_1; }
		
		//'<>'
		public Keyword getDifferentLessThanSignGreaterThanSignKeyword_1_0() { return cDifferentLessThanSignGreaterThanSignKeyword_1_0; }
		
		//in = 'in'
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_2() { return cInEnumLiteralDeclaration_2; }
		
		//'in'
		public Keyword getInInKeyword_2_0() { return cInInKeyword_2_0; }
		
		//is = 'is'
		public EnumLiteralDeclaration getIsEnumLiteralDeclaration_3() { return cIsEnumLiteralDeclaration_3; }
		
		//'is'
		public Keyword getIsIsKeyword_3_0() { return cIsIsKeyword_3_0; }
		
		//not = 'not'
		public EnumLiteralDeclaration getNotEnumLiteralDeclaration_4() { return cNotEnumLiteralDeclaration_4; }
		
		//'not'
		public Keyword getNotNotKeyword_4_0() { return cNotNotKeyword_4_0; }
		
		//gte = '>='
		public EnumLiteralDeclaration getGteEnumLiteralDeclaration_5() { return cGteEnumLiteralDeclaration_5; }
		
		//'>='
		public Keyword getGteGreaterThanSignEqualsSignKeyword_5_0() { return cGteGreaterThanSignEqualsSignKeyword_5_0; }
		
		//lte = '<='
		public EnumLiteralDeclaration getLteEnumLiteralDeclaration_6() { return cLteEnumLiteralDeclaration_6; }
		
		//'<='
		public Keyword getLteLessThanSignEqualsSignKeyword_6_0() { return cLteLessThanSignEqualsSignKeyword_6_0; }
		
		//gt = '>'
		public EnumLiteralDeclaration getGtEnumLiteralDeclaration_7() { return cGtEnumLiteralDeclaration_7; }
		
		//'>'
		public Keyword getGtGreaterThanSignKeyword_7_0() { return cGtGreaterThanSignKeyword_7_0; }
		
		//lt = '<'
		public EnumLiteralDeclaration getLtEnumLiteralDeclaration_8() { return cLtEnumLiteralDeclaration_8; }
		
		//'<'
		public Keyword getLtLessThanSignKeyword_8_0() { return cLtLessThanSignKeyword_8_0; }
	}
	public class ArithmeticOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.ArithmeticOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAddPlusSignKeyword_0_0 = (Keyword)cAddEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSubtractEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSubtractHyphenMinusKeyword_1_0 = (Keyword)cSubtractEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMultiplyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMultiplyAsteriskKeyword_2_0 = (Keyword)cMultiplyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDivideEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDivideSolidusKeyword_3_0 = (Keyword)cDivideEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cModuleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cModulePercentSignKeyword_4_0 = (Keyword)cModuleEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ArithmeticOperator returns ArithmeticOperator:
		//    add = '+' | subtract = '-' | multiply = '*' | divide = '/' | module = '%'
		//;
		public EnumRule getRule() { return rule; }
		
		//add = '+' | subtract = '-' | multiply = '*' | divide = '/' | module = '%'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//add = '+'
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration_0() { return cAddEnumLiteralDeclaration_0; }
		
		//'+'
		public Keyword getAddPlusSignKeyword_0_0() { return cAddPlusSignKeyword_0_0; }
		
		//subtract = '-'
		public EnumLiteralDeclaration getSubtractEnumLiteralDeclaration_1() { return cSubtractEnumLiteralDeclaration_1; }
		
		//'-'
		public Keyword getSubtractHyphenMinusKeyword_1_0() { return cSubtractHyphenMinusKeyword_1_0; }
		
		//multiply = '*'
		public EnumLiteralDeclaration getMultiplyEnumLiteralDeclaration_2() { return cMultiplyEnumLiteralDeclaration_2; }
		
		//'*'
		public Keyword getMultiplyAsteriskKeyword_2_0() { return cMultiplyAsteriskKeyword_2_0; }
		
		//divide = '/'
		public EnumLiteralDeclaration getDivideEnumLiteralDeclaration_3() { return cDivideEnumLiteralDeclaration_3; }
		
		//'/'
		public Keyword getDivideSolidusKeyword_3_0() { return cDivideSolidusKeyword_3_0; }
		
		//module = '%'
		public EnumLiteralDeclaration getModuleEnumLiteralDeclaration_4() { return cModuleEnumLiteralDeclaration_4; }
		
		//'%'
		public Keyword getModulePercentSignKeyword_4_0() { return cModulePercentSignKeyword_4_0; }
	}
	public class RepeatElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.Repeat");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cYesEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cYesYesKeyword_0_0 = (Keyword)cYesEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNoEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNoNoKeyword_1_0 = (Keyword)cNoEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Repeat returns Repeat:
		//    yes = 'yes' | no = 'no'
		//;
		public EnumRule getRule() { return rule; }
		
		//yes = 'yes' | no = 'no'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//yes = 'yes'
		public EnumLiteralDeclaration getYesEnumLiteralDeclaration_0() { return cYesEnumLiteralDeclaration_0; }
		
		//'yes'
		public Keyword getYesYesKeyword_0_0() { return cYesYesKeyword_0_0; }
		
		//no = 'no'
		public EnumLiteralDeclaration getNoEnumLiteralDeclaration_1() { return cNoEnumLiteralDeclaration_1; }
		
		//'no'
		public Keyword getNoNoKeyword_1_0() { return cNoNoKeyword_1_0; }
	}
	public class SampleClauseElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "wodel.dsls.Wodel.SampleClause");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualsEqualsKeyword_0_0 = (Keyword)cEqualsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDistinctEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDistinctDistinctKeyword_1_0 = (Keyword)cDistinctEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum SampleClause returns SampleClause:
		//    equals = 'equals' | distinct = 'distinct'
		//;
		public EnumRule getRule() { return rule; }
		
		//equals = 'equals' | distinct = 'distinct'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//equals = 'equals'
		public EnumLiteralDeclaration getEqualsEnumLiteralDeclaration_0() { return cEqualsEnumLiteralDeclaration_0; }
		
		//'equals'
		public Keyword getEqualsEqualsKeyword_0_0() { return cEqualsEqualsKeyword_0_0; }
		
		//distinct = 'distinct'
		public EnumLiteralDeclaration getDistinctEnumLiteralDeclaration_1() { return cDistinctEnumLiteralDeclaration_1; }
		
		//'distinct'
		public Keyword getDistinctDistinctKeyword_1_0() { return cDistinctDistinctKeyword_1_0; }
	}
	
	private final MutatorEnvironmentElements pMutatorEnvironment;
	private final DefinitionElements pDefinition;
	private final LibraryElements pLibrary;
	private final ProgramElements pProgram;
	private final SourceElements pSource;
	private final ResourceElements pResource;
	private final BlockElements pBlock;
	private final ConstraintElements pConstraint;
	private final InvariantCSElements pInvariantCS;
	private final ExpCSElements pExpCS;
	private final LogicExpCSElements pLogicExpCS;
	private final CallExpCSElements pCallExpCS;
	private final PrimaryExpCSElements pPrimaryExpCS;
	private final NavigationExpCSElements pNavigationExpCS;
	private final LoopExpCSElements pLoopExpCS;
	private final CollectExpCSElements pCollectExpCS;
	private final IteratorVarCSElements pIteratorVarCS;
	private final IterateExpCSElements pIterateExpCS;
	private final AccVarCSElements pAccVarCS;
	private final ExistsExpCSElements pExistsExpCS;
	private final ForAllExpCSElements pForAllExpCS;
	private final NameExpCSElements pNameExpCS;
	private final NavigationNameExpCSElements pNavigationNameExpCS;
	private final RoundedBracketClauseCSElements pRoundedBracketClauseCS;
	private final LiteralExpCSElements pLiteralExpCS;
	private final IntLiteralExpCSElements pIntLiteralExpCS;
	private final StringLiteralExpCSElements pStringLiteralExpCS;
	private final BooleanLiteralExpCSElements pBooleanLiteralExpCS;
	private final PathNameCSElements pPathNameCS;
	private final NavigationPathNameCSElements pNavigationPathNameCS;
	private final PathCSElements pPathCS;
	private final NavigationPathCSElements pNavigationPathCS;
	private final PathElementCSElements pPathElementCS;
	private final NavigationPathElementCSElements pNavigationPathElementCS;
	private final PathVariableCSElements pPathVariableCS;
	private final NavigationPathVariableCSElements pNavigationPathVariableCS;
	private final MutatorElements pMutator;
	private final ObSelectionStrategyElements pObSelectionStrategy;
	private final RandomSelectionElements pRandomSelection;
	private final SpecificSelectionElements pSpecificSelection;
	private final CompleteSelectionElements pCompleteSelection;
	private final OtherSelectionElements pOtherSelection;
	private final AttributeEvaluationTypeElements pAttributeEvaluationType;
	private final AttributeTypeElements pAttributeType;
	private final NumberTypeElements pNumberType;
	private final RandomNumberTypeElements pRandomNumberType;
	private final LoadElements pLoad;
	private final EStringElements pEString;
	private final EIntElements pEInt;
	private final EDoubleElements pEDouble;
	private final EBooleanElements pEBoolean;
	private final LogicOperatorElements eLogicOperator;
	private final OperatorElements eOperator;
	private final ArithmeticOperatorElements eArithmeticOperator;
	private final RepeatElements eRepeat;
	private final SampleClauseElements eSampleClause;
	private final BinaryOperatorElements pBinaryOperator;
	private final AttributeEvaluationElements pAttributeEvaluation;
	private final ReferenceEvaluationElements pReferenceEvaluation;
	private final EvaluationElements pEvaluation;
	private final ExpressionElements pExpression;
	private final RemoveObjectMutatorElements pRemoveObjectMutator;
	private final RemoveReferenceMutatorElements pRemoveReferenceMutator;
	private final RemoveRandomReferenceMutatorElements pRemoveRandomReferenceMutator;
	private final RemoveSpecificReferenceMutatorElements pRemoveSpecificReferenceMutator;
	private final RemoveCompleteReferenceMutatorElements pRemoveCompleteReferenceMutator;
	private final CreateObjectMutatorElements pCreateObjectMutator;
	private final SelectObjectMutatorElements pSelectObjectMutator;
	private final SelectSampleMutatorElements pSelectSampleMutator;
	private final ModifyInformationMutatorElements pModifyInformationMutator;
	private final CreateReferenceMutatorElements pCreateReferenceMutator;
	private final ModifySourceReferenceMutatorElements pModifySourceReferenceMutator;
	private final ModifyTargetReferenceMutatorElements pModifyTargetReferenceMutator;
	private final CompositeMutatorElements pCompositeMutator;
	private final CloneObjectMutatorElements pCloneObjectMutator;
	private final RetypeObjectMutatorElements pRetypeObjectMutator;
	private final AttributeSetElements pAttributeSet;
	private final AttributeScalarElements pAttributeScalar;
	private final AttributeUnsetElements pAttributeUnset;
	private final AttributeSwapElements pAttributeSwap;
	private final AttributeCopyElements pAttributeCopy;
	private final AttributeReverseElements pAttributeReverse;
	private final AttributeOperationElements pAttributeOperation;
	private final ReferenceSetElements pReferenceSet;
	private final ReferenceInitElements pReferenceInit;
	private final ReferenceAddElements pReferenceAdd;
	private final ReferenceRemoveElements pReferenceRemove;
	private final ReferenceSwapElements pReferenceSwap;
	private final ReferenceAttElements pReferenceAtt;
	private final RandomTypeSelectionElements pRandomTypeSelection;
	private final SpecificObjectSelectionElements pSpecificObjectSelection;
	private final SpecificClosureSelectionElements pSpecificClosureSelection;
	private final CompleteTypeSelectionElements pCompleteTypeSelection;
	private final OtherTypeSelectionElements pOtherTypeSelection;
	private final TypedSelectionElements pTypedSelection;
	private final BooleanTypeElements pBooleanType;
	private final RandomBooleanTypeElements pRandomBooleanType;
	private final SpecificBooleanTypeElements pSpecificBooleanType;
	private final StringTypeElements pStringType;
	private final RandomStringTypeElements pRandomStringType;
	private final SpecificStringTypeElements pSpecificStringType;
	private final UpperStringTypeElements pUpperStringType;
	private final CatStartStringTypeElements pCatStartStringType;
	private final CatEndStringTypeElements pCatEndStringType;
	private final ListStringTypeElements pListStringType;
	private final LowerStringTypeElements pLowerStringType;
	private final ReplaceStringTypeElements pReplaceStringType;
	private final DoubleTypeElements pDoubleType;
	private final RandomDoubleTypeElements pRandomDoubleType;
	private final SpecificDoubleTypeElements pSpecificDoubleType;
	private final MinValueTypeElements pMinValueType;
	private final MaxValueTypeElements pMaxValueType;
	private final IntegerTypeElements pIntegerType;
	private final SpecificIntegerTypeElements pSpecificIntegerType;
	private final RandomIntegerTypeElements pRandomIntegerType;
	private final RandomStringNumberTypeElements pRandomStringNumberType;
	private final RandomTypeElements pRandomType;
	private final RandomDoubleNumberTypeElements pRandomDoubleNumberType;
	private final RandomIntegerNumberTypeElements pRandomIntegerNumberType;
	private final ListTypeElements pListType;
	private final ObjectAttributeTypeElements pObjectAttributeType;
	private final MaxCardinalityElements pMaxCardinality;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public WodelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMutatorEnvironment = new MutatorEnvironmentElements();
		this.pDefinition = new DefinitionElements();
		this.pLibrary = new LibraryElements();
		this.pProgram = new ProgramElements();
		this.pSource = new SourceElements();
		this.pResource = new ResourceElements();
		this.pBlock = new BlockElements();
		this.pConstraint = new ConstraintElements();
		this.pInvariantCS = new InvariantCSElements();
		this.pExpCS = new ExpCSElements();
		this.pLogicExpCS = new LogicExpCSElements();
		this.pCallExpCS = new CallExpCSElements();
		this.pPrimaryExpCS = new PrimaryExpCSElements();
		this.pNavigationExpCS = new NavigationExpCSElements();
		this.pLoopExpCS = new LoopExpCSElements();
		this.pCollectExpCS = new CollectExpCSElements();
		this.pIteratorVarCS = new IteratorVarCSElements();
		this.pIterateExpCS = new IterateExpCSElements();
		this.pAccVarCS = new AccVarCSElements();
		this.pExistsExpCS = new ExistsExpCSElements();
		this.pForAllExpCS = new ForAllExpCSElements();
		this.pNameExpCS = new NameExpCSElements();
		this.pNavigationNameExpCS = new NavigationNameExpCSElements();
		this.pRoundedBracketClauseCS = new RoundedBracketClauseCSElements();
		this.pLiteralExpCS = new LiteralExpCSElements();
		this.pIntLiteralExpCS = new IntLiteralExpCSElements();
		this.pStringLiteralExpCS = new StringLiteralExpCSElements();
		this.pBooleanLiteralExpCS = new BooleanLiteralExpCSElements();
		this.pPathNameCS = new PathNameCSElements();
		this.pNavigationPathNameCS = new NavigationPathNameCSElements();
		this.pPathCS = new PathCSElements();
		this.pNavigationPathCS = new NavigationPathCSElements();
		this.pPathElementCS = new PathElementCSElements();
		this.pNavigationPathElementCS = new NavigationPathElementCSElements();
		this.pPathVariableCS = new PathVariableCSElements();
		this.pNavigationPathVariableCS = new NavigationPathVariableCSElements();
		this.pMutator = new MutatorElements();
		this.pObSelectionStrategy = new ObSelectionStrategyElements();
		this.pRandomSelection = new RandomSelectionElements();
		this.pSpecificSelection = new SpecificSelectionElements();
		this.pCompleteSelection = new CompleteSelectionElements();
		this.pOtherSelection = new OtherSelectionElements();
		this.pAttributeEvaluationType = new AttributeEvaluationTypeElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pNumberType = new NumberTypeElements();
		this.pRandomNumberType = new RandomNumberTypeElements();
		this.pLoad = new LoadElements();
		this.pEString = new EStringElements();
		this.pEInt = new EIntElements();
		this.pEDouble = new EDoubleElements();
		this.pEBoolean = new EBooleanElements();
		this.eLogicOperator = new LogicOperatorElements();
		this.eOperator = new OperatorElements();
		this.eArithmeticOperator = new ArithmeticOperatorElements();
		this.eRepeat = new RepeatElements();
		this.eSampleClause = new SampleClauseElements();
		this.pBinaryOperator = new BinaryOperatorElements();
		this.pAttributeEvaluation = new AttributeEvaluationElements();
		this.pReferenceEvaluation = new ReferenceEvaluationElements();
		this.pEvaluation = new EvaluationElements();
		this.pExpression = new ExpressionElements();
		this.pRemoveObjectMutator = new RemoveObjectMutatorElements();
		this.pRemoveReferenceMutator = new RemoveReferenceMutatorElements();
		this.pRemoveRandomReferenceMutator = new RemoveRandomReferenceMutatorElements();
		this.pRemoveSpecificReferenceMutator = new RemoveSpecificReferenceMutatorElements();
		this.pRemoveCompleteReferenceMutator = new RemoveCompleteReferenceMutatorElements();
		this.pCreateObjectMutator = new CreateObjectMutatorElements();
		this.pSelectObjectMutator = new SelectObjectMutatorElements();
		this.pSelectSampleMutator = new SelectSampleMutatorElements();
		this.pModifyInformationMutator = new ModifyInformationMutatorElements();
		this.pCreateReferenceMutator = new CreateReferenceMutatorElements();
		this.pModifySourceReferenceMutator = new ModifySourceReferenceMutatorElements();
		this.pModifyTargetReferenceMutator = new ModifyTargetReferenceMutatorElements();
		this.pCompositeMutator = new CompositeMutatorElements();
		this.pCloneObjectMutator = new CloneObjectMutatorElements();
		this.pRetypeObjectMutator = new RetypeObjectMutatorElements();
		this.pAttributeSet = new AttributeSetElements();
		this.pAttributeScalar = new AttributeScalarElements();
		this.pAttributeUnset = new AttributeUnsetElements();
		this.pAttributeSwap = new AttributeSwapElements();
		this.pAttributeCopy = new AttributeCopyElements();
		this.pAttributeReverse = new AttributeReverseElements();
		this.pAttributeOperation = new AttributeOperationElements();
		this.pReferenceSet = new ReferenceSetElements();
		this.pReferenceInit = new ReferenceInitElements();
		this.pReferenceAdd = new ReferenceAddElements();
		this.pReferenceRemove = new ReferenceRemoveElements();
		this.pReferenceSwap = new ReferenceSwapElements();
		this.pReferenceAtt = new ReferenceAttElements();
		this.pRandomTypeSelection = new RandomTypeSelectionElements();
		this.pSpecificObjectSelection = new SpecificObjectSelectionElements();
		this.pSpecificClosureSelection = new SpecificClosureSelectionElements();
		this.pCompleteTypeSelection = new CompleteTypeSelectionElements();
		this.pOtherTypeSelection = new OtherTypeSelectionElements();
		this.pTypedSelection = new TypedSelectionElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pRandomBooleanType = new RandomBooleanTypeElements();
		this.pSpecificBooleanType = new SpecificBooleanTypeElements();
		this.pStringType = new StringTypeElements();
		this.pRandomStringType = new RandomStringTypeElements();
		this.pSpecificStringType = new SpecificStringTypeElements();
		this.pUpperStringType = new UpperStringTypeElements();
		this.pCatStartStringType = new CatStartStringTypeElements();
		this.pCatEndStringType = new CatEndStringTypeElements();
		this.pListStringType = new ListStringTypeElements();
		this.pLowerStringType = new LowerStringTypeElements();
		this.pReplaceStringType = new ReplaceStringTypeElements();
		this.pDoubleType = new DoubleTypeElements();
		this.pRandomDoubleType = new RandomDoubleTypeElements();
		this.pSpecificDoubleType = new SpecificDoubleTypeElements();
		this.pMinValueType = new MinValueTypeElements();
		this.pMaxValueType = new MaxValueTypeElements();
		this.pIntegerType = new IntegerTypeElements();
		this.pSpecificIntegerType = new SpecificIntegerTypeElements();
		this.pRandomIntegerType = new RandomIntegerTypeElements();
		this.pRandomStringNumberType = new RandomStringNumberTypeElements();
		this.pRandomType = new RandomTypeElements();
		this.pRandomDoubleNumberType = new RandomDoubleNumberTypeElements();
		this.pRandomIntegerNumberType = new RandomIntegerNumberTypeElements();
		this.pListType = new ListTypeElements();
		this.pObjectAttributeType = new ObjectAttributeTypeElements();
		this.pMaxCardinality = new MaxCardinalityElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("wodel.dsls.Wodel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MutatorEnvironment returns MutatorEnvironment:
	//    (load+=Load)*
	//    definition=Definition
	//    'with'
	//    ('blocks' '{' blocks+=Block* '}'
	//        | 'commands' '{' commands+=Mutator* '}')
	//    ('constraints' '{' constraints+= Constraint* '}')?;
	public MutatorEnvironmentElements getMutatorEnvironmentAccess() {
		return pMutatorEnvironment;
	}
	
	public ParserRule getMutatorEnvironmentRule() {
		return getMutatorEnvironmentAccess().getRule();
	}
	
	//Definition returns Definition:
	//    Library | Program;
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}
	
	//Library returns Library:
	//    {Library}
	//    'library' 'for' 'metamodel' metamodel=EString
	//    ;
	public LibraryElements getLibraryAccess() {
		return pLibrary;
	}
	
	public ParserRule getLibraryRule() {
		return getLibraryAccess().getRule();
	}
	
	//Program returns Program:
	//    {Program}
	//    'generate' (num=EInt | exhaustive ?= 'exhaustive')? 'mutants'
	//    'in' output=EString
	//    'from' source=Source
	//    'metamodel' metamodel=EString
	//    ('with' 'resources' 'from' '{' resources+=Resource '}' (',' '{' resources+=Resource '}')*)?
	//    ('description' description=EString)?
	//    ;
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}
	
	//Source returns Source:
	//    {Source}
	//    path=EString /*(multiple?='all')?*/
	//;
	public SourceElements getSourceAccess() {
		return pSource;
	}
	
	public ParserRule getSourceRule() {
		return getSourceAccess().getRule();
	}
	
	//Resource returns Resource:
	//    {Resource}
	//    name=ID '=' path=Source 'metamodel' '=' metamodel=EString
	//;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//Block returns Block:
	//    name=ID (description=EString)? ('from' from+=[Block|ID] (',' from+=[Block|ID])*)? ('repeat' '=' repeat=Repeat)? '{' commands+=Mutator* '}' ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
	//;
	public BlockElements getBlockAccess() {
		return pBlock;
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}
	
	//Constraint returns Constraint:
	//    'context' type=[ecore::EClass|ID] id=EString (':' (expressions+=InvariantCS)+ | '::' (rules+=EString)+)
	//;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//// Expressions
	//InvariantCS returns miniocl::InvariantCS:
	//    exp=ExpCS ';'
	//;
	public InvariantCSElements getInvariantCSAccess() {
		return pInvariantCS;
	}
	
	public ParserRule getInvariantCSRule() {
		return getInvariantCSAccess().getRule();
	}
	
	//// Expressions
	//ExpCS returns miniocl::ExpCS:
	//    LogicExpCS
	//;
	public ExpCSElements getExpCSAccess() {
		return pExpCS;
	}
	
	public ParserRule getExpCSRule() {
		return getExpCSAccess().getRule();
	}
	
	//LogicExpCS returns miniocl::LogicExpCS:
	//    CallExpCS ({miniocl::LogicExpCS.left=current} op=('=' | '<>') right=CallExpCS)*
	//;
	public LogicExpCSElements getLogicExpCSAccess() {
		return pLogicExpCS;
	}
	
	public ParserRule getLogicExpCSRule() {
		return getLogicExpCSAccess().getRule();
	}
	
	//CallExpCS returns miniocl::CallExpCS:
	//    PrimaryExpCS ({miniocl::CallExpCS.source=current} op=('.' | '->') navExp=NavigationExpCS)*
	//;
	public CallExpCSElements getCallExpCSAccess() {
		return pCallExpCS;
	}
	
	public ParserRule getCallExpCSRule() {
		return getCallExpCSAccess().getRule();
	}
	
	////CallExpCS returns miniocl::CallExpCS:
	////    PrimaryExpCS ({miniocl::CallExpCS.source=current} op=('.' | '->') nameExp=NameExpCS)
	////;
	//PrimaryExpCS returns miniocl::PrimaryExpCS:
	//    NameExpCS | LiteralExpCS
	//;
	public PrimaryExpCSElements getPrimaryExpCSAccess() {
		return pPrimaryExpCS;
	}
	
	public ParserRule getPrimaryExpCSRule() {
		return getPrimaryExpCSAccess().getRule();
	}
	
	//NavigationExpCS returns miniocl::NavigationExpCS:
	//  LoopExpCS | NavigationNameExpCS
	//;
	public NavigationExpCSElements getNavigationExpCSAccess() {
		return pNavigationExpCS;
	}
	
	public ParserRule getNavigationExpCSRule() {
		return getNavigationExpCSAccess().getRule();
	}
	
	//LoopExpCS returns miniocl::LoopExpCS:
	//  CollectExpCS | IterateExpCS | ExistsExpCS | ForAllExpCS
	//;
	public LoopExpCSElements getLoopExpCSAccess() {
		return pLoopExpCS;
	}
	
	public ParserRule getLoopExpCSRule() {
		return getLoopExpCSAccess().getRule();
	}
	
	//CollectExpCS returns miniocl::CollectExpCS:
	//  'collect' '(' (itVar=IteratorVarCS '|')? exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)* ')'
	//;
	public CollectExpCSElements getCollectExpCSAccess() {
		return pCollectExpCS;
	}
	
	public ParserRule getCollectExpCSRule() {
		return getCollectExpCSAccess().getRule();
	}
	
	//IteratorVarCS returns miniocl::IteratorVarCS:
	//  itName = ID (':' itType=PathNameCS)?
	//;
	public IteratorVarCSElements getIteratorVarCSAccess() {
		return pIteratorVarCS;
	}
	
	public ParserRule getIteratorVarCSRule() {
		return getIteratorVarCSAccess().getRule();
	}
	
	//IterateExpCS returns miniocl::IterateExpCS:
	//  'iterate' '(' itVar=IteratorVarCS ';' accVar=AccVarCS '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
	//;
	public IterateExpCSElements getIterateExpCSAccess() {
		return pIterateExpCS;
	}
	
	public ParserRule getIterateExpCSRule() {
		return getIterateExpCSAccess().getRule();
	}
	
	//AccVarCS returns miniocl::AccVarCS:
	//  '$' accVarName = ID (':' accType=PathNameCS)? ('=' accInitExp=ExpCS)?
	//;
	public AccVarCSElements getAccVarCSAccess() {
		return pAccVarCS;
	}
	
	public ParserRule getAccVarCSRule() {
		return getAccVarCSAccess().getRule();
	}
	
	//ExistsExpCS returns miniocl::ExistsExpCS:
	//  'exists' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
	//;
	public ExistsExpCSElements getExistsExpCSAccess() {
		return pExistsExpCS;
	}
	
	public ParserRule getExistsExpCSRule() {
		return getExistsExpCSAccess().getRule();
	}
	
	//ForAllExpCS returns miniocl::ForAllExpCS:
	//  'forAll' '(' accVars+=AccVarCS (',' accVars+=AccVarCS)* '|' exp+=ExpCS (logicOp+=('or' | 'and') exp+=ExpCS)*  ')'
	//;
	public ForAllExpCSElements getForAllExpCSAccess() {
		return pForAllExpCS;
	}
	
	public ParserRule getForAllExpCSRule() {
		return getForAllExpCSAccess().getRule();
	}
	
	//NameExpCS returns miniocl::NameExpCS:
	//    expName=PathNameCS
	//    (roundedBrackets=RoundedBracketClauseCS)?
	//    (callExp=CallExpCS)?
	//;
	public NameExpCSElements getNameExpCSAccess() {
		return pNameExpCS;
	}
	
	public ParserRule getNameExpCSRule() {
		return getNameExpCSAccess().getRule();
	}
	
	//NavigationNameExpCS returns miniocl::NavigationNameExpCS:
	//    expName=NavigationPathNameCS
	//    (roundedBrackets=RoundedBracketClauseCS)?
	//    (callExp=CallExpCS)?
	//;
	public NavigationNameExpCSElements getNavigationNameExpCSAccess() {
		return pNavigationNameExpCS;
	}
	
	public ParserRule getNavigationNameExpCSRule() {
		return getNavigationNameExpCSAccess().getRule();
	}
	
	//RoundedBracketClauseCS returns miniocl::RoundedBracketClauseCS:
	//    {miniocl::RoundedBracketClauseCS}
	//    '('
	//        (args+=ExpCS (','args+=ExpCS)* )?
	//    ')'
	//;
	public RoundedBracketClauseCSElements getRoundedBracketClauseCSAccess() {
		return pRoundedBracketClauseCS;
	}
	
	public ParserRule getRoundedBracketClauseCSRule() {
		return getRoundedBracketClauseCSAccess().getRule();
	}
	
	//LiteralExpCS returns miniocl::LiteralExpCS:
	//    IntLiteralExpCS | StringLiteralExpCS | BooleanLiteralExpCS
	//;
	public LiteralExpCSElements getLiteralExpCSAccess() {
		return pLiteralExpCS;
	}
	
	public ParserRule getLiteralExpCSRule() {
		return getLiteralExpCSAccess().getRule();
	}
	
	//IntLiteralExpCS returns miniocl::IntLiteralExpCS:
	//    intSymbol=INT
	//;
	public IntLiteralExpCSElements getIntLiteralExpCSAccess() {
		return pIntLiteralExpCS;
	}
	
	public ParserRule getIntLiteralExpCSRule() {
		return getIntLiteralExpCSAccess().getRule();
	}
	
	//StringLiteralExpCS returns miniocl::StringLiteralExpCS:
	//    stringSymbol=STRING
	//;
	public StringLiteralExpCSElements getStringLiteralExpCSAccess() {
		return pStringLiteralExpCS;
	}
	
	public ParserRule getStringLiteralExpCSRule() {
		return getStringLiteralExpCSAccess().getRule();
	}
	
	//BooleanLiteralExpCS returns miniocl::BooleanLiteralExpCS:
	//    {miniocl::BooleanExpCS}
	//    (boolSymbol?='true'
	//    | 'false')
	//    ;
	public BooleanLiteralExpCSElements getBooleanLiteralExpCSAccess() {
		return pBooleanLiteralExpCS;
	}
	
	public ParserRule getBooleanLiteralExpCSRule() {
		return getBooleanLiteralExpCSAccess().getRule();
	}
	
	//PathNameCS returns miniocl::PathNameCS:
	//    path+=PathCS
	//    ('::'path+=PathCS)*
	//;
	public PathNameCSElements getPathNameCSAccess() {
		return pPathNameCS;
	}
	
	public ParserRule getPathNameCSRule() {
		return getPathNameCSAccess().getRule();
	}
	
	//NavigationPathNameCS returns miniocl::NavigationPathNameCS:
	//    path+=NavigationPathCS
	//    ('::'path+=NavigationPathCS)*
	//;
	public NavigationPathNameCSElements getNavigationPathNameCSAccess() {
		return pNavigationPathNameCS;
	}
	
	public ParserRule getNavigationPathNameCSRule() {
		return getNavigationPathNameCSAccess().getRule();
	}
	
	//PathCS returns miniocl::PathCS:
	//    PathElementCS | PathVariableCS
	//;
	public PathCSElements getPathCSAccess() {
		return pPathCS;
	}
	
	public ParserRule getPathCSRule() {
		return getPathCSAccess().getRule();
	}
	
	//NavigationPathCS returns miniocl::NavigationPathCS:
	//    NavigationPathElementCS | NavigationPathVariableCS
	//;
	public NavigationPathCSElements getNavigationPathCSAccess() {
		return pNavigationPathCS;
	}
	
	public ParserRule getNavigationPathCSRule() {
		return getNavigationPathCSAccess().getRule();
	}
	
	//PathElementCS returns miniocl::PathElementCS:
	//    pathName=[ecore::EStructuralFeature|ID]
	//;
	public PathElementCSElements getPathElementCSAccess() {
		return pPathElementCS;
	}
	
	public ParserRule getPathElementCSRule() {
		return getPathElementCSAccess().getRule();
	}
	
	//NavigationPathElementCS returns miniocl::NavigationPathElementCS:
	//    pathName=[ecore::EStructuralFeature|ID]
	//;
	public NavigationPathElementCSElements getNavigationPathElementCSAccess() {
		return pNavigationPathElementCS;
	}
	
	public ParserRule getNavigationPathElementCSRule() {
		return getNavigationPathElementCSAccess().getRule();
	}
	
	//PathVariableCS returns miniocl::PathVariableCS:
	//    '$' varName=EString
	//;
	public PathVariableCSElements getPathVariableCSAccess() {
		return pPathVariableCS;
	}
	
	public ParserRule getPathVariableCSRule() {
		return getPathVariableCSAccess().getRule();
	}
	
	//NavigationPathVariableCS returns miniocl::NavigationPathVariableCS:
	//    '$' varName=EString
	//;
	public NavigationPathVariableCSElements getNavigationPathVariableCSAccess() {
		return pNavigationPathVariableCS;
	}
	
	public ParserRule getNavigationPathVariableCSRule() {
		return getNavigationPathVariableCSAccess().getRule();
	}
	
	//Mutator returns Mutator:
	//    CreateObjectMutator | SelectObjectMutator | SelectSampleMutator | CompositeMutator | ModifySourceReferenceMutator | ModifyTargetReferenceMutator
	//     | CreateReferenceMutator | RemoveObjectMutator | RemoveReferenceMutator | ModifyInformationMutator | CloneObjectMutator | RetypeObjectMutator;
	public MutatorElements getMutatorAccess() {
		return pMutator;
	}
	
	public ParserRule getMutatorRule() {
		return getMutatorAccess().getRule();
	}
	
	//ObSelectionStrategy returns ObSelectionStrategy:
	//    RandomSelection | SpecificSelection | CompleteSelection | OtherSelection | TypedSelection;
	public ObSelectionStrategyElements getObSelectionStrategyAccess() {
		return pObSelectionStrategy;
	}
	
	public ParserRule getObSelectionStrategyRule() {
		return getObSelectionStrategyAccess().getRule();
	}
	
	//RandomSelection returns RandomSelection:
	//    RandomTypeSelection;
	public RandomSelectionElements getRandomSelectionAccess() {
		return pRandomSelection;
	}
	
	public ParserRule getRandomSelectionRule() {
		return getRandomSelectionAccess().getRule();
	}
	
	//SpecificSelection returns SpecificSelection:
	//    SpecificObjectSelection | SpecificClosureSelection;
	public SpecificSelectionElements getSpecificSelectionAccess() {
		return pSpecificSelection;
	}
	
	public ParserRule getSpecificSelectionRule() {
		return getSpecificSelectionAccess().getRule();
	}
	
	//CompleteSelection returns CompleteSelection:
	//    CompleteTypeSelection;
	public CompleteSelectionElements getCompleteSelectionAccess() {
		return pCompleteSelection;
	}
	
	public ParserRule getCompleteSelectionRule() {
		return getCompleteSelectionAccess().getRule();
	}
	
	//OtherSelection returns OtherSelection:
	//    OtherTypeSelection;
	public OtherSelectionElements getOtherSelectionAccess() {
		return pOtherSelection;
	}
	
	public ParserRule getOtherSelectionRule() {
		return getOtherSelectionAccess().getRule();
	}
	
	//AttributeEvaluationType returns AttributeEvaluationType:
	//    AttributeType | ObjectAttributeType
	//;
	public AttributeEvaluationTypeElements getAttributeEvaluationTypeAccess() {
		return pAttributeEvaluationType;
	}
	
	public ParserRule getAttributeEvaluationTypeRule() {
		return getAttributeEvaluationTypeAccess().getRule();
	}
	
	//AttributeType returns AttributeType:
	//    NumberType | BooleanType | StringType | ListStringType | RandomType | ListType;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//NumberType returns NumberType:
	//    IntegerType | DoubleType | MinValueType | MaxValueType | RandomNumberType
	//;
	public NumberTypeElements getNumberTypeAccess() {
		return pNumberType;
	}
	
	public ParserRule getNumberTypeRule() {
		return getNumberTypeAccess().getRule();
	}
	
	//RandomNumberType returns RandomNumberType:
	//    RandomDoubleNumberType | RandomIntegerNumberType
	//;
	public RandomNumberTypeElements getRandomNumberTypeAccess() {
		return pRandomNumberType;
	}
	
	public ParserRule getRandomNumberTypeRule() {
		return getRandomNumberTypeAccess().getRule();
	}
	
	//Load returns Load:
	//    {Load}
	//    'import' file=EString
	//    ;
	public LoadElements getLoadAccess() {
		return pLoad;
	}
	
	public ParserRule getLoadRule() {
		return getLoadAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    ("true" | "false");
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum LogicOperator returns LogicOperator:
	//    and = 'and' | or = 'or'
	//;
	public LogicOperatorElements getLogicOperatorAccess() {
		return eLogicOperator;
	}
	
	public EnumRule getLogicOperatorRule() {
		return getLogicOperatorAccess().getRule();
	}
	
	//enum Operator returns Operator:
	//    equals = '=' | different = '<>' | in = 'in' | is = 'is' | not = 'not' | gte = '>=' | lte = '<=' | gt = '>' | lt = '<'
	//;
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//enum ArithmeticOperator returns ArithmeticOperator:
	//    add = '+' | subtract = '-' | multiply = '*' | divide = '/' | module = '%'
	//;
	public ArithmeticOperatorElements getArithmeticOperatorAccess() {
		return eArithmeticOperator;
	}
	
	public EnumRule getArithmeticOperatorRule() {
		return getArithmeticOperatorAccess().getRule();
	}
	
	//enum Repeat returns Repeat:
	//    yes = 'yes' | no = 'no'
	//;
	public RepeatElements getRepeatAccess() {
		return eRepeat;
	}
	
	public EnumRule getRepeatRule() {
		return getRepeatAccess().getRule();
	}
	
	//enum SampleClause returns SampleClause:
	//    equals = 'equals' | distinct = 'distinct'
	//;
	public SampleClauseElements getSampleClauseAccess() {
		return eSampleClause;
	}
	
	public EnumRule getSampleClauseRule() {
		return getSampleClauseAccess().getRule();
	}
	
	//BinaryOperator returns BinaryOperator:
	//    {BinaryOperator}
	//    type = LogicOperator
	//;
	public BinaryOperatorElements getBinaryOperatorAccess() {
		return pBinaryOperator;
	}
	
	public ParserRule getBinaryOperatorRule() {
		return getBinaryOperatorAccess().getRule();
	}
	
	//AttributeEvaluation returns AttributeEvaluation:
	//    {AttributeEvaluation}
	//    name=[ecore::EAttribute|ID]
	//    value=AttributeEvaluationType
	//;
	public AttributeEvaluationElements getAttributeEvaluationAccess() {
		return pAttributeEvaluation;
	}
	
	public ParserRule getAttributeEvaluationRule() {
		return getAttributeEvaluationAccess().getRule();
	}
	
	//ReferenceEvaluation returns ReferenceEvaluation:
	//    {ReferenceEvaluation}
	//    (name=[ecore::EReference|ID] | self?='self' | container ?= 'container')
	//    (('.' attName=[ecore::EAttribute|ID] attValue=AttributeEvaluationType)
	//        | ('->' refName=[ecore::EReference|ID] ('->' refRefName=[ecore::EReference|ID])?)?) operator=Operator (value=ObSelectionStrategy | 'null' )
	//;
	public ReferenceEvaluationElements getReferenceEvaluationAccess() {
		return pReferenceEvaluation;
	}
	
	public ParserRule getReferenceEvaluationRule() {
		return getReferenceEvaluationAccess().getRule();
	}
	
	//Evaluation returns Evaluation:
	//    AttributeEvaluation | ReferenceEvaluation
	//;
	public EvaluationElements getEvaluationAccess() {
		return pEvaluation;
	}
	
	public ParserRule getEvaluationRule() {
		return getEvaluationAccess().getRule();
	}
	
	//Expression returns Expression:
	//    {Expression}
	//    first=Evaluation (operator+=BinaryOperator second+=Evaluation)*
	//;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	///*
	//RemoveObjectMutator returns RemoveObjectMutator:
	//    'remove' object=ObSelectionStrategy
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	//RemoveReferenceMutator returns RemoveReferenceMutator:
	//    'remove' 'reference' refType=[ecore::EReference|ID]
	//    'in' container=ObSelectionStrategy
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	//*/
	//RemoveObjectMutator returns RemoveObjectMutator:
	//    {RemoveObjectMutator}
	//    'remove' object=ObSelectionStrategy ('from' container=ObSelectionStrategy)?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//;
	public RemoveObjectMutatorElements getRemoveObjectMutatorAccess() {
		return pRemoveObjectMutator;
	}
	
	public ParserRule getRemoveObjectMutatorRule() {
		return getRemoveObjectMutatorAccess().getRule();
	}
	
	//RemoveReferenceMutator returns RemoveReferenceMutator:
	//    RemoveRandomReferenceMutator | RemoveSpecificReferenceMutator | RemoveCompleteReferenceMutator;
	public RemoveReferenceMutatorElements getRemoveReferenceMutatorAccess() {
		return pRemoveReferenceMutator;
	}
	
	public ParserRule getRemoveReferenceMutatorRule() {
		return getRemoveReferenceMutatorAccess().getRule();
	}
	
	//RemoveRandomReferenceMutator returns RemoveRandomReferenceMutator:
	//    {RemoveRandomReferenceMutator}
	//    'remove' 'one' 'reference' refType=[ecore::EReference|ID]
	//    'in' type=[ecore::EClass|ID]
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public RemoveRandomReferenceMutatorElements getRemoveRandomReferenceMutatorAccess() {
		return pRemoveRandomReferenceMutator;
	}
	
	public ParserRule getRemoveRandomReferenceMutatorRule() {
		return getRemoveRandomReferenceMutatorAccess().getRule();
	}
	
	//RemoveSpecificReferenceMutator returns RemoveSpecificReferenceMutator:
	//    {RemoveSpecificReferenceMutator}
	//    'remove' 'reference' refType=[ecore::EReference|ID]
	//    'in' container=ObSelectionStrategy
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public RemoveSpecificReferenceMutatorElements getRemoveSpecificReferenceMutatorAccess() {
		return pRemoveSpecificReferenceMutator;
	}
	
	public ParserRule getRemoveSpecificReferenceMutatorRule() {
		return getRemoveSpecificReferenceMutatorAccess().getRule();
	}
	
	//RemoveCompleteReferenceMutator returns RemoveCompleteReferenceMutator:
	//    {RemoveCompleteReferenceMutator}
	//    'remove' 'all' 'reference' refType=[ecore::EReference|ID]
	//    'in' type=[ecore::EClass|ID]
	//;
	public RemoveCompleteReferenceMutatorElements getRemoveCompleteReferenceMutatorAccess() {
		return pRemoveCompleteReferenceMutator;
	}
	
	public ParserRule getRemoveCompleteReferenceMutatorRule() {
		return getRemoveCompleteReferenceMutatorAccess().getRule();
	}
	
	//CreateObjectMutator returns CreateObjectMutator:
	//    (name=ID '=')? 'create' type=[ecore::EClass|ID]
	//    ('in' container=ObSelectionStrategy)?
	//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public CreateObjectMutatorElements getCreateObjectMutatorAccess() {
		return pCreateObjectMutator;
	}
	
	public ParserRule getCreateObjectMutatorRule() {
		return getCreateObjectMutatorAccess().getRule();
	}
	
	//SelectObjectMutator returns SelectObjectMutator:
	//    name=ID '=' 'select' object=ObSelectionStrategy
	//    ('in' container=ObSelectionStrategy)?
	//    ;
	public SelectObjectMutatorElements getSelectObjectMutatorAccess() {
		return pSelectObjectMutator;
	}
	
	public ParserRule getSelectObjectMutatorRule() {
		return getSelectObjectMutatorAccess().getRule();
	}
	
	//SelectSampleMutator returns SelectSampleMutator:
	//    name=ID '=' 'select' 'sample'
	//    'from' object=ObSelectionStrategy
	//    ('with' clause=SampleClause
	//    '{' (features+=[ecore::EStructuralFeature|ID])? ("," features+=[ecore::EStructuralFeature|ID])* '}' )?
	//;
	public SelectSampleMutatorElements getSelectSampleMutatorAccess() {
		return pSelectSampleMutator;
	}
	
	public ParserRule getSelectSampleMutatorRule() {
		return getSelectSampleMutatorAccess().getRule();
	}
	
	//ModifyInformationMutator returns ModifyInformationMutator:
	//    (name=ID '=')? 'modify' object=ObSelectionStrategy
	//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public ModifyInformationMutatorElements getModifyInformationMutatorAccess() {
		return pModifyInformationMutator;
	}
	
	public ParserRule getModifyInformationMutatorRule() {
		return getModifyInformationMutatorAccess().getRule();
	}
	
	//CreateReferenceMutator returns CreateReferenceMutator:
	//    (name=ID '=')? 'create' 'reference' refType=[ecore::EReference|ID]
	//    ('to' target=ObSelectionStrategy)?
	//    ('in' source=ObSelectionStrategy)?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public CreateReferenceMutatorElements getCreateReferenceMutatorAccess() {
		return pCreateReferenceMutator;
	}
	
	public ParserRule getCreateReferenceMutatorRule() {
		return getCreateReferenceMutatorAccess().getRule();
	}
	
	//ModifySourceReferenceMutator returns ModifySourceReferenceMutator:
	//    'modify' 'source' refType=[ecore::EReference|ID]
	//    ('from' source=ObSelectionStrategy)?
	//    ('to' newSource=ObSelectionStrategy)?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public ModifySourceReferenceMutatorElements getModifySourceReferenceMutatorAccess() {
		return pModifySourceReferenceMutator;
	}
	
	public ParserRule getModifySourceReferenceMutatorRule() {
		return getModifySourceReferenceMutatorAccess().getRule();
	}
	
	//ModifyTargetReferenceMutator returns ModifyTargetReferenceMutator:
	//    'modify' 'target' refType=[ecore::EReference|ID]
	//    ('from' source=ObSelectionStrategy)?
	//    ('to' newTarget=ObSelectionStrategy)?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public ModifyTargetReferenceMutatorElements getModifyTargetReferenceMutatorAccess() {
		return pModifyTargetReferenceMutator;
	}
	
	public ParserRule getModifyTargetReferenceMutatorRule() {
		return getModifyTargetReferenceMutatorAccess().getRule();
	}
	
	//CompositeMutator returns CompositeMutator:
	//    (name=ID '=')? '['
	//    commands+=Mutator (commands+=Mutator)*
	//    ']'
	//    ('[' (min=EInt '..' max=MaxCardinality | fixed=EInt) ']')?
	//    ;
	public CompositeMutatorElements getCompositeMutatorAccess() {
		return pCompositeMutator;
	}
	
	public ParserRule getCompositeMutatorRule() {
		return getCompositeMutatorAccess().getRule();
	}
	
	//CloneObjectMutator returns CloneObjectMutator:
	//    (name=ID '=')? (contents?='deep')? 'clone' object=ObSelectionStrategy
	//    ('in' container=ObSelectionStrategy)?
	//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public CloneObjectMutatorElements getCloneObjectMutatorAccess() {
		return pCloneObjectMutator;
	}
	
	public ParserRule getCloneObjectMutatorRule() {
		return getCloneObjectMutatorAccess().getRule();
	}
	
	//RetypeObjectMutator returns RetypeObjectMutator:
	//    (name=ID '=')? 'retype' object=ObSelectionStrategy
	//    ('in' container=ObSelectionStrategy)?
	//    'as' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
	//    ('with' '{' (attributes+=AttributeSet | references+=ReferenceSet)? ( "," (attributes+=AttributeSet | references+=ReferenceSet))* '}' )?
	//    ('[' (min=EInt '..')? max=MaxCardinality ']')?
	//    ;
	public RetypeObjectMutatorElements getRetypeObjectMutatorAccess() {
		return pRetypeObjectMutator;
	}
	
	public ParserRule getRetypeObjectMutatorRule() {
		return getRetypeObjectMutatorAccess().getRule();
	}
	
	//AttributeSet returns AttributeSet:
	//    AttributeScalar | AttributeUnset | AttributeSwap | AttributeCopy | AttributeReverse | AttributeOperation
	//;
	public AttributeSetElements getAttributeSetAccess() {
		return pAttributeSet;
	}
	
	public ParserRule getAttributeSetRule() {
		return getAttributeSetAccess().getRule();
	}
	
	//AttributeScalar returns AttributeScalar:
	//    attribute+=[ecore::EAttribute|ID]
	//    value=AttributeType
	//    ;
	public AttributeScalarElements getAttributeScalarAccess() {
		return pAttributeScalar;
	}
	
	public ParserRule getAttributeScalarRule() {
		return getAttributeScalarAccess().getRule();
	}
	
	//AttributeUnset returns AttributeUnset:
	//    'unset' '(' attribute+=[ecore::EAttribute|ID] ')'
	//;
	public AttributeUnsetElements getAttributeUnsetAccess() {
		return pAttributeUnset;
	}
	
	public ParserRule getAttributeUnsetRule() {
		return getAttributeUnsetAccess().getRule();
	}
	
	//AttributeSwap returns AttributeSwap:
	//    'swap' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
	//;
	public AttributeSwapElements getAttributeSwapAccess() {
		return pAttributeSwap;
	}
	
	public ParserRule getAttributeSwapRule() {
		return getAttributeSwapAccess().getRule();
	}
	
	//AttributeCopy returns AttributeCopy:
	//    'copy' '(' attribute+=[ecore::EAttribute|ID] ',' (object=ObSelectionStrategy '.')? attribute+=[ecore::EAttribute|ID] ')'
	//;
	public AttributeCopyElements getAttributeCopyAccess() {
		return pAttributeCopy;
	}
	
	public ParserRule getAttributeCopyRule() {
		return getAttributeCopyAccess().getRule();
	}
	
	//AttributeReverse returns AttributeReverse:
	//    'reverse' '(' attribute+=[ecore::EAttribute|ID] ')'
	//;
	public AttributeReverseElements getAttributeReverseAccess() {
		return pAttributeReverse;
	}
	
	public ParserRule getAttributeReverseRule() {
		return getAttributeReverseAccess().getRule();
	}
	
	//AttributeOperation returns AttributeOperation:
	//    attribute+=[ecore::EAttribute|ID] operator=ArithmeticOperator value=AttributeEvaluationType
	//;
	public AttributeOperationElements getAttributeOperationAccess() {
		return pAttributeOperation;
	}
	
	public ParserRule getAttributeOperationRule() {
		return getAttributeOperationAccess().getRule();
	}
	
	//ReferenceSet returns ReferenceSet:
	//    ReferenceInit | ReferenceSwap | ReferenceAtt | ReferenceAdd | ReferenceRemove
	//;
	public ReferenceSetElements getReferenceSetAccess() {
		return pReferenceSet;
	}
	
	public ParserRule getReferenceSetRule() {
		return getReferenceSetAccess().getRule();
	}
	
	//ReferenceInit returns ReferenceInit:
	//    reference+=[ecore::EReference|ID]
	//    '=' object=ObSelectionStrategy
	//;
	public ReferenceInitElements getReferenceInitAccess() {
		return pReferenceInit;
	}
	
	public ParserRule getReferenceInitRule() {
		return getReferenceInitAccess().getRule();
	}
	
	//ReferenceAdd returns ReferenceAdd:
	//    reference+=[ecore::EReference|ID]
	//    '+' '=' object=ObSelectionStrategy
	//;
	public ReferenceAddElements getReferenceAddAccess() {
		return pReferenceAdd;
	}
	
	public ParserRule getReferenceAddRule() {
		return getReferenceAddAccess().getRule();
	}
	
	//ReferenceRemove returns ReferenceRemove:
	//    reference+=[ecore::EReference|ID]
	//    '-' '=' object=ObSelectionStrategy
	//;
	public ReferenceRemoveElements getReferenceRemoveAccess() {
		return pReferenceRemove;
	}
	
	public ParserRule getReferenceRemoveRule() {
		return getReferenceRemoveAccess().getRule();
	}
	
	//ReferenceSwap returns ReferenceSwap:
	//    'swapref' '(' reference+=[ecore::EReference|ID] ',' (object=ObSelectionStrategy '->')? reference+=[ecore::EReference|ID] ')'
	//;
	public ReferenceSwapElements getReferenceSwapAccess() {
		return pReferenceSwap;
	}
	
	public ParserRule getReferenceSwapRule() {
		return getReferenceSwapAccess().getRule();
	}
	
	//ReferenceAtt returns ReferenceAtt:
	//    reference+=[ecore::EReference|ID] '.' attribute=[ecore::EAttribute|ID]
	//    value=AttributeType
	//;
	public ReferenceAttElements getReferenceAttAccess() {
		return pReferenceAtt;
	}
	
	public ParserRule getReferenceAttRule() {
		return getReferenceAttAccess().getRule();
	}
	
	//RandomTypeSelection returns RandomTypeSelection:
	//    {RandomTypeSelection}
	//    'one' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
	//    ('from' resource=ID 'resources')?
	//    ('where' '{' expression=Expression '}')?
	//    ;
	public RandomTypeSelectionElements getRandomTypeSelectionAccess() {
		return pRandomTypeSelection;
	}
	
	public ParserRule getRandomTypeSelectionRule() {
		return getRandomTypeSelectionAccess().getRule();
	}
	
	//SpecificObjectSelection returns SpecificObjectSelection:
	//    {SpecificObjectSelection}
	//    objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
	//    ('where' '{' expression=Expression '}')?
	//    ;
	public SpecificObjectSelectionElements getSpecificObjectSelectionAccess() {
		return pSpecificObjectSelection;
	}
	
	public ParserRule getSpecificObjectSelectionRule() {
		return getSpecificObjectSelectionAccess().getRule();
	}
	
	//SpecificClosureSelection returns SpecificClosureSelection:
	//    {SpecificClosureSelection}
	//    'closure' '(' objSel=[ObjectEmitter|ID] ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)? ')'
	//    ('where' '{' expression=Expression '}')?
	//    ;
	public SpecificClosureSelectionElements getSpecificClosureSelectionAccess() {
		return pSpecificClosureSelection;
	}
	
	public ParserRule getSpecificClosureSelectionRule() {
		return getSpecificClosureSelectionAccess().getRule();
	}
	
	//CompleteTypeSelection returns CompleteTypeSelection:
	//    {CompleteTypeSelection}
	//    'all' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
	//    ('where' '{' expression=Expression '}')?
	//;
	public CompleteTypeSelectionElements getCompleteTypeSelectionAccess() {
		return pCompleteTypeSelection;
	}
	
	public ParserRule getCompleteTypeSelectionRule() {
		return getCompleteTypeSelectionAccess().getRule();
	}
	
	//OtherTypeSelection returns OtherTypeSelection:
	//    {OtherTypeSelection}
	//    'other' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']') ('->' refType=[ecore::EReference|ID] ('->' refRefType=[ecore::EReference|ID] ('->' refRefRefType=[ecore::EReference|ID])?)?)?
	//    ('where' '{' expression=Expression '}')?
	//;
	public OtherTypeSelectionElements getOtherTypeSelectionAccess() {
		return pOtherTypeSelection;
	}
	
	public ParserRule getOtherTypeSelectionRule() {
		return getOtherTypeSelectionAccess().getRule();
	}
	
	//TypedSelection returns TypedSelection:
	//    {TypedSelection}
	//    'typed' (type=[ecore::EClass|ID] | '[' types+=[ecore::EClass|ID] ( "," types+=[ecore::EClass|ID])* ']')
	//    ('where' '{' expression=Expression '}')?
	//;
	public TypedSelectionElements getTypedSelectionAccess() {
		return pTypedSelection;
	}
	
	public ParserRule getTypedSelectionRule() {
		return getTypedSelectionAccess().getRule();
	}
	
	//BooleanType returns BooleanType:
	//    SpecificBooleanType | RandomBooleanType
	//    ;
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//RandomBooleanType returns RandomBooleanType:
	//    {RandomBooleanType}
	//    operator=Operator
	//     'random-boolean'
	//;
	public RandomBooleanTypeElements getRandomBooleanTypeAccess() {
		return pRandomBooleanType;
	}
	
	public ParserRule getRandomBooleanTypeRule() {
		return getRandomBooleanTypeAccess().getRule();
	}
	
	//SpecificBooleanType returns SpecificBooleanType:
	//    {SpecificBooleanType}
	//    operator=Operator
	//    value=EBoolean
	//    ;
	public SpecificBooleanTypeElements getSpecificBooleanTypeAccess() {
		return pSpecificBooleanType;
	}
	
	public ParserRule getSpecificBooleanTypeRule() {
		return getSpecificBooleanTypeAccess().getRule();
	}
	
	//StringType returns StringType:
	//    SpecificStringType | RandomStringType | UpperStringType | LowerStringType | CatStartStringType | CatEndStringType | ReplaceStringType | RandomStringNumberType
	//    ;
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//RandomStringType returns RandomStringType :
	//    {RandomStringType}
	//    operator=Operator
	//    'random-string' '(' min=EInt ',' max=EInt ')'
	//;
	public RandomStringTypeElements getRandomStringTypeAccess() {
		return pRandomStringType;
	}
	
	public ParserRule getRandomStringTypeRule() {
		return getRandomStringTypeAccess().getRule();
	}
	
	//SpecificStringType returns SpecificStringType:
	//    {SpecificStringType}
	//    operator=Operator
	//    value=STRING
	//    ;
	public SpecificStringTypeElements getSpecificStringTypeAccess() {
		return pSpecificStringType;
	}
	
	public ParserRule getSpecificStringTypeRule() {
		return getSpecificStringTypeAccess().getRule();
	}
	
	//UpperStringType returns UpperStringType:
	//    {UpperStringType}
	//    operator=Operator
	//    'upper'
	//;
	public UpperStringTypeElements getUpperStringTypeAccess() {
		return pUpperStringType;
	}
	
	public ParserRule getUpperStringTypeRule() {
		return getUpperStringTypeAccess().getRule();
	}
	
	//CatStartStringType returns CatStartStringType:
	//    {CatStartStringType}
	//    operator=Operator
	//    'catstart' '('value=EString')'
	//;
	public CatStartStringTypeElements getCatStartStringTypeAccess() {
		return pCatStartStringType;
	}
	
	public ParserRule getCatStartStringTypeRule() {
		return getCatStartStringTypeAccess().getRule();
	}
	
	//CatEndStringType returns CatEndStringType:
	//    {CatEndStringType}
	//    operator=Operator
	//    'catend' '('value=EString')'
	//;
	public CatEndStringTypeElements getCatEndStringTypeAccess() {
		return pCatEndStringType;
	}
	
	public ParserRule getCatEndStringTypeRule() {
		return getCatEndStringTypeAccess().getRule();
	}
	
	//ListStringType returns ListStringType:
	//    {ListStringType}
	//    operator=Operator
	//    '['value+=EString ( "," value+=EString)*']'
	//;
	public ListStringTypeElements getListStringTypeAccess() {
		return pListStringType;
	}
	
	public ParserRule getListStringTypeRule() {
		return getListStringTypeAccess().getRule();
	}
	
	//LowerStringType returns LowerStringType:
	//    {LowerStringType}
	//    operator=Operator
	//    'lower'
	//;
	public LowerStringTypeElements getLowerStringTypeAccess() {
		return pLowerStringType;
	}
	
	public ParserRule getLowerStringTypeRule() {
		return getLowerStringTypeAccess().getRule();
	}
	
	//ReplaceStringType returns ReplaceStringType:
	//    {ReplaceStringType}
	//    operator=Operator
	//    'replace' '(' oldstring=EString ',' newstring=EString ')'
	//;
	public ReplaceStringTypeElements getReplaceStringTypeAccess() {
		return pReplaceStringType;
	}
	
	public ParserRule getReplaceStringTypeRule() {
		return getReplaceStringTypeAccess().getRule();
	}
	
	//DoubleType returns DoubleType:
	//    SpecificDoubleType | RandomDoubleType
	//    ;
	public DoubleTypeElements getDoubleTypeAccess() {
		return pDoubleType;
	}
	
	public ParserRule getDoubleTypeRule() {
		return getDoubleTypeAccess().getRule();
	}
	
	//RandomDoubleType returns RandomDoubleType :
	//    {RandomDoubleType}
	//    operator=Operator
	//    'random-double' ('(' min=EDouble ',' max=EDouble ')')?
	//;
	public RandomDoubleTypeElements getRandomDoubleTypeAccess() {
		return pRandomDoubleType;
	}
	
	public ParserRule getRandomDoubleTypeRule() {
		return getRandomDoubleTypeAccess().getRule();
	}
	
	//SpecificDoubleType returns SpecificDoubleType:
	//    {SpecificDoubleType}
	//    operator=Operator
	//    value=EDouble
	//    ;
	public SpecificDoubleTypeElements getSpecificDoubleTypeAccess() {
		return pSpecificDoubleType;
	}
	
	public ParserRule getSpecificDoubleTypeRule() {
		return getSpecificDoubleTypeAccess().getRule();
	}
	
	//MinValueType returns MinValueType:
	//    operator=Operator
	//    'min' '(' attribute=[ecore::EAttribute|ID] ')'
	//;
	public MinValueTypeElements getMinValueTypeAccess() {
		return pMinValueType;
	}
	
	public ParserRule getMinValueTypeRule() {
		return getMinValueTypeAccess().getRule();
	}
	
	//MaxValueType returns MaxValueType:
	//    operator=Operator
	//    'max' '(' attribute=[ecore::EAttribute|ID] ')'
	//;
	public MaxValueTypeElements getMaxValueTypeAccess() {
		return pMaxValueType;
	}
	
	public ParserRule getMaxValueTypeRule() {
		return getMaxValueTypeAccess().getRule();
	}
	
	//IntegerType returns IntegerType:
	//    SpecificIntegerType | RandomIntegerType
	//    ;
	public IntegerTypeElements getIntegerTypeAccess() {
		return pIntegerType;
	}
	
	public ParserRule getIntegerTypeRule() {
		return getIntegerTypeAccess().getRule();
	}
	
	//SpecificIntegerType returns SpecificIntegerType:
	//    {SpecificIntegerType}
	//    operator=Operator
	//    value=EInt
	//    ;
	public SpecificIntegerTypeElements getSpecificIntegerTypeAccess() {
		return pSpecificIntegerType;
	}
	
	public ParserRule getSpecificIntegerTypeRule() {
		return getSpecificIntegerTypeAccess().getRule();
	}
	
	//RandomIntegerType returns RandomIntegerType:
	//    {RandomIntegerType}
	//    operator=Operator
	//    'random-int' ('(' min=EInt ',' max=EInt ')')?
	//;
	public RandomIntegerTypeElements getRandomIntegerTypeAccess() {
		return pRandomIntegerType;
	}
	
	public ParserRule getRandomIntegerTypeRule() {
		return getRandomIntegerTypeAccess().getRule();
	}
	
	//RandomStringNumberType returns RandomStringNumberType:
	//    {RandomStringNumberType}
	//    operator=Operator
	//    'random-int-string' ('(' min=EInt ',' max=EInt ')')?
	//;
	public RandomStringNumberTypeElements getRandomStringNumberTypeAccess() {
		return pRandomStringNumberType;
	}
	
	public ParserRule getRandomStringNumberTypeRule() {
		return getRandomStringNumberTypeAccess().getRule();
	}
	
	//RandomType returns RandomType:
	//    {RandomType}
	//    operator=Operator
	//    'random'
	//;
	public RandomTypeElements getRandomTypeAccess() {
		return pRandomType;
	}
	
	public ParserRule getRandomTypeRule() {
		return getRandomTypeAccess().getRule();
	}
	
	//RandomDoubleNumberType returns RandomDoubleNumberType:
	//    operator=Operator
	//    'random' '(' min=EDouble ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
	//;
	public RandomDoubleNumberTypeElements getRandomDoubleNumberTypeAccess() {
		return pRandomDoubleNumberType;
	}
	
	public ParserRule getRandomDoubleNumberTypeRule() {
		return getRandomDoubleNumberTypeAccess().getRule();
	}
	
	//RandomIntegerNumberType returns RandomIntegerNumberType:
	//    operator=Operator
	//    'random' '(' min=EInt ',' (object = ObSelectionStrategy '.')? max=[ecore::EAttribute|ID] ')'
	//;
	public RandomIntegerNumberTypeElements getRandomIntegerNumberTypeAccess() {
		return pRandomIntegerNumberType;
	}
	
	public ParserRule getRandomIntegerNumberTypeRule() {
		return getRandomIntegerNumberTypeAccess().getRule();
	}
	
	//ListType returns ListType:
	//    {ListType}
	//    operator=Operator
	//    '{'value+=[ecore::EObject] ( "," value+=[ecore::EObject])*'}'
	//;
	public ListTypeElements getListTypeAccess() {
		return pListType;
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//ObjectAttributeType returns ObjectAttributeType:
	//    {ObjectAttributeType}
	//    operator=Operator
	//    objSel=[ObjectEmitter|ID] '.' attribute=[ecore::EAttribute|ID]
	//;
	public ObjectAttributeTypeElements getObjectAttributeTypeAccess() {
		return pObjectAttributeType;
	}
	
	public ParserRule getObjectAttributeTypeRule() {
		return getObjectAttributeTypeAccess().getRule();
	}
	
	//MaxCardinality returns ecore::EIntegerObject: EInt | '*';
	public MaxCardinalityElements getMaxCardinalityAccess() {
		return pMaxCardinality;
	}
	
	public ParserRule getMaxCardinalityRule() {
		return getMaxCardinalityAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
