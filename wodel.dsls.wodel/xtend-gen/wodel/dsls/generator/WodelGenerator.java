/**
 * generated by Xtext 2.13.0
 */
package wodel.dsls.generator;

import com.google.inject.Inject;
import org.eclipse.core.runtime.Platform;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Exceptions;
import wodel.dsls.generator.WodelDynamicAPIGenerator;
import wodel.dsls.generator.WodelDynamicMutatorGenerator;
import wodel.dsls.generator.WodelStandaloneAPIGenerator;
import wodel.dsls.generator.WodelStandaloneMutatorGenerator;
import wodel.dsls.generator.WodelUseGenerator;

/**
 * @author Pablo Gomez-Abajo - Main Wodel code generator.
 * 
 * It calls WodelMutatorGenerator to generate the Java code for the mutations,
 * and WodelUseGenerator to generate the USE code for the seeds synthesizer.
 */
@SuppressWarnings("all")
public class WodelGenerator extends AbstractGenerator {
  @Inject
  private WodelDynamicMutatorGenerator mutatorDynamicGenerator;
  
  @Inject
  private WodelStandaloneMutatorGenerator mutatorStandaloneGenerator;
  
  @Inject
  private WodelUseGenerator useGenerator;
  
  @Inject
  private WodelDynamicAPIGenerator dynamicApiGenerator;
  
  @Inject
  private WodelStandaloneAPIGenerator standaloneApiGenerator;
  
  @Override
  public void doGenerate(final Resource input, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    this.mutatorDynamicGenerator.doGenerate(input, fsa, context);
    this.mutatorStandaloneGenerator.doGenerate(input, fsa, context);
    try {
      boolean seedModelSynthesis = Platform.getPreferencesService().getBoolean("wodel.dsls.Wodel", "Seed model synthesis", false, null);
      if ((seedModelSynthesis == true)) {
        this.useGenerator.doGenerate(input, fsa, context);
      }
    } catch (final Throwable _t) {
      if (_t instanceof Exception) {
        final Exception ex = (Exception)_t;
      } else {
        throw Exceptions.sneakyThrow(_t);
      }
    }
    this.dynamicApiGenerator.doGenerate(input, fsa, context);
    this.standaloneApiGenerator.doGenerate(input, fsa, context);
  }
}
