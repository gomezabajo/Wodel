/**
 * generated by Xtext 2.13.0
 */
package wodel.dsls.generator;

import com.google.common.base.Objects;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import manager.ModelManager;
import manager.MutatorUtils;
import manager.ProjectUtils;
import mutatorenvironment.ArithmeticOperator;
import mutatorenvironment.AttributeCopy;
import mutatorenvironment.AttributeEvaluation;
import mutatorenvironment.AttributeEvaluationType;
import mutatorenvironment.AttributeOperation;
import mutatorenvironment.AttributeReverse;
import mutatorenvironment.AttributeScalar;
import mutatorenvironment.AttributeSet;
import mutatorenvironment.AttributeSwap;
import mutatorenvironment.AttributeType;
import mutatorenvironment.AttributeUnset;
import mutatorenvironment.BinaryOperator;
import mutatorenvironment.Block;
import mutatorenvironment.BooleanType;
import mutatorenvironment.CatEndStringType;
import mutatorenvironment.CatStartStringType;
import mutatorenvironment.CloneObjectMutator;
import mutatorenvironment.CompleteTypeSelection;
import mutatorenvironment.CompositeMutator;
import mutatorenvironment.Constraint;
import mutatorenvironment.CreateObjectMutator;
import mutatorenvironment.CreateReferenceMutator;
import mutatorenvironment.Definition;
import mutatorenvironment.DoubleType;
import mutatorenvironment.Evaluation;
import mutatorenvironment.Expression;
import mutatorenvironment.IntegerType;
import mutatorenvironment.ListStringType;
import mutatorenvironment.ListType;
import mutatorenvironment.LogicOperator;
import mutatorenvironment.LowerStringType;
import mutatorenvironment.MaxValueType;
import mutatorenvironment.MinValueType;
import mutatorenvironment.ModifyInformationMutator;
import mutatorenvironment.ModifySourceReferenceMutator;
import mutatorenvironment.ModifyTargetReferenceMutator;
import mutatorenvironment.Mutator;
import mutatorenvironment.MutatorEnvironment;
import mutatorenvironment.ObSelectionStrategy;
import mutatorenvironment.ObjectAttributeType;
import mutatorenvironment.ObjectEmitter;
import mutatorenvironment.Operator;
import mutatorenvironment.OtherTypeSelection;
import mutatorenvironment.Program;
import mutatorenvironment.RandomBooleanType;
import mutatorenvironment.RandomDoubleNumberType;
import mutatorenvironment.RandomDoubleType;
import mutatorenvironment.RandomIntegerNumberType;
import mutatorenvironment.RandomIntegerType;
import mutatorenvironment.RandomStringNumberType;
import mutatorenvironment.RandomStringType;
import mutatorenvironment.RandomType;
import mutatorenvironment.RandomTypeSelection;
import mutatorenvironment.ReferenceAdd;
import mutatorenvironment.ReferenceAtt;
import mutatorenvironment.ReferenceEvaluation;
import mutatorenvironment.ReferenceInit;
import mutatorenvironment.ReferenceRemove;
import mutatorenvironment.ReferenceSet;
import mutatorenvironment.ReferenceSwap;
import mutatorenvironment.RemoveCompleteReferenceMutator;
import mutatorenvironment.RemoveObjectMutator;
import mutatorenvironment.RemoveRandomReferenceMutator;
import mutatorenvironment.RemoveSpecificReferenceMutator;
import mutatorenvironment.Repeat;
import mutatorenvironment.ReplaceStringType;
import mutatorenvironment.Resource;
import mutatorenvironment.RetypeObjectMutator;
import mutatorenvironment.SampleClause;
import mutatorenvironment.SelectObjectMutator;
import mutatorenvironment.SelectSampleMutator;
import mutatorenvironment.Source;
import mutatorenvironment.SpecificBooleanType;
import mutatorenvironment.SpecificClosureSelection;
import mutatorenvironment.SpecificDoubleType;
import mutatorenvironment.SpecificIntegerType;
import mutatorenvironment.SpecificObjectSelection;
import mutatorenvironment.SpecificStringType;
import mutatorenvironment.StringType;
import mutatorenvironment.TypedSelection;
import mutatorenvironment.UpperStringType;
import mutatorenvironment.miniOCL.InvariantCS;
import org.eclipse.core.resources.IProject;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.osgi.framework.Bundle;
import wodel.dsls.WodelUtils;

/**
 * @author Pablo Gomez-Abajo - Wodel Java code generator.
 * 
 * Generates the Java code for the mutations.
 * 
 * This class was started by Victor Lopez Rivero.
 * Since March, 2015 it is continued by Pablo Gomez Abajo.
 */
@SuppressWarnings("all")
public abstract class WodelMutatorGenerator extends AbstractGenerator {
  private int nMethod = 0;
  
  private int nMethodCall = 0;
  
  private int nCompositeMethod = 0;
  
  private int nRegistryMethod = 0;
  
  private int nRegistryMethodCall = 0;
  
  private int nCompositeRegistryMethod = 0;
  
  private List<String> compositeCommands;
  
  private List<String> compositeRegistryCommands;
  
  private int nCommands = 0;
  
  private int nMutation = 0;
  
  private int nRegistryMutation = 0;
  
  private int nCompositeCommands = 0;
  
  private int nExpression = 0;
  
  private List<Integer> expressionList;
  
  private int nReference = 0;
  
  private String methodName;
  
  private String registryMethodName;
  
  private String commandName;
  
  private String attributeName;
  
  private String referenceName;
  
  private String compositeMethodName;
  
  private String compositeRegistryMethodName;
  
  private String compositeCommandName;
  
  private boolean executeMutation = true;
  
  private int nMut;
  
  protected boolean standalone = false;
  
  protected IProject project = null;
  
  protected String fileName;
  
  protected String className;
  
  protected String path;
  
  protected String xmiFileName;
  
  protected Program program;
  
  protected Map<Mutator, Integer> mutIndexes = new HashMap<Mutator, Integer>();
  
  protected Bundle bundle;
  
  protected String metricsURL;
  
  protected String mutatorURL;
  
  public String getProjectName() {
    String projectName = null;
    IProject _project = ProjectUtils.getProject();
    boolean _tripleNotEquals = (_project != null);
    if (_tripleNotEquals) {
      projectName = ProjectUtils.getProject().getName();
    } else {
      projectName = ProjectUtils.projectName;
    }
    return projectName;
  }
  
  public List<String> getMutators(final File[] files) {
    List<String> mutators = new ArrayList<String>();
    if ((files != null)) {
      for (final File file : files) {
        if ((file != null)) {
          boolean _isFile = file.isFile();
          boolean _equals = (_isFile == true);
          if (_equals) {
            boolean _endsWith = file.getName().endsWith(".mutator");
            if (_endsWith) {
              String mutator = file.getName().replaceAll(".mutator", "");
              boolean _contains = mutators.contains(mutator);
              boolean _not = (!_contains);
              if (_not) {
                mutators.add(mutator);
              }
            }
          } else {
            boolean _isDirectory = file.isDirectory();
            boolean _equals_1 = (_isDirectory == true);
            if (_equals_1) {
              List<String> nextMutators = new ArrayList<String>();
              nextMutators.addAll(this.getMutators(file.listFiles()));
              for (final String nextMutator : nextMutators) {
                boolean _contains_1 = mutators.contains(nextMutator);
                boolean _not_1 = (!_contains_1);
                if (_not_1) {
                  mutators.add(nextMutator);
                }
              }
            }
          }
        }
      }
    }
    return mutators;
  }
  
  public String getMutatorPath(final MutatorEnvironment e, final File[] files) {
    String mutatorPath = null;
    if (((mutatorPath == null) && (files != null))) {
      for (final File file : files) {
        {
          if ((mutatorPath != null)) {
            return mutatorPath;
          }
          if ((file != null)) {
            boolean _isFile = file.isFile();
            boolean _equals = (_isFile == true);
            if (_equals) {
              boolean _equals_1 = file.getName().equals(this.fileName);
              if (_equals_1) {
                String mutatorFolderAndFile = file.getPath().substring(file.getPath().indexOf(this.getProjectName())).replace("\\", "/");
                String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath(e);
                String _plus = ("file:/" + _workspaceAbsolutePath);
                String _plus_1 = (_plus + "/");
                String _plus_2 = (_plus_1 + mutatorFolderAndFile);
                mutatorPath = _plus_2;
              }
            } else {
              mutatorPath = this.getMutatorPath(e, file.listFiles());
            }
          }
        }
      }
    }
    return mutatorPath;
  }
  
  public CharSequence launcher(final MutatorEnvironment e, final List<String> mutators) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("package mutator.");
    String _projectName = this.getProjectName();
    _builder.append(_projectName);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.IOException;");
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.HashMap;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.append("import java.util.Map;");
    _builder.newLine();
    _builder.append("import java.util.TreeMap;");
    _builder.newLine();
    _builder.append("import java.util.AbstractMap.SimpleEntry;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.core.resources.IProject;");
    _builder.newLine();
    _builder.append("import exceptions.*;");
    _builder.newLine();
    _builder.append("import org.eclipse.core.runtime.IProgressMonitor;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.EPackage;");
    _builder.newLine();
    _builder.newLine();
    {
      for(final String mutatorName : mutators) {
        {
          if ((this.standalone == false)) {
            _builder.append("import mutator.");
            _builder.append(mutatorName);
            _builder.append("Dynamic.");
            _builder.append(mutatorName);
            _builder.append("Dynamic;");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("import mutator.");
            _builder.append(mutatorName);
            _builder.append("Standalone.");
            _builder.append(mutatorName);
            _builder.append("Standalone;");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    {
      if ((this.standalone == false)) {
        _builder.append("import manager.IMutatorExecutor;");
        _builder.newLine();
      } else {
        _builder.append("import manager.IMutatorStandaloneExecutor;");
        _builder.newLine();
      }
    }
    _builder.append("import manager.IWodelTest;");
    _builder.newLine();
    _builder.append("import manager.ModelManager;");
    _builder.newLine();
    _builder.append("import manager.MutatorUtils;");
    _builder.newLine();
    _builder.append("import manager.MutatorUtils.MutationResults;");
    _builder.newLine();
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("public class ");
        String _replaceAll = this.getProjectName().replaceAll("[.]", "_");
        _builder.append(_replaceAll);
        _builder.append("DynamicLauncher implements IMutatorExecutor {");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("public class ");
        String _replaceAll_1 = this.getProjectName().replaceAll("[.]", "_");
        _builder.append(_replaceAll_1);
        _builder.append("StandaloneLauncher implements IMutatorStandaloneExecutor {");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("\t");
        _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, String[] blockNames, IProject project, IProgressMonitor monitor, boolean serialize, Object testObject, TreeMap<String, List<String>> classes, HashMap<String, EPackage> registeredPackages) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, String[] blockNames, IProgressMonitor monitor, boolean serialize, Object testObject, TreeMap<String, List<String>> classes, HashMap<String, EPackage> registeredPackages) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("IWodelTest test = testObject != null ? (IWodelTest) testObject : null;");
    _builder.newLine();
    {
      Definition _definition = e.getDefinition();
      if ((_definition instanceof Program)) {
        _builder.append("\t");
        _builder.append("String ecoreURI = \"");
        String _metamodel = e.getDefinition().getMetamodel();
        _builder.append(_metamodel, "\t");
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//Load MetaModel");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("List<EPackage> packages = ModelManager.loadMetaModel(ecoreURI, this.getClass());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("//checks whether the meta-model is dynamically registered");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("boolean isRegistered = ModelManager.isRegistered(packages);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, EPackage> localRegisteredPackages = null;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("if (isRegistered == true) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("if (registeredPackages != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("List<EPackage> packageList = new ArrayList<EPackage>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("packageList.addAll(registeredPackages.values());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("ModelManager.unregisterMetaModel(packageList);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("localRegisteredPackages = ModelManager.unregisterMetaModel(packages);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.newLine();
    _builder.append("\t");
    _builder.append("MutationResults mutationResults = new MutationResults();");
    _builder.newLine();
    {
      for(final String mutatorName_1 : mutators) {
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("MutatorUtils mut");
            _builder.append(mutatorName_1, "\t");
            _builder.append(" = new ");
            _builder.append(mutatorName_1, "\t");
            _builder.append("Dynamic();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("MutationResults results");
            _builder.append(mutatorName_1, "\t");
            _builder.append(" = mut");
            _builder.append(mutatorName_1, "\t");
            _builder.append(".execute(maxAttempts, numMutants, registry, metrics, debugMetrics, packages, registeredPackages, localRegisteredPackages, blockNames, project, monitor, serialize, test, classes);");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t");
            _builder.append("MutatorUtils mut");
            _builder.append(mutatorName_1, "\t");
            _builder.append(" = new ");
            _builder.append(mutatorName_1, "\t");
            _builder.append("Standalone();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("MutationResults results");
            _builder.append(mutatorName_1, "\t");
            _builder.append(" = mut");
            _builder.append(mutatorName_1, "\t");
            _builder.append(".execute(maxAttempts, numMutants, registry, metrics, debugMetrics, packages, registeredPackages, localRegisteredPackages, blockNames, monitor, serialize, test, classes);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("mutationResults.numMutatorsApplied += results");
        _builder.append(mutatorName_1, "\t\t");
        _builder.append(".numMutatorsApplied;");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("mutationResults.numMutantsGenerated += results");
        _builder.append(mutatorName_1, "\t\t");
        _builder.append(".numMutantsGenerated;");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("if (results");
        _builder.append(mutatorName_1, "\t\t");
        _builder.append(".mutatorsApplied != null) {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("if (mutationResults.mutatorsApplied == null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t");
        _builder.append("mutationResults.mutatorsApplied = new ArrayList<String>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("mutationResults.mutatorsApplied.addAll(results");
        _builder.append(mutatorName_1, "\t\t\t");
        _builder.append(".mutatorsApplied); ");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("if (isRegistered == true) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("ModelManager.registerMetaModel(localRegisteredPackages);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (registeredPackages != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("ModelManager.registerMetaModel(registeredPackages);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return mutationResults;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public int getRandom(final int range) {
    if ((range == 1)) {
      return 0;
    }
    int _intValue = Long.valueOf(System.nanoTime()).intValue();
    int value = (_intValue % range);
    if ((value < 0)) {
      value = (value * (-1));
    }
    return value;
  }
  
  public CharSequence modifyInformationMutator(final ModifyInformationMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//MODIFY INFORMATION ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _object_1 = mut.getObject();
        String _name = ((RandomTypeSelection) _object_1).getType().getName();
        _builder.append(_name);
        _builder.append("\", mutatedObjects);");
        _builder.newLineIfNotEmpty();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("EObject object = rts.getObject();");
            _builder.newLine();
          } else {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method);
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject object = null;");
            _builder.newLine();
            _builder.append("if (selectedObjects.size() > 0) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("ObSelectionStrategy objectSelection = null;");
        _builder.newLine();
        {
          EReference _refType = mut.getObject().getRefType();
          boolean _tripleNotEquals = (_refType != null);
          if (_tripleNotEquals) {
            _builder.append("List<EObject> o = ModelManager.getReferences(\"");
            String _name_1 = mut.getObject().getRefType().getName();
            _builder.append(_name_1);
            _builder.append("\", object);");
            _builder.newLineIfNotEmpty();
            _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
            _builder.newLine();
          }
        }
        _builder.append("if (object != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("objectSelection = new SpecificObjectSelection(packages, model, object);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("CompleteTypeSelection cts = new CompleteTypeSelection(packages, model, \"");
          ObSelectionStrategy _object_3 = mut.getObject();
          String _name_2 = ((CompleteTypeSelection) _object_3).getType().getName();
          _builder.append(_name_2);
          _builder.append("\", mutatedObjects);");
          _builder.newLineIfNotEmpty();
          _builder.append("List<EObject> objects = cts.getObjects();");
          _builder.newLine();
          {
            Expression _expression_1 = mut.getObject().getExpression();
            boolean _tripleNotEquals_1 = (_expression_1 != null);
            if (_tripleNotEquals_1) {
              _builder.append("//EXPRESSION LIST: ");
              ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
              List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
              _builder.append(_expressionList_1);
              _builder.newLineIfNotEmpty();
              _builder.append("//EXPRESSION LEVEL: ");
              _builder.append(this.nExpression = 0);
              _builder.newLineIfNotEmpty();
              _builder.append("//EXPRESSION LEVEL: ");
              boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
              _builder.append(_add_1);
              _builder.newLineIfNotEmpty();
              _builder.append("Expression exp");
              Integer _get_2 = this.expressionList.get(0);
              _builder.append(_get_2);
              _builder.append(" = new Expression();");
              _builder.newLineIfNotEmpty();
              Object _method_1 = this.method(mut.getObject().getExpression(), 0);
              _builder.append(_method_1);
              _builder.newLineIfNotEmpty();
              _builder.append("objects = evaluate(objects, exp");
              Integer _get_3 = this.expressionList.get(0);
              _builder.append(_get_3);
              _builder.append(");");
              _builder.newLineIfNotEmpty();
            }
          }
          {
            EReference _refType_1 = mut.getObject().getRefType();
            boolean _tripleNotEquals_2 = (_refType_1 != null);
            if (_tripleNotEquals_2) {
              _builder.append("List<EObject> tmpObjects = new ArrayList<EObject>();");
              _builder.newLine();
              _builder.append("for (EObject eobject : objects) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("List<EObject> o = ModelManager.getReferences(\"");
              String _name_3 = mut.getObject().getRefType().getName();
              _builder.append(_name_3, "\t");
              _builder.append("\", objectSelection.getObject());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("tmpObjects.addAll(o);");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
              _builder.append("objects = tmpObjects;");
              _builder.newLine();
            }
          }
          {
            String _name_4 = mut.getName();
            boolean _tripleNotEquals_3 = (_name_4 != null);
            if (_tripleNotEquals_3) {
              _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>();");
              _builder.newLine();
              _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(model, packages);");
              _builder.newLine();
              _builder.append("for (EObject obj : objects) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>> entry = new SimpleEntry(obj, resourceEntry);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("listEntry.add(entry);");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
              _builder.append("hmList.put(\"");
              String _name_5 = mut.getName();
              _builder.append(_name_5);
              _builder.append("\", listEntry);");
              _builder.newLineIfNotEmpty();
            }
          }
          _builder.append("List<ObSelectionStrategy> listSelection = new ArrayList<ObSelectionStrategy>();");
          _builder.newLine();
          _builder.append("for (EObject obj : objects) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, obj);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("listSelection.add(objectSelection);");
          _builder.newLine();
          _builder.append("}");
          _builder.newLine();
        } else {
          ObSelectionStrategy _object_4 = mut.getObject();
          if ((_object_4 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("if (hmObjects.get(\"");
            ObSelectionStrategy _object_5 = mut.getObject();
            String _name_6 = ((SpecificObjectSelection) _object_5).getObjSel().getName();
            _builder.append(_name_6);
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _object_6 = mut.getObject();
            String _name_7 = ((SpecificObjectSelection) _object_6).getObjSel().getName();
            _builder.append(_name_7, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _object_7 = mut.getObject();
            String _name_8 = ((SpecificObjectSelection) _object_7).getObjSel().getName();
            _builder.append(_name_8, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _object_8 = mut.getObject();
            String _name_9 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
            _builder.append(_name_9, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _object_9 = mut.getObject();
            String _name_10 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
            _builder.append(_name_10, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _object_10 = mut.getObject();
            String _name_11 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
            _builder.append(_name_11, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (hmList.get(\"");
            ObSelectionStrategy _object_11 = mut.getObject();
            String _name_12 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
            _builder.append(_name_12, "\t");
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _object_12 = mut.getObject();
            String _name_13 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
            _builder.append(_name_13, "\t\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _object_13 = mut.getObject();
            String _name_14 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
            _builder.append(_name_14, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _object_14 = mut.getObject();
            String _name_15 = ((SpecificObjectSelection) _object_14).getObjSel().getName();
            _builder.append(_name_15, "\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ent.getKey();");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
            ObSelectionStrategy _object_15 = mut.getObject();
            String _name_16 = ((SpecificObjectSelection) _object_15).getObjSel().getName();
            _builder.append(_name_16, "\t\t");
            _builder.append(".get(0).getValue().getValue(), listEntry_");
            ObSelectionStrategy _object_16 = mut.getObject();
            String _name_17 = ((SpecificObjectSelection) _object_16).getObjSel().getName();
            _builder.append(_name_17, "\t\t");
            _builder.append(".get(0).getValue().getKey(), objs);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType_2 = mut.getObject().getRefType();
              boolean _tripleNotEquals_4 = (_refType_2 != null);
              if (_tripleNotEquals_4) {
                _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                String _name_18 = mut.getObject().getRefType().getName();
                _builder.append(_name_18);
                _builder.append("\", objectSelection.getObject());");
                _builder.newLineIfNotEmpty();
                _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                _builder.newLine();
                _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                _builder.newLine();
              }
            }
          } else {
            ObSelectionStrategy _object_17 = mut.getObject();
            if ((_object_17 instanceof SpecificClosureSelection)) {
              {
                if (((((SpecificClosureSelection) mut.getObject()).getObjSel() != null) && (((SpecificClosureSelection) mut.getObject()).getRefType() != null))) {
                  _builder.append("ObSelectionStrategy objectSelection = null;");
                  _builder.newLine();
                  _builder.append("if (hmObjects.get(\"");
                  ObSelectionStrategy _object_18 = mut.getObject();
                  String _name_19 = ((SpecificClosureSelection) _object_18).getObjSel().getName();
                  _builder.append(_name_19);
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  ObSelectionStrategy _object_19 = mut.getObject();
                  String _name_20 = ((SpecificClosureSelection) _object_19).getObjSel().getName();
                  _builder.append(_name_20, "\t");
                  _builder.append(" = hmObjects.get(\"");
                  ObSelectionStrategy _object_20 = mut.getObject();
                  String _name_21 = ((SpecificClosureSelection) _object_20).getObjSel().getName();
                  _builder.append(_name_21, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("objectSelection = new SpecificClosureSelection(entry_");
                  ObSelectionStrategy _object_21 = mut.getObject();
                  String _name_22 = ((SpecificClosureSelection) _object_21).getObjSel().getName();
                  _builder.append(_name_22, "\t");
                  _builder.append(".getValue().getValue(), entry_");
                  ObSelectionStrategy _object_22 = mut.getObject();
                  String _name_23 = ((SpecificClosureSelection) _object_22).getObjSel().getName();
                  _builder.append(_name_23, "\t");
                  _builder.append(".getValue().getKey(), entry_");
                  ObSelectionStrategy _object_23 = mut.getObject();
                  String _name_24 = ((SpecificClosureSelection) _object_23).getObjSel().getName();
                  _builder.append(_name_24, "\t");
                  _builder.append(".getKey(), \"");
                  ObSelectionStrategy _object_24 = mut.getObject();
                  String _name_25 = ((SpecificClosureSelection) _object_24).getRefType().getName();
                  _builder.append(_name_25, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (hmList.get(\"");
                  ObSelectionStrategy _object_25 = mut.getObject();
                  String _name_26 = ((SpecificClosureSelection) _object_25).getObjSel().getName();
                  _builder.append(_name_26, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                  ObSelectionStrategy _object_26 = mut.getObject();
                  String _name_27 = ((SpecificClosureSelection) _object_26).getObjSel().getName();
                  _builder.append(_name_27, "\t\t");
                  _builder.append(" = hmList.get(\"");
                  ObSelectionStrategy _object_27 = mut.getObject();
                  String _name_28 = ((SpecificClosureSelection) _object_27).getObjSel().getName();
                  _builder.append(_name_28, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                  ObSelectionStrategy _object_28 = mut.getObject();
                  String _name_29 = ((SpecificClosureSelection) _object_28).getObjSel().getName();
                  _builder.append(_name_29, "\t\t");
                  _builder.append(") {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("EObject obj = ent.getKey();");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("objs.add(obj);");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
                  ObSelectionStrategy _object_29 = mut.getObject();
                  String _name_30 = ((SpecificClosureSelection) _object_29).getObjSel().getName();
                  _builder.append(_name_30, "\t\t");
                  _builder.append(".get(0).getValue().getValue(), listEntry_");
                  ObSelectionStrategy _object_30 = mut.getObject();
                  String _name_31 = ((SpecificClosureSelection) _object_30).getObjSel().getName();
                  _builder.append(_name_31, "\t\t");
                  _builder.append(".get(0).getValue().getKey(), objs, \"");
                  ObSelectionStrategy _object_31 = mut.getObject();
                  String _name_32 = ((SpecificClosureSelection) _object_31).getRefType().getName();
                  _builder.append(_name_32, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("return mutations;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("}");
                  _builder.newLine();
                  {
                    EReference _refType_3 = mut.getObject().getRefType();
                    boolean _tripleNotEquals_5 = (_refType_3 != null);
                    if (_tripleNotEquals_5) {
                      _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                      String _name_33 = mut.getObject().getRefType().getName();
                      _builder.append(_name_33);
                      _builder.append("\", objectSelection.getObject());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                      _builder.newLine();
                      _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("Map<String, List<AttributeConfigurationStrategy>> attsList = new HashMap<String, List<AttributeConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("//COUNTER:");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//COUNTER:");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        {
          EAttribute _get_4 = c.getAttribute().get(0);
          boolean _tripleNotEquals_6 = (_get_4 != null);
          if (_tripleNotEquals_6) {
            final EAttribute attribute = c.getAttribute().get(0);
            _builder.newLineIfNotEmpty();
            _builder.append("//NAME:");
            _builder.append(this.attributeName = attribute.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.attributeName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((c instanceof AttributeSwap)) {
            final AttributeSwap attributeSwap = ((AttributeSwap) c);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_32 = attributeSwap.getObject();
              boolean _tripleNotEquals_7 = (_object_32 != null);
              if (_tripleNotEquals_7) {
                {
                  ObSelectionStrategy _object_33 = attributeSwap.getObject();
                  if ((_object_33 instanceof RandomTypeSelection)) {
                    _builder.append("if (hmObjects.get(\"");
                    ObSelectionStrategy _object_34 = attributeSwap.getObject();
                    String _name_34 = ((RandomTypeSelection) _object_34).getName();
                    _builder.append(_name_34);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _object_35 = attributeSwap.getObject();
                    String _name_35 = ((RandomTypeSelection) _object_35).getName();
                    _builder.append(_name_35, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _object_36 = attributeSwap.getObject();
                    String _name_36 = ((RandomTypeSelection) _object_36).getName();
                    _builder.append(_name_36, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts.add(new SwapAttributeConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_37 = attributeSwap.getObject();
                    String _name_37 = ((RandomTypeSelection) _object_37).getName();
                    _builder.append(_name_37, "\t");
                    _builder.append(".getKey(), \"");
                    ObSelectionStrategy _object_38 = attributeSwap.getObject();
                    String _name_38 = ((RandomTypeSelection) _object_38).getType().getName();
                    _builder.append(_name_38, "\t");
                    _builder.append("\", \"");
                    String _name_39 = ((AttributeSwap)c).getAttribute().get(0).getName();
                    _builder.append(_name_39, "\t");
                    _builder.append("\", \"");
                    String _name_40 = ((AttributeSwap)c).getAttribute().get(1).getName();
                    _builder.append(_name_40, "\t");
                    _builder.append("\", entry_");
                    ObSelectionStrategy _object_39 = attributeSwap.getObject();
                    String _name_41 = ((RandomTypeSelection) _object_39).getName();
                    _builder.append(_name_41, "\t");
                    _builder.append(".getValue().getKey()));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("attsList.put(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\", atts);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  } else {
                    ObSelectionStrategy _object_40 = attributeSwap.getObject();
                    if ((_object_40 instanceof SpecificObjectSelection)) {
                      _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (hmObjects.get(\"");
                      ObSelectionStrategy _object_41 = attributeSwap.getObject();
                      String _name_42 = ((SpecificObjectSelection) _object_41).getObjSel().getName();
                      _builder.append(_name_42, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                      _builder.append("atts = attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t\t");
                      _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t\t\t\t\t\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t\t\t\t\t\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _object_42 = attributeSwap.getObject();
                      String _name_43 = ((SpecificObjectSelection) _object_42).getObjSel().getName();
                      _builder.append(_name_43, "\t\t\t\t\t\t\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _object_43 = attributeSwap.getObject();
                      String _name_44 = ((SpecificObjectSelection) _object_43).getObjSel().getName();
                      _builder.append(_name_44, "\t\t\t\t\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("atts.add(new SwapAttributeConfigurationStrategy(objectSelection.getObject(), entry_");
                      ObSelectionStrategy _object_44 = attributeSwap.getObject();
                      String _name_45 = ((SpecificObjectSelection) _object_44).getObjSel().getName();
                      _builder.append(_name_45, "\t\t");
                      _builder.append(".getKey(), \"");
                      String _name_46 = ((AttributeSwap)c).getAttribute().get(0).getName();
                      _builder.append(_name_46, "\t\t");
                      _builder.append("\", \"");
                      String _name_47 = ((AttributeSwap)c).getAttribute().get(1).getName();
                      _builder.append(_name_47, "\t\t");
                      _builder.append("\"));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("attsList.put(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\", atts);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("return mutations;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              } else {
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("if (attsList.get(\"");
                _builder.append(this.attributeName, "\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("atts = attsList.get(\"");
                _builder.append(this.attributeName, "\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("atts.add(new SwapAttributeConfigurationStrategy(objectSelection.getObject(), \"");
                String _name_48 = ((AttributeSwap)c).getAttribute().get(0).getName();
                _builder.append(_name_48, "\t");
                _builder.append("\", \"");
                String _name_49 = ((AttributeSwap)c).getAttribute().get(1).getName();
                _builder.append(_name_49, "\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("attsList.put(\"");
                _builder.append(this.attributeName, "\t");
                _builder.append("\", atts);");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
              }
            }
          } else {
            if ((c instanceof AttributeCopy)) {
              final AttributeCopy attributeCopy = ((AttributeCopy) c);
              _builder.newLineIfNotEmpty();
              {
                ObSelectionStrategy _object_45 = attributeCopy.getObject();
                boolean _tripleNotEquals_8 = (_object_45 != null);
                if (_tripleNotEquals_8) {
                  {
                    ObSelectionStrategy _object_46 = attributeCopy.getObject();
                    if ((_object_46 instanceof RandomTypeSelection)) {
                      _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (attsList.get(\"");
                      _builder.append(this.attributeName, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("atts = attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("atts.add(new CopyAttributeConfigurationStrategy(objectSelection.getObject(), \"");
                      ObSelectionStrategy _object_47 = attributeCopy.getObject();
                      String _name_50 = ((RandomTypeSelection) _object_47).getType().getName();
                      _builder.append(_name_50, "\t");
                      _builder.append("\", \"");
                      String _name_51 = c.getAttribute().get(0).getName();
                      _builder.append(_name_51, "\t");
                      _builder.append("\", \"");
                      String _name_52 = c.getAttribute().get(1).getName();
                      _builder.append(_name_52, "\t");
                      _builder.append("\", objectSelection.getModel()));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("attsList.put(\"");
                      _builder.append(this.attributeName, "\t");
                      _builder.append("\", atts);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t   \t\t\t");
                      _builder.append("}");
                      _builder.newLine();
                    } else {
                      ObSelectionStrategy _object_48 = attributeCopy.getObject();
                      if ((_object_48 instanceof SpecificObjectSelection)) {
                        _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (hmObjects.get(\"");
                        ObSelectionStrategy _object_49 = attributeCopy.getObject();
                        String _name_53 = ((SpecificObjectSelection) _object_49).getObjSel().getName();
                        _builder.append(_name_53, "\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("if (attsList.get(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t\t");
                        _builder.append("atts = attsList.get(\"");
                        _builder.append(this.attributeName, "\t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t\t");
                        _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t\t\t\t   \t\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _object_50 = attributeCopy.getObject();
                        String _name_54 = ((SpecificObjectSelection) _object_50).getObjSel().getName();
                        _builder.append(_name_54, "\t\t\t\t\t   \t\t\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _object_51 = attributeCopy.getObject();
                        String _name_55 = ((SpecificObjectSelection) _object_51).getObjSel().getName();
                        _builder.append(_name_55, "\t\t\t\t\t   \t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("atts.add(new CopyAttributeConfigurationStrategy(objectSelection.getObject(), entry_");
                        ObSelectionStrategy _object_52 = attributeCopy.getObject();
                        String _name_56 = ((SpecificObjectSelection) _object_52).getObjSel().getName();
                        _builder.append(_name_56, "\t\t");
                        _builder.append(".getKey(), \"");
                        String _name_57 = c.getAttribute().get(0).getName();
                        _builder.append(_name_57, "\t\t");
                        _builder.append("\", \"");
                        String _name_58 = c.getAttribute().get(1).getName();
                        _builder.append(_name_58, "\t\t");
                        _builder.append("\"));");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("attsList.put(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\", atts);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("return mutations;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                  }
                } else {
                  _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (attsList.get(\"");
                  _builder.append(this.attributeName, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("atts = attsList.get(\"");
                  _builder.append(this.attributeName, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("atts.add(new CopyAttributeConfigurationStrategy(objectSelection.getObject(), \"");
                  String _name_59 = c.getAttribute().get(0).getName();
                  _builder.append(_name_59, "\t");
                  _builder.append("\", \"");
                  String _name_60 = c.getAttribute().get(1).getName();
                  _builder.append(_name_60, "\t");
                  _builder.append("\"));");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("attsList.put(\"");
                  _builder.append(this.attributeName, "\t");
                  _builder.append("\", atts);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            } else {
              if ((c instanceof AttributeOperation)) {
                final AttributeOperation attributeOperation = ((AttributeOperation) c);
                _builder.newLineIfNotEmpty();
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                {
                  AttributeEvaluationType _value = attributeOperation.getValue();
                  if ((_value instanceof ObjectAttributeType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_1 = attributeOperation.getValue();
                    final ObjectAttributeType objectAtt = ((ObjectAttributeType) _value_1);
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t   \t\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    String _name_61 = objectAtt.getObjSel().getName();
                    _builder.append(_name_61, "\t\t   \t\t\t");
                    _builder.append(" = hmObjects.get(\"");
                    String _name_62 = objectAtt.getObjSel().getName();
                    _builder.append(_name_62, "\t\t   \t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = ModelManager.getAttribute(\"");
                    String _name_63 = objectAtt.getAttribute().getName();
                    _builder.append(_name_63);
                    _builder.append("\", entry_");
                    String _name_64 = objectAtt.getObjSel().getName();
                    _builder.append(_name_64);
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_2 = attributeOperation.getValue();
                  if ((_value_2 instanceof SpecificIntegerType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_3 = attributeOperation.getValue();
                    final SpecificIntegerType specInt = ((SpecificIntegerType) _value_3);
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = ");
                    int _value_4 = specInt.getValue();
                    _builder.append(_value_4);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_5 = attributeOperation.getValue();
                  if ((_value_5 instanceof RandomIntegerType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_6 = attributeOperation.getValue();
                    final RandomIntegerType rnInt = ((RandomIntegerType) _value_6);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = ");
                    int _min = rnInt.getMin();
                    _builder.append(_min);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = ");
                    int _max = rnInt.getMax();
                    _builder.append(_max);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = (min == 0 && max == 0) ? 0 : ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_7 = attributeOperation.getValue();
                  if ((_value_7 instanceof RandomIntegerNumberType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_8 = attributeOperation.getValue();
                    final RandomIntegerNumberType rnNumInt = ((RandomIntegerNumberType) _value_8);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = ");
                    int _min_1 = rnNumInt.getMin();
                    _builder.append(_min_1);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = 0;");
                    _builder.newLine();
                    {
                      ObSelectionStrategy _object_53 = rnNumInt.getObject();
                      if ((_object_53 instanceof SpecificObjectSelection)) {
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("//");
                        ObSelectionStrategy _object_54 = rnNumInt.getObject();
                        final SpecificObjectSelection sel = ((SpecificObjectSelection) _object_54);
                        _builder.newLineIfNotEmpty();
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        String _name_65 = sel.getObjSel().getName();
                        _builder.append(_name_65);
                        _builder.append(" = hmObjects.get(\"");
                        String _name_66 = sel.getObjSel().getName();
                        _builder.append(_name_66);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("max = ModelManager.getIntAttribute(\"");
                        String _name_67 = rnNumInt.getMax().getName();
                        _builder.append(_name_67, "\t   \t\t\t\t");
                        _builder.append("\", entry_\"");
                        String _name_68 = sel.getObjSel().getName();
                        _builder.append(_name_68, "\t   \t\t\t\t");
                        _builder.append("\".getKey());");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("Object value = (min == 0 && max == 0) ? 0 : ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_9 = attributeOperation.getValue();
                  if ((_value_9 instanceof SpecificDoubleType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_10 = attributeOperation.getValue();
                    final SpecificDoubleType specDouble = ((SpecificDoubleType) _value_10);
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = ");
                    double _value_11 = specDouble.getValue();
                    _builder.append(_value_11);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_12 = attributeOperation.getValue();
                  if ((_value_12 instanceof RandomDoubleType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_13 = attributeOperation.getValue();
                    final RandomDoubleType rnDouble = ((RandomDoubleType) _value_13);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = (int) Math.floor(");
                    double _min_2 = rnDouble.getMin();
                    _builder.append(_min_2);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = (int) Math.floor(");
                    double _max_1 = rnDouble.getMax();
                    _builder.append(_max_1);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = 0.0;");
                    _builder.newLine();
                    _builder.append("if (min != 0 || max != 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("int rn = ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("value = rn / 100.0;");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_14 = attributeOperation.getValue();
                  if ((_value_14 instanceof RandomDoubleNumberType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_15 = attributeOperation.getValue();
                    final RandomDoubleNumberType rnNumDouble = ((RandomDoubleNumberType) _value_15);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = (int) Math.floor(");
                    double _min_3 = rnNumDouble.getMin();
                    _builder.append(_min_3);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = 0;");
                    _builder.newLine();
                    {
                      ObSelectionStrategy _object_55 = rnNumDouble.getObject();
                      if ((_object_55 instanceof SpecificObjectSelection)) {
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("//");
                        ObSelectionStrategy _object_56 = rnNumDouble.getObject();
                        final SpecificObjectSelection sel_1 = ((SpecificObjectSelection) _object_56);
                        _builder.newLineIfNotEmpty();
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        String _name_69 = sel_1.getObjSel().getName();
                        _builder.append(_name_69);
                        _builder.append(" = hmObjects.get(\"");
                        String _name_70 = sel_1.getObjSel().getName();
                        _builder.append(_name_70);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("max = (int) Math.floor(ModelManager.getDoubleAttribute(\"");
                        String _name_71 = rnNumDouble.getMax().getName();
                        _builder.append(_name_71);
                        _builder.append("\", entry_");
                        String _name_72 = sel_1.getObjSel().getName();
                        _builder.append(_name_72);
                        _builder.append(".getKey()) * 100);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("Object value = 0.0;");
                    _builder.newLine();
                    _builder.append("if (min != 0 || max != 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("int rn = ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("value = rn / 100.0;");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_16 = attributeOperation.getValue();
                  if ((_value_16 instanceof MinValueType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_17 = attributeOperation.getValue();
                    final MinValueType minValue = ((MinValueType) _value_17);
                    _builder.newLineIfNotEmpty();
                    _builder.append("MinValueConfigurationStrategy minStrategy = new MinValueConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
                    String _typeName = MutatorUtils.getTypeName(minValue);
                    _builder.append(_typeName);
                    _builder.append("\", \"");
                    String _name_73 = minValue.getAttribute().getName();
                    _builder.append(_name_73);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = minStrategy.getValue(); ");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_18 = attributeOperation.getValue();
                  if ((_value_18 instanceof MaxValueType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_19 = attributeOperation.getValue();
                    final MaxValueType maxValue = ((MaxValueType) _value_19);
                    _builder.newLineIfNotEmpty();
                    _builder.append("MaxValueConfigurationStrategy maxStrategy = new MaxValueConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
                    String _typeName_1 = MutatorUtils.getTypeName(maxValue);
                    _builder.append(_typeName_1);
                    _builder.append("\", \"");
                    String _name_74 = maxValue.getAttribute().getName();
                    _builder.append(_name_74);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = maxStrategy.getValue(); ");
                    _builder.newLine();
                  }
                }
                {
                  ArithmeticOperator _operator = attributeOperation.getOperator();
                  boolean _equals = Objects.equal(_operator, ArithmeticOperator.ADD);
                  if (_equals) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    CharSequence _add_2 = this.add(attributeOperation);
                    _builder.append(_add_2);
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_1 = attributeOperation.getOperator();
                  boolean _equals_1 = Objects.equal(_operator_1, ArithmeticOperator.SUBTRACT);
                  if (_equals_1) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    CharSequence _subtract = this.subtract(attributeOperation);
                    _builder.append(_subtract);
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_2 = attributeOperation.getOperator();
                  boolean _equals_2 = Objects.equal(_operator_2, ArithmeticOperator.MULTIPLY);
                  if (_equals_2) {
                    _builder.append("\t   \t\t\t\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t\t");
                    CharSequence _multiply = this.multiply(attributeOperation);
                    _builder.append(_multiply, "\t   \t\t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_3 = attributeOperation.getOperator();
                  boolean _equals_3 = Objects.equal(_operator_3, ArithmeticOperator.DIVIDE);
                  if (_equals_3) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t");
                    CharSequence _divide = this.divide(attributeOperation);
                    _builder.append(_divide, "\t   \t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_4 = attributeOperation.getOperator();
                  boolean _equals_4 = Objects.equal(_operator_4, ArithmeticOperator.MODULE);
                  if (_equals_4) {
                    _builder.append("\t   \t\t\t\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t\t");
                    CharSequence _module = this.module(attributeOperation);
                    _builder.append(_module, "\t   \t\t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("}");
                _builder.newLine();
              } else {
                {
                  ObSelectionStrategy _object_57 = mut.getObject();
                  if ((_object_57 instanceof CompleteTypeSelection)) {
                    _builder.append("for (ObSelectionStrategy objectSelection : listSelection) {");
                    _builder.newLine();
                  }
                }
                _builder.append("if (objectSelection != null) {");
                _builder.newLine();
                _builder.append("\t");
                CharSequence _method_2 = this.method(c, false, true, counter, false);
                _builder.append(_method_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                {
                  ObSelectionStrategy _object_58 = mut.getObject();
                  if ((_object_58 instanceof CompleteTypeSelection)) {
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("Map<String, List<ReferenceConfigurationStrategy>> refsList = new HashMap<String, List<ReferenceConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("Map<String, List<AttributeConfigurationStrategy>> attsRefList = new HashMap<String, List<AttributeConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("List<EObject> objsAttRef = new ArrayList<EObject>();");
    _builder.newLine();
    _builder.append("//COUNTER:");
    _builder.append(counter = 0);
    _builder.newLineIfNotEmpty();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        _builder.append("//COUNTER:");
        int _plusPlus_1 = counter++;
        _builder.append(_plusPlus_1);
        _builder.newLineIfNotEmpty();
        {
          EReference _get_5 = c_1.getReference().get(0);
          boolean _tripleNotEquals_9 = (_get_5 != null);
          if (_tripleNotEquals_9) {
            final EReference reference = c_1.getReference().get(0);
            _builder.newLineIfNotEmpty();
            _builder.append("//NAME:");
            _builder.append(this.referenceName = reference.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.referenceName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((c_1 instanceof ReferenceSwap)) {
            final ReferenceSwap referenceSwap = ((ReferenceSwap) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_59 = referenceSwap.getObject();
              boolean _tripleNotEquals_10 = (_object_59 != null);
              if (_tripleNotEquals_10) {
                {
                  ObSelectionStrategy _object_60 = referenceSwap.getObject();
                  if ((_object_60 instanceof RandomTypeSelection)) {
                    _builder.append("if (hmObjects.get(\"");
                    ObSelectionStrategy _object_61 = referenceSwap.getObject();
                    String _name_75 = ((RandomTypeSelection) _object_61).getName();
                    _builder.append(_name_75);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (refsList.get(\"");
                    _builder.append(this.referenceName, "\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("refs = refsList.get(\"");
                    _builder.append(this.referenceName, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _object_62 = referenceSwap.getObject();
                    String _name_76 = ((RandomTypeSelection) _object_62).getName();
                    _builder.append(_name_76, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _object_63 = referenceSwap.getObject();
                    String _name_77 = ((RandomTypeSelection) _object_63).getName();
                    _builder.append(_name_77, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("refs.add(new SwapReferenceConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_64 = referenceSwap.getObject();
                    String _name_78 = ((RandomTypeSelection) _object_64).getName();
                    _builder.append(_name_78, "\t");
                    _builder.append(".getKey(), \"");
                    ObSelectionStrategy _object_65 = referenceSwap.getObject();
                    String _name_79 = ((RandomTypeSelection) _object_65).getType().getName();
                    _builder.append(_name_79, "\t");
                    _builder.append("\", \"");
                    String _name_80 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                    _builder.append(_name_80, "\t");
                    _builder.append("\", \"");
                    String _name_81 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                    _builder.append(_name_81, "\t");
                    _builder.append("\", entry_");
                    ObSelectionStrategy _object_66 = referenceSwap.getObject();
                    String _name_82 = ((RandomTypeSelection) _object_66).getName();
                    _builder.append(_name_82, "\t");
                    _builder.append(".getValue().getKey()));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("refsList.put(\"");
                    _builder.append(this.referenceName, "\t");
                    _builder.append(", refs);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  } else {
                    ObSelectionStrategy _object_67 = referenceSwap.getObject();
                    if ((_object_67 instanceof SpecificObjectSelection)) {
                      _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (hmObjects.get(\"");
                      ObSelectionStrategy _object_68 = referenceSwap.getObject();
                      String _name_83 = ((SpecificObjectSelection) _object_68).getObjSel().getName();
                      _builder.append(_name_83, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (refsList.get(\"");
                      _builder.append(this.referenceName, "\t\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                      _builder.append("refs = refsList.get(\"");
                      _builder.append(this.referenceName, "\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("   \t\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t\t");
                      _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("   \t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _object_69 = referenceSwap.getObject();
                      String _name_84 = ((SpecificObjectSelection) _object_69).getObjSel().getName();
                      _builder.append(_name_84, "\t\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _object_70 = referenceSwap.getObject();
                      String _name_85 = ((SpecificObjectSelection) _object_70).getObjSel().getName();
                      _builder.append(_name_85, "\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("refs.add(new SwapReferenceConfigurationStrategy(objectSelection.getObject(), entry_");
                      ObSelectionStrategy _object_71 = referenceSwap.getObject();
                      String _name_86 = ((SpecificObjectSelection) _object_71).getObjSel().getName();
                      _builder.append(_name_86, "\t\t");
                      _builder.append(".getKey(), \"");
                      String _name_87 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                      _builder.append(_name_87, "\t\t");
                      _builder.append("\", \"");
                      String _name_88 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                      _builder.append(_name_88, "\t\t");
                      _builder.append("\"));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("refsList.put(\"");
                      _builder.append(this.referenceName, "\t\t");
                      _builder.append("\", refs);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("return mutations;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              } else {
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("refs.add(new SwapReferenceConfigurationStrategy(objectSelection.getObject(), \"");
                String _name_89 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                _builder.append(_name_89, "\t");
                _builder.append("\", \"");
                String _name_90 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                _builder.append(_name_90, "\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceInit)) {
            _builder.append("\t   \t\t");
            final ReferenceInit referenceInit = ((ReferenceInit) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_72 = referenceInit.getObject();
              if ((_object_72 instanceof SpecificObjectSelection)) {
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_73 = referenceInit.getObject();
                String _name_91 = ((SpecificObjectSelection) _object_73).getObjSel().getName();
                _builder.append(_name_91, "\t   \t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_74 = referenceInit.getObject();
                String _name_92 = ((SpecificObjectSelection) _object_74).getObjSel().getName();
                _builder.append(_name_92, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_75 = referenceInit.getObject();
                String _name_93 = ((SpecificObjectSelection) _object_75).getObjSel().getName();
                _builder.append(_name_93, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_76 = referenceInit.getObject();
                  EReference _refType_4 = ((SpecificObjectSelection) _object_76).getRefType();
                  boolean _tripleEquals_1 = (_refType_4 == null);
                  if (_tripleEquals_1) {
                    _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_77 = referenceInit.getObject();
                    String _name_94 = ((SpecificObjectSelection) _object_77).getObjSel().getName();
                    _builder.append(_name_94);
                    _builder.append(".getValue().getKey(), objectSelection.getObject(), entry_");
                    ObSelectionStrategy _object_78 = referenceInit.getObject();
                    String _name_95 = ((SpecificObjectSelection) _object_78).getObjSel().getName();
                    _builder.append(_name_95);
                    _builder.append(".getKey(), \"");
                    String _name_96 = referenceInit.getReference().get(0).getName();
                    _builder.append(_name_96);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_79 = referenceInit.getObject();
                    String _name_97 = ((SpecificObjectSelection) _object_79).getObjSel().getName();
                    _builder.append(_name_97);
                    _builder.append(".getValue().getKey(), objectSelection.getObject(), (EObject) entry_");
                    ObSelectionStrategy _object_80 = referenceInit.getObject();
                    String _name_98 = ((SpecificObjectSelection) _object_80).getObjSel().getName();
                    _builder.append(_name_98);
                    _builder.append(".getKey().eGet(ModelManager.getReferenceByName(\"");
                    ObSelectionStrategy _object_81 = referenceInit.getObject();
                    String _name_99 = ((SpecificObjectSelection) _object_81).getRefType().getName();
                    _builder.append(_name_99);
                    _builder.append("\", entry_");
                    ObSelectionStrategy _object_82 = referenceInit.getObject();
                    String _name_100 = ((SpecificObjectSelection) _object_82).getObjSel().getName();
                    _builder.append(_name_100);
                    _builder.append(".getKey())), \"");
                    String _name_101 = referenceInit.getReference().get(0).getName();
                    _builder.append(_name_101);
                    _builder.append("\", false));");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_83 = referenceInit.getObject();
              if ((_object_83 instanceof OtherTypeSelection)) {
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(objectSelection.getModel(), objectSelection.getObject(), \"");
                String _name_102 = referenceInit.getReference().get(0).getName();
                _builder.append(_name_102, "\t   \t\t\t\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_84 = referenceInit.getObject();
                String _name_103 = ((OtherTypeSelection) _object_84).getType().getName();
                _builder.append(_name_103, "\t   \t\t\t\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceAdd)) {
            final ReferenceAdd referenceAdd = ((ReferenceAdd) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_85 = referenceAdd.getObject();
              if ((_object_85 instanceof SpecificObjectSelection)) {
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_86 = referenceAdd.getObject();
                String _name_104 = ((SpecificObjectSelection) _object_86).getObjSel().getName();
                _builder.append(_name_104, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_87 = referenceAdd.getObject();
                String _name_105 = ((SpecificObjectSelection) _object_87).getObjSel().getName();
                _builder.append(_name_105, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_88 = referenceAdd.getObject();
                String _name_106 = ((SpecificObjectSelection) _object_88).getObjSel().getName();
                _builder.append(_name_106, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_89 = referenceAdd.getObject();
                  EReference _refType_5 = ((SpecificObjectSelection) _object_89).getRefType();
                  boolean _tripleEquals_2 = (_refType_5 == null);
                  if (_tripleEquals_2) {
                    _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_90 = referenceAdd.getObject();
                    String _name_107 = ((SpecificObjectSelection) _object_90).getObjSel().getName();
                    _builder.append(_name_107);
                    _builder.append(".getValue().getKey(), objectSelection.getObject(), entry_");
                    ObSelectionStrategy _object_91 = referenceAdd.getObject();
                    String _name_108 = ((SpecificObjectSelection) _object_91).getObjSel().getName();
                    _builder.append(_name_108);
                    _builder.append(".getKey(), \"");
                    String _name_109 = referenceAdd.getReference().get(0).getName();
                    _builder.append(_name_109);
                    _builder.append("\", false));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(entry_");
                    ObSelectionStrategy _object_92 = referenceAdd.getObject();
                    String _name_110 = ((SpecificObjectSelection) _object_92).getObjSel().getName();
                    _builder.append(_name_110);
                    _builder.append(".getValue().getKey(), objectSelection.getObject(), (EObject) entry_");
                    ObSelectionStrategy _object_93 = referenceAdd.getObject();
                    String _name_111 = ((SpecificObjectSelection) _object_93).getObjSel().getName();
                    _builder.append(_name_111);
                    _builder.append(".getKey().eGet(ModelManager.getReferenceByName(\"");
                    ObSelectionStrategy _object_94 = referenceAdd.getObject();
                    String _name_112 = ((SpecificObjectSelection) _object_94).getRefType().getName();
                    _builder.append(_name_112);
                    _builder.append("\", entry_");
                    ObSelectionStrategy _object_95 = referenceAdd.getObject();
                    String _name_113 = ((SpecificObjectSelection) _object_95).getObjSel().getName();
                    _builder.append(_name_113);
                    _builder.append(".getKey())), \"");
                    String _name_114 = referenceAdd.getReference().get(0).getName();
                    _builder.append(_name_114);
                    _builder.append("\", false));");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_96 = referenceAdd.getObject();
              if ((_object_96 instanceof OtherTypeSelection)) {
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(objectSelection.getModel(), objectSelection.getObject(), \"");
                String _name_115 = referenceAdd.getReference().get(0).getName();
                _builder.append(_name_115, "\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_97 = referenceAdd.getObject();
                String _name_116 = ((OtherTypeSelection) _object_97).getType().getName();
                _builder.append(_name_116, "\t");
                _builder.append("\", false));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceRemove)) {
            final ReferenceRemove referenceRemove = ((ReferenceRemove) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_98 = referenceRemove.getObject();
              if ((_object_98 instanceof SpecificObjectSelection)) {
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_99 = referenceRemove.getObject();
                String _name_117 = ((SpecificObjectSelection) _object_99).getObjSel().getName();
                _builder.append(_name_117, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_100 = referenceRemove.getObject();
                String _name_118 = ((SpecificObjectSelection) _object_100).getObjSel().getName();
                _builder.append(_name_118, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_101 = referenceRemove.getObject();
                String _name_119 = ((SpecificObjectSelection) _object_101).getObjSel().getName();
                _builder.append(_name_119, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(entry_");
                ObSelectionStrategy _object_102 = referenceRemove.getObject();
                String _name_120 = ((SpecificObjectSelection) _object_102).getObjSel().getName();
                _builder.append(_name_120, "\t\t\t");
                _builder.append(".getValue().getKey(), objectSelection.getObject(), entry_");
                ObSelectionStrategy _object_103 = referenceRemove.getObject();
                String _name_121 = ((SpecificObjectSelection) _object_103).getObjSel().getName();
                _builder.append(_name_121, "\t\t\t");
                _builder.append(".getKey(), \"");
                String _name_122 = referenceRemove.getReference().get(0).getName();
                _builder.append(_name_122, "\t\t\t");
                _builder.append("\", true));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_104 = referenceRemove.getObject();
              if ((_object_104 instanceof OtherTypeSelection)) {
                _builder.append("\t");
                _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(objectSelection.getModel(), objectSelection.getObject(), \"");
                String _name_123 = referenceRemove.getReference().get(0).getName();
                _builder.append(_name_123, "\t\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_105 = referenceRemove.getObject();
                String _name_124 = ((OtherTypeSelection) _object_105).getType().getName();
                _builder.append(_name_124, "\t\t");
                _builder.append("\", true));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceAtt)) {
            final ReferenceAtt referenceAtt = ((ReferenceAtt) c_1);
            _builder.newLineIfNotEmpty();
            {
              EList<EReference> _reference = referenceAtt.getReference();
              boolean _tripleNotEquals_11 = (_reference != null);
              if (_tripleNotEquals_11) {
                {
                  EAttribute _attribute = referenceAtt.getAttribute();
                  boolean _tripleNotEquals_12 = (_attribute != null);
                  if (_tripleNotEquals_12) {
                    _builder.append("//NAME:");
                    _builder.append(this.attributeName = referenceAtt.getAttribute().getName());
                    _builder.newLineIfNotEmpty();
                    {
                      AttributeType _value_20 = referenceAtt.getValue();
                      boolean _tripleNotEquals_13 = (_value_20 != null);
                      if (_tripleNotEquals_13) {
                        {
                          EObject _eContainer = referenceAtt.eContainer();
                          ObSelectionStrategy _object_106 = ((ModifyInformationMutator) _eContainer).getObject();
                          if ((_object_106 instanceof SpecificObjectSelection)) {
                            _builder.append("EObject refObjectSelected = null;");
                            _builder.newLine();
                            _builder.append("if (hmObjects.get(\"");
                            EObject _eContainer_1 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_107 = ((ModifyInformationMutator) _eContainer_1).getObject();
                            String _name_125 = ((SpecificObjectSelection) _object_107).getObjSel().getName();
                            _builder.append(_name_125);
                            _builder.append("\") != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("for (EReference ref : hmObjects.get(\"");
                            EObject _eContainer_2 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_108 = ((ModifyInformationMutator) _eContainer_2).getObject();
                            String _name_126 = ((SpecificObjectSelection) _object_108).getObjSel().getName();
                            _builder.append(_name_126, "\t");
                            _builder.append("\").getKey().eClass().getEReferences()) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("if (ref.getName().equals(\"");
                            String _name_127 = referenceAtt.getReference().get(0).getName();
                            _builder.append(_name_127, "\t\t");
                            _builder.append("\")) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                            EObject _eContainer_3 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_109 = ((ModifyInformationMutator) _eContainer_3).getObject();
                            String _name_128 = ((SpecificObjectSelection) _object_109).getObjSel().getName();
                            _builder.append(_name_128, "\t\t\t");
                            _builder.append(" = hmObjects.get(\"");
                            EObject _eContainer_4 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_110 = ((ModifyInformationMutator) _eContainer_4).getObject();
                            String _name_129 = ((SpecificObjectSelection) _object_110).getObjSel().getName();
                            _builder.append(_name_129, "\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t");
                            _builder.append("refObjectSelected = (EObject) entry_");
                            EObject _eContainer_5 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_111 = ((ModifyInformationMutator) _eContainer_5).getObject();
                            String _name_130 = ((SpecificObjectSelection) _object_111).getObjSel().getName();
                            _builder.append(_name_130, "\t\t\t");
                            _builder.append(".getKey().eGet(ref);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t");
                            _builder.append("break;");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            EObject _eContainer_6 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_112 = ((ModifyInformationMutator) _eContainer_6).getObject();
                            if ((_object_112 instanceof RandomTypeSelection)) {
                              _builder.append("EObject refObjectSelected = null;");
                              _builder.newLine();
                              _builder.append("if (objectSelection != null) {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("if (objectSelection.getObject() != null) {");
                              _builder.newLine();
                              _builder.append("\t\t");
                              _builder.append("for (EReference ref : objectSelection.getObject().eClass().getEReferences()) {");
                              _builder.newLine();
                              _builder.append("\t\t\t");
                              _builder.append("if (ref.getName().equals(\"");
                              String _name_131 = referenceAtt.getReference().get(0).getName();
                              _builder.append(_name_131, "\t\t\t");
                              _builder.append("\")) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t\t\t\t");
                              _builder.append("refObjectSelected = (EObject) objectSelection.getObject().eGet(ref);");
                              _builder.newLine();
                              _builder.append("\t\t\t\t");
                              _builder.append("break;");
                              _builder.newLine();
                              _builder.append("\t\t\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("}");
                              _builder.newLine();
                            }
                          }
                        }
                        _builder.append("if (refObjectSelected != null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("objsAttRef.add(refObjectSelected);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("ListAttributeConfigurationStrategy> attsRef = null;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (attsRefList.get(\"");
                        _builder.append(this.attributeName, "\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("attsRef = attsRefList.get(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("attsRef = new ArrayList<AttributeConfigurationStrategy>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("attsRef.add(");
                        CharSequence _method_3 = this.method(referenceAtt.getValue(), true, false);
                        _builder.append(_method_3, "\t");
                        _builder.append(");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("attsRefList.put(\"");
                        _builder.append(this.attributeName, "\t");
                        _builder.append("\", attsRef);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _object_113 = mut.getObject();
      if ((_object_113 instanceof CompleteTypeSelection)) {
        _builder.append("\t   \t\t");
        _builder.append("for (ObSelectionStrategy objectSelection : listSelection) {");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("if (mutatedObjects != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("mutatedObjects.add(objectSelection.getObject());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("ModifyInformationMutator mut = new ModifyInformationMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection, attsList, refsList, objsAttRef, attsRefList);");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_2 = this.nMutation++;
        _builder.append(_plusPlus_2, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_3 = this.nRegistryMutation++;
        _builder.append(_plusPlus_3, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t   \t\t\t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t   \t\t\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t   \t\t");
        _builder.append("}");
        _builder.newLine();
      } else {
        _builder.append("\t   \t\t");
        _builder.append("if (objectSelection != null) {");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("if (mutatedObjects != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("mutatedObjects.add(objectSelection.getObject());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("ModifyInformationMutator mut = new ModifyInformationMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection, attsList, refsList, objsAttRef, attsRefList);");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_4 = this.nMutation++;
        _builder.append(_plusPlus_4, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_5 = this.nRegistryMutation++;
        _builder.append(_plusPlus_5, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t   \t\t\t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t   \t\t\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t   \t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t   \t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("//END MODIFY INFORMATION ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence modifyInformationMutatorExhaustive(final ModifyInformationMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//MODIFY INFORMATION ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _object_1 = mut.getObject();
        String _name = ((RandomTypeSelection) _object_1).getType().getName();
        _builder.append(_name);
        _builder.append("\", mutatedObjects);");
        _builder.newLineIfNotEmpty();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
          } else {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method);
            _builder.newLineIfNotEmpty();
            _builder.append("objects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("CompleteTypeSelection cts = new CompleteTypeSelection(packages, model, \"");
          ObSelectionStrategy _object_3 = mut.getObject();
          String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
          _builder.append(_name_1);
          _builder.append("\", mutatedObjects);");
          _builder.newLineIfNotEmpty();
          _builder.append("List<EObject> objects = cts.getObjects();");
          _builder.newLine();
          {
            Expression _expression_1 = mut.getObject().getExpression();
            boolean _tripleNotEquals = (_expression_1 != null);
            if (_tripleNotEquals) {
              _builder.append("\t\t");
              _builder.append("//EXPRESSION LIST: ");
              ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
              List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
              _builder.append(_expressionList_1, "\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("//EXPRESSION LEVEL: ");
              _builder.append(this.nExpression = 0, "\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("//EXPRESSION LEVEL: ");
              boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
              _builder.append(_add_1, "\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("Expression exp");
              Integer _get_2 = this.expressionList.get(0);
              _builder.append(_get_2, "\t\t");
              _builder.append(" = new Expression();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              Object _method_1 = this.method(mut.getObject().getExpression(), 0);
              _builder.append(_method_1, "\t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("objects = evaluate(objects, exp");
              Integer _get_3 = this.expressionList.get(0);
              _builder.append(_get_3, "\t\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
            }
          }
        } else {
          ObSelectionStrategy _object_4 = mut.getObject();
          if ((_object_4 instanceof SpecificObjectSelection)) {
            _builder.append("List<EObject> objects = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("if (hmObjects.get(\"");
            ObSelectionStrategy _object_5 = mut.getObject();
            String _name_2 = ((SpecificObjectSelection) _object_5).getObjSel().getName();
            _builder.append(_name_2);
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _object_6 = mut.getObject();
            String _name_3 = ((SpecificObjectSelection) _object_6).getObjSel().getName();
            _builder.append(_name_3, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _object_7 = mut.getObject();
            String _name_4 = ((SpecificObjectSelection) _object_7).getObjSel().getName();
            _builder.append(_name_4, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _object_8 = mut.getObject();
            String _name_5 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
            _builder.append(_name_5, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _object_9 = mut.getObject();
            String _name_6 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
            _builder.append(_name_6, "\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered);");
            _builder.newLine();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (hmList.get(\"");
            ObSelectionStrategy _object_10 = mut.getObject();
            String _name_7 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
            _builder.append(_name_7, "\t");
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _object_11 = mut.getObject();
            String _name_8 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
            _builder.append(_name_8, "\t\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _object_12 = mut.getObject();
            String _name_9 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
            _builder.append(_name_9, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _object_13 = mut.getObject();
            String _name_10 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
            _builder.append(_name_10, "\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, model, objs);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("return numMutantsGenerated;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
            _builder.append("if (objectSelection != null) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("objects.add(objectSelection.getObject());");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType = mut.getObject().getRefType();
              boolean _tripleNotEquals_1 = (_refType != null);
              if (_tripleNotEquals_1) {
                _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                String _name_11 = mut.getObject().getRefType().getName();
                _builder.append(_name_11);
                _builder.append("\", objectSelections.get(0).getObject());");
                _builder.newLineIfNotEmpty();
                _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                _builder.newLine();
                _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                _builder.newLine();
                _builder.append("objects.add(object);");
                _builder.newLine();
              }
            }
          } else {
            ObSelectionStrategy _object_14 = mut.getObject();
            if ((_object_14 instanceof SpecificClosureSelection)) {
              {
                if (((((SpecificClosureSelection) mut.getObject()).getObjSel() != null) && (((SpecificClosureSelection) mut.getObject()).getRefType() != null))) {
                  _builder.append("List<EObject> objects = new ArrayList<EObject>();");
                  _builder.newLine();
                  _builder.append("ObSelectionStrategy objectSelection = null;");
                  _builder.newLine();
                  _builder.append("if (hmObjects.get(\"");
                  ObSelectionStrategy _object_15 = mut.getObject();
                  String _name_12 = ((SpecificClosureSelection) _object_15).getObjSel().getName();
                  _builder.append(_name_12);
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  ObSelectionStrategy _object_16 = mut.getObject();
                  String _name_13 = ((SpecificClosureSelection) _object_16).getObjSel().getName();
                  _builder.append(_name_13, "\t");
                  _builder.append(" = hmObjects.get(\"");
                  ObSelectionStrategy _object_17 = mut.getObject();
                  String _name_14 = ((SpecificClosureSelection) _object_17).getObjSel().getName();
                  _builder.append(_name_14, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                  ObSelectionStrategy _object_18 = mut.getObject();
                  String _name_15 = ((SpecificClosureSelection) _object_18).getObjSel().getName();
                  _builder.append(_name_15, "\t");
                  _builder.append(".getKey());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("if (recovered == null) {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("recovered = entry_");
                  ObSelectionStrategy _object_19 = mut.getObject();
                  String _name_16 = ((SpecificClosureSelection) _object_19).getObjSel().getName();
                  _builder.append(_name_16, "\t\t");
                  _builder.append(".getKey();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered);");
                  _builder.newLine();
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (hmList.get(\"");
                  ObSelectionStrategy _object_20 = mut.getObject();
                  String _name_17 = ((SpecificClosureSelection) _object_20).getObjSel().getName();
                  _builder.append(_name_17, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                  ObSelectionStrategy _object_21 = mut.getObject();
                  String _name_18 = ((SpecificClosureSelection) _object_21).getObjSel().getName();
                  _builder.append(_name_18, "\t\t");
                  _builder.append(" = hmList.get(\"");
                  ObSelectionStrategy _object_22 = mut.getObject();
                  String _name_19 = ((SpecificClosureSelection) _object_22).getObjSel().getName();
                  _builder.append(_name_19, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                  ObSelectionStrategy _object_23 = mut.getObject();
                  String _name_20 = ((SpecificClosureSelection) _object_23).getObjSel().getName();
                  _builder.append(_name_20, "\t\t");
                  _builder.append(") {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
                  _builder.newLine();
                  _builder.append("\t\t\t");
                  _builder.append("objs.add(obj);");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("objectSelection = new SpecificClosureSelection(listEntry_");
                  ObSelectionStrategy _object_24 = mut.getObject();
                  String _name_21 = ((SpecificClosureSelection) _object_24).getObjSel().getName();
                  _builder.append(_name_21, "\t\t");
                  _builder.append(".get(0).getValue().getValue(), listEntry_");
                  ObSelectionStrategy _object_25 = mut.getObject();
                  String _name_22 = ((SpecificClosureSelection) _object_25).getObjSel().getName();
                  _builder.append(_name_22, "\t\t");
                  _builder.append(".get(0).getValue().getKey(), objs, \"");
                  ObSelectionStrategy _object_26 = mut.getObject();
                  String _name_23 = ((SpecificClosureSelection) _object_26).getRefType().getName();
                  _builder.append(_name_23, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("return numMutantsGenerated;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("if (objectSelection != null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("objects.add(objectSelection.getObjects());");
                  _builder.newLine();
                  _builder.append("}");
                  _builder.newLine();
                  {
                    EReference _refType_1 = mut.getObject().getRefType();
                    boolean _tripleNotEquals_2 = (_refType_1 != null);
                    if (_tripleNotEquals_2) {
                      _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                      String _name_24 = mut.getObject().getRefType().getName();
                      _builder.append(_name_24);
                      _builder.append("\", objectSelection.getObject());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                      _builder.newLine();
                      _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                      _builder.newLine();
                      _builder.append("objects.add(object);");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("for (EObject object : objects) {");
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("\t\t");
        _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
        _builder.newLine();
      } else {
        _builder.append("\t\t");
        _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
        _builder.append(this.className, "\t\t");
        _builder.append(".class);");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
    _builder.append(this.methodName, "\t\t");
    _builder.append(".\" + numMutantsGenerated +\".model\"));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("ObSelectionStrategy obSelection = null;");
    _builder.newLine();
    {
      EReference _refType_2 = mut.getObject().getRefType();
      boolean _tripleNotEquals_3 = (_refType_2 != null);
      if (_tripleNotEquals_3) {
        _builder.append("\t\t");
        _builder.append("List<EObject> o = ModelManager.getReferences(\"");
        String _name_25 = mut.getObject().getRefType().getName();
        _builder.append(_name_25, "\t\t");
        _builder.append("\", object);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("object = ModelManager.getObject(resource, object);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (object != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("obSelection = new SpecificObjectSelection(packages, resource, object);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Map<String, List<AttributeConfigurationStrategy>> attsList = new HashMap<String, List<AttributeConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("//COUNTER:");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//COUNTER:");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        {
          EAttribute _get_4 = c.getAttribute().get(0);
          boolean _tripleNotEquals_4 = (_get_4 != null);
          if (_tripleNotEquals_4) {
            final EAttribute attribute = c.getAttribute().get(0);
            _builder.newLineIfNotEmpty();
            _builder.append("//NAME:");
            _builder.append(this.attributeName = attribute.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.attributeName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((c instanceof AttributeSwap)) {
            final AttributeSwap attributeSwap = ((AttributeSwap) c);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_27 = attributeSwap.getObject();
              boolean _tripleNotEquals_5 = (_object_27 != null);
              if (_tripleNotEquals_5) {
                {
                  ObSelectionStrategy _object_28 = attributeSwap.getObject();
                  if ((_object_28 instanceof RandomTypeSelection)) {
                    _builder.append("if (hmObjects.get(\"");
                    ObSelectionStrategy _object_29 = attributeSwap.getObject();
                    String _name_26 = ((RandomTypeSelection) _object_29).getName();
                    _builder.append(_name_26);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t\t\t\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _object_30 = attributeSwap.getObject();
                    String _name_27 = ((RandomTypeSelection) _object_30).getName();
                    _builder.append(_name_27, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _object_31 = attributeSwap.getObject();
                    String _name_28 = ((RandomTypeSelection) _object_31).getName();
                    _builder.append(_name_28, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                    ObSelectionStrategy _object_32 = attributeSwap.getObject();
                    String _name_29 = ((RandomTypeSelection) _object_32).getName();
                    _builder.append(_name_29, "\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t\t\t\t");
                    _builder.append("if (recovered == null) {");
                    _builder.newLine();
                    _builder.append("\t\t\t\t\t\t\t");
                    _builder.append("recovered = entry_");
                    ObSelectionStrategy _object_33 = attributeSwap.getObject();
                    String _name_30 = ((RandomTypeSelection) _object_33).getName();
                    _builder.append(_name_30, "\t\t\t\t\t\t\t");
                    _builder.append(".getKey();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t\t\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts.add(new SwapAttributeConfigurationStrategy(recovered, \"");
                    ObSelectionStrategy _object_34 = attributeSwap.getObject();
                    String _name_31 = ((RandomTypeSelection) _object_34).getType().getName();
                    _builder.append(_name_31, "\t");
                    _builder.append("\", \"");
                    String _name_32 = ((AttributeSwap)c).getAttribute().get(0).getName();
                    _builder.append(_name_32, "\t");
                    _builder.append("\", \"");
                    String _name_33 = ((AttributeSwap)c).getAttribute().get(1).getName();
                    _builder.append(_name_33, "\t");
                    _builder.append("\", resource));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("attsList.put(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\", atts);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  } else {
                    ObSelectionStrategy _object_35 = attributeSwap.getObject();
                    if ((_object_35 instanceof SpecificObjectSelection)) {
                      _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (hmObjects.get(\"");
                      ObSelectionStrategy _object_36 = attributeSwap.getObject();
                      String _name_34 = ((SpecificObjectSelection) _object_36).getObjSel().getName();
                      _builder.append(_name_34, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t\t\t\t\t");
                      _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                      _builder.append("atts = attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t\t");
                      _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t\t\t   \t\t\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _object_37 = attributeSwap.getObject();
                      String _name_35 = ((SpecificObjectSelection) _object_37).getObjSel().getName();
                      _builder.append(_name_35, "\t\t\t\t   \t\t\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _object_38 = attributeSwap.getObject();
                      String _name_36 = ((SpecificObjectSelection) _object_38).getObjSel().getName();
                      _builder.append(_name_36, "\t\t\t\t   \t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t\t   \t\t\t");
                      _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                      ObSelectionStrategy _object_39 = attributeSwap.getObject();
                      String _name_37 = ((SpecificObjectSelection) _object_39).getObjSel().getName();
                      _builder.append(_name_37, "\t\t\t\t   \t\t\t");
                      _builder.append(".getKey());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t\t\t\t\t");
                      _builder.append("if (recovered == null) {");
                      _builder.newLine();
                      _builder.append("\t\t\t\t\t\t\t\t");
                      _builder.append("recovered = entry_");
                      ObSelectionStrategy _object_40 = attributeSwap.getObject();
                      String _name_38 = ((SpecificObjectSelection) _object_40).getObjSel().getName();
                      _builder.append(_name_38, "\t\t\t\t\t\t\t\t");
                      _builder.append(".getKey();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t\t\t\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("atts.add(new SwapAttributeConfigurationStrategy(objectSelection.getObject(), recovered, \"");
                      String _name_39 = ((AttributeSwap)c).getAttribute().get(0).getName();
                      _builder.append(_name_39, "\t\t");
                      _builder.append("\", \"");
                      String _name_40 = ((AttributeSwap)c).getAttribute().get(1).getName();
                      _builder.append(_name_40, "\t\t");
                      _builder.append("\"));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("attsList.put(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\", atts);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("return numMutantsGenerated;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              } else {
                _builder.append("\t\t\t   \t\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("if (attsList.get(\"");
                _builder.append(this.attributeName, "\t\t\t   \t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t   \t\t\t\t");
                _builder.append("atts = attsList.get(\"");
                _builder.append(this.attributeName, "\t\t\t   \t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t\t\t   \t\t\t\t");
                _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("atts.add(new SwapAttributeConfigurationStrategy(objectSelection.getObject(), \"");
                String _name_41 = ((AttributeSwap)c).getAttribute().get(0).getName();
                _builder.append(_name_41, "\t\t\t   \t\t\t");
                _builder.append("\", \"");
                String _name_42 = ((AttributeSwap)c).getAttribute().get(1).getName();
                _builder.append(_name_42, "\t\t\t   \t\t\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t   \t\t\t");
                _builder.append("attsList.put(\"");
                _builder.append(this.attributeName, "\t\t\t   \t\t\t");
                _builder.append("\", atts);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t   \t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          } else {
            if ((c instanceof AttributeCopy)) {
              final AttributeCopy attributeCopy = ((AttributeCopy) c);
              _builder.newLineIfNotEmpty();
              {
                ObSelectionStrategy _object_41 = attributeCopy.getObject();
                boolean _tripleNotEquals_6 = (_object_41 != null);
                if (_tripleNotEquals_6) {
                  {
                    ObSelectionStrategy _object_42 = attributeCopy.getObject();
                    if ((_object_42 instanceof RandomTypeSelection)) {
                      _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (attsList.get(\"");
                      _builder.append(this.attributeName, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("atts = attsList.get(\"");
                      _builder.append(this.attributeName, "\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("atts.add(new CopyAttributeConfigurationStrategy(obSelection.getObject(), \"");
                      ObSelectionStrategy _object_43 = attributeCopy.getObject();
                      String _name_43 = ((RandomTypeSelection) _object_43).getType().getName();
                      _builder.append(_name_43, "\t");
                      _builder.append("\", \"");
                      String _name_44 = c.getAttribute().get(0).getName();
                      _builder.append(_name_44, "\t");
                      _builder.append("\", \"");
                      String _name_45 = c.getAttribute().get(1).getName();
                      _builder.append(_name_45, "\t");
                      _builder.append("\", obSelection.getModel()));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("attsList.put(\"");
                      _builder.append(this.attributeName, "\t");
                      _builder.append("\", atts);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t   \t\t\t");
                      _builder.append("}");
                      _builder.newLine();
                    } else {
                      ObSelectionStrategy _object_44 = attributeCopy.getObject();
                      if ((_object_44 instanceof SpecificObjectSelection)) {
                        _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (hmObjects.get(\"");
                        ObSelectionStrategy _object_45 = attributeCopy.getObject();
                        String _name_46 = ((SpecificObjectSelection) _object_45).getObjSel().getName();
                        _builder.append(_name_46, "\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("if (attsList.get(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t\t");
                        _builder.append("atts = attsList.get(\"");
                        _builder.append(this.attributeName, "\t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t\t");
                        _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t\t\t\t   \t\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _object_46 = attributeCopy.getObject();
                        String _name_47 = ((SpecificObjectSelection) _object_46).getObjSel().getName();
                        _builder.append(_name_47, "\t\t\t\t\t   \t\t\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _object_47 = attributeCopy.getObject();
                        String _name_48 = ((SpecificObjectSelection) _object_47).getObjSel().getName();
                        _builder.append(_name_48, "\t\t\t\t\t   \t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t\t\t\t   \t\t\t");
                        _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                        ObSelectionStrategy _object_48 = attributeCopy.getObject();
                        String _name_49 = ((SpecificObjectSelection) _object_48).getObjSel().getName();
                        _builder.append(_name_49, "\t\t\t\t\t   \t\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t\t\t");
                        _builder.append("recovered = entry_");
                        ObSelectionStrategy _object_49 = attributeCopy.getObject();
                        String _name_50 = ((SpecificObjectSelection) _object_49).getObjSel().getName();
                        _builder.append(_name_50, "\t\t\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("atts.add(new CopyAttributeConfigurationStrategy(obSelection.getObject(), recovered, \"");
                        String _name_51 = c.getAttribute().get(0).getName();
                        _builder.append(_name_51, "\t\t");
                        _builder.append("\", \"");
                        String _name_52 = c.getAttribute().get(1).getName();
                        _builder.append(_name_52, "\t\t");
                        _builder.append("\"));");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("attsList.put(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\", atts);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("return numMutantsGenerated;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                  }
                } else {
                  _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (attsList.get(\"");
                  _builder.append(this.attributeName, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("atts = attsList.get(\"");
                  _builder.append(this.attributeName, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("atts.add(new CopyAttributeConfigurationStrategy(obSelection.getObject(), \"");
                  String _name_53 = c.getAttribute().get(0).getName();
                  _builder.append(_name_53, "\t");
                  _builder.append("\", \"");
                  String _name_54 = c.getAttribute().get(1).getName();
                  _builder.append(_name_54, "\t");
                  _builder.append("\"));");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("attsList.put(\"");
                  _builder.append(this.attributeName, "\t");
                  _builder.append("\", atts);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            } else {
              if ((c instanceof AttributeOperation)) {
                final AttributeOperation attributeOperation = ((AttributeOperation) c);
                _builder.newLineIfNotEmpty();
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                {
                  AttributeEvaluationType _value = attributeOperation.getValue();
                  if ((_value instanceof ObjectAttributeType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_1 = attributeOperation.getValue();
                    final ObjectAttributeType objectAtt = ((ObjectAttributeType) _value_1);
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t   \t\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    String _name_55 = objectAtt.getObjSel().getName();
                    _builder.append(_name_55, "\t\t   \t\t\t");
                    _builder.append(" = hmObjects.get(\"");
                    String _name_56 = objectAtt.getObjSel().getName();
                    _builder.append(_name_56, "\t\t   \t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t   \t\t\t");
                    _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                    String _name_57 = objectAtt.getObjSel().getName();
                    _builder.append(_name_57, "\t\t   \t\t\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t\t\t");
                    _builder.append("if (recovered == null) {");
                    _builder.newLine();
                    _builder.append("\t\t\t\t\t\t");
                    _builder.append("recovered = entry_");
                    String _name_58 = objectAtt.getObjSel().getName();
                    _builder.append(_name_58, "\t\t\t\t\t\t");
                    _builder.append(".getKey();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("Object value = ModelManager.getAttribute(\"");
                    String _name_59 = objectAtt.getAttribute().getName();
                    _builder.append(_name_59);
                    _builder.append("\", recovered);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_2 = attributeOperation.getValue();
                  if ((_value_2 instanceof SpecificIntegerType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_3 = attributeOperation.getValue();
                    final SpecificIntegerType specInt = ((SpecificIntegerType) _value_3);
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = ");
                    int _value_4 = specInt.getValue();
                    _builder.append(_value_4);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_5 = attributeOperation.getValue();
                  if ((_value_5 instanceof RandomIntegerType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_6 = attributeOperation.getValue();
                    final RandomIntegerType rnInt = ((RandomIntegerType) _value_6);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = ");
                    int _min = rnInt.getMin();
                    _builder.append(_min);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = ");
                    int _max = rnInt.getMax();
                    _builder.append(_max);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = (min == 0 && max == 0) ? 0 : ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_7 = attributeOperation.getValue();
                  if ((_value_7 instanceof RandomIntegerNumberType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_8 = attributeOperation.getValue();
                    final RandomIntegerNumberType rnNumInt = ((RandomIntegerNumberType) _value_8);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = ");
                    int _min_1 = rnNumInt.getMin();
                    _builder.append(_min_1);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = 0;");
                    _builder.newLine();
                    {
                      ObSelectionStrategy _object_50 = rnNumInt.getObject();
                      if ((_object_50 instanceof SpecificObjectSelection)) {
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("//");
                        ObSelectionStrategy _object_51 = rnNumInt.getObject();
                        final SpecificObjectSelection sel = ((SpecificObjectSelection) _object_51);
                        _builder.newLineIfNotEmpty();
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        String _name_60 = sel.getObjSel().getName();
                        _builder.append(_name_60);
                        _builder.append(" = hmObjects.get(\"");
                        String _name_61 = sel.getObjSel().getName();
                        _builder.append(_name_61);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t   \t\t\t");
                        _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                        String _name_62 = sel.getObjSel().getName();
                        _builder.append(_name_62, "\t\t   \t\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("recovered = entry_");
                        String _name_63 = sel.getObjSel().getName();
                        _builder.append(_name_63, "\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("max = ModelManager.getIntAttribute(\"");
                        String _name_64 = rnNumInt.getMax().getName();
                        _builder.append(_name_64, "\t   \t\t\t\t");
                        _builder.append("\", recovered);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("Object value = (min == 0 && max == 0) ? 0 : ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_9 = attributeOperation.getValue();
                  if ((_value_9 instanceof SpecificDoubleType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_10 = attributeOperation.getValue();
                    final SpecificDoubleType specDouble = ((SpecificDoubleType) _value_10);
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = ");
                    double _value_11 = specDouble.getValue();
                    _builder.append(_value_11);
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_12 = attributeOperation.getValue();
                  if ((_value_12 instanceof RandomDoubleType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_13 = attributeOperation.getValue();
                    final RandomDoubleType rnDouble = ((RandomDoubleType) _value_13);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = (int) Math.floor(");
                    double _min_2 = rnDouble.getMin();
                    _builder.append(_min_2);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = (int) Math.floor(");
                    double _max_1 = rnDouble.getMax();
                    _builder.append(_max_1);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = 0.0;");
                    _builder.newLine();
                    _builder.append("if (min != 0 || max != 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("int rn = ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("value = rn / 100.0;");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_14 = attributeOperation.getValue();
                  if ((_value_14 instanceof RandomDoubleNumberType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_15 = attributeOperation.getValue();
                    final RandomDoubleNumberType rnNumDouble = ((RandomDoubleNumberType) _value_15);
                    _builder.newLineIfNotEmpty();
                    _builder.append("int min = (int) Math.floor(");
                    double _min_3 = rnNumDouble.getMin();
                    _builder.append(_min_3);
                    _builder.append(" * 100);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("int max = 0;");
                    _builder.newLine();
                    {
                      ObSelectionStrategy _object_52 = rnNumDouble.getObject();
                      if ((_object_52 instanceof SpecificObjectSelection)) {
                        _builder.append("\t   \t\t\t\t");
                        _builder.append("//");
                        ObSelectionStrategy _object_53 = rnNumDouble.getObject();
                        final SpecificObjectSelection sel_1 = ((SpecificObjectSelection) _object_53);
                        _builder.newLineIfNotEmpty();
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        String _name_65 = sel_1.getObjSel().getName();
                        _builder.append(_name_65);
                        _builder.append(" = hmObjects.get(\"");
                        String _name_66 = sel_1.getObjSel().getName();
                        _builder.append(_name_66);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t   \t\t\t");
                        _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                        String _name_67 = sel_1.getObjSel().getName();
                        _builder.append(_name_67, "\t\t   \t\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("recovered = entry_");
                        String _name_68 = sel_1.getObjSel().getName();
                        _builder.append(_name_68, "\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("max = (int) Math.floor(ModelManager.getDoubleAttribute(\"");
                        String _name_69 = rnNumDouble.getMax().getName();
                        _builder.append(_name_69);
                        _builder.append("\", recovered) * 100);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("Object value = 0.0;");
                    _builder.newLine();
                    _builder.append("if (min != 0 || max != 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("int rn = ModelManager.rn.nextInt(max - min) + min;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("value = rn / 100.0;");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_16 = attributeOperation.getValue();
                  if ((_value_16 instanceof MinValueType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_17 = attributeOperation.getValue();
                    final MinValueType minValue = ((MinValueType) _value_17);
                    _builder.newLineIfNotEmpty();
                    _builder.append("MinValueConfigurationStrategy minStrategy = new MinValueConfigurationStrategy(obSelection.getMetaModel(), obSelection.getModel(), \"");
                    String _typeName = MutatorUtils.getTypeName(minValue);
                    _builder.append(_typeName);
                    _builder.append("\", \"");
                    String _name_70 = minValue.getAttribute().getName();
                    _builder.append(_name_70);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = minStrategy.getValue(); ");
                    _builder.newLine();
                  }
                }
                {
                  AttributeEvaluationType _value_18 = attributeOperation.getValue();
                  if ((_value_18 instanceof MaxValueType)) {
                    _builder.append("//");
                    AttributeEvaluationType _value_19 = attributeOperation.getValue();
                    final MaxValueType maxValue = ((MaxValueType) _value_19);
                    _builder.newLineIfNotEmpty();
                    _builder.append("MaxValueConfigurationStrategy maxStrategy = new MaxValueConfigurationStrategy(obSelection.getMetaModel(), obSelection.getModel(), \"");
                    String _typeName_1 = MutatorUtils.getTypeName(maxValue);
                    _builder.append(_typeName_1);
                    _builder.append("\", \"");
                    String _name_71 = maxValue.getAttribute().getName();
                    _builder.append(_name_71);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object value = maxStrategy.getValue(); ");
                    _builder.newLine();
                  }
                }
                {
                  ArithmeticOperator _operator = attributeOperation.getOperator();
                  boolean _equals = Objects.equal(_operator, ArithmeticOperator.ADD);
                  if (_equals) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    CharSequence _add_2 = this.add(attributeOperation);
                    _builder.append(_add_2);
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_1 = attributeOperation.getOperator();
                  boolean _equals_1 = Objects.equal(_operator_1, ArithmeticOperator.SUBTRACT);
                  if (_equals_1) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    CharSequence _subtract = this.subtract(attributeOperation);
                    _builder.append(_subtract);
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_2 = attributeOperation.getOperator();
                  boolean _equals_2 = Objects.equal(_operator_2, ArithmeticOperator.MULTIPLY);
                  if (_equals_2) {
                    _builder.append("\t   \t\t\t\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t\t");
                    CharSequence _multiply = this.multiply(attributeOperation);
                    _builder.append(_multiply, "\t   \t\t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_3 = attributeOperation.getOperator();
                  boolean _equals_3 = Objects.equal(_operator_3, ArithmeticOperator.DIVIDE);
                  if (_equals_3) {
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t");
                    CharSequence _divide = this.divide(attributeOperation);
                    _builder.append(_divide, "\t   \t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ArithmeticOperator _operator_4 = attributeOperation.getOperator();
                  boolean _equals_4 = Objects.equal(_operator_4, ArithmeticOperator.MODULE);
                  if (_equals_4) {
                    _builder.append("\t   \t\t\t\t");
                    _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                    _builder.newLine();
                    _builder.append("if (attsList.get(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("atts = attsList.get(\"");
                    _builder.append(this.attributeName, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t   \t\t\t\t");
                    CharSequence _module = this.module(attributeOperation);
                    _builder.append(_module, "\t   \t\t\t\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
          }
        }
        _builder.append("\t");
        _builder.append("if (obSelection != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        CharSequence _method_2 = this.method(c, false, true, counter, true);
        _builder.append(_method_2, "\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("Map<String, List<ReferenceConfigurationStrategy>> refsList = new HashMap<String, List<ReferenceConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("Map<String, List<AttributeConfigurationStrategy>> attsRefList = new HashMap<String, List<AttributeConfigurationStrategy>>();");
    _builder.newLine();
    _builder.append("List<EObject> objsAttRef = new ArrayList<EObject>();");
    _builder.newLine();
    _builder.append("//COUNTER:");
    _builder.append(counter = 0);
    _builder.newLineIfNotEmpty();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        _builder.append("//COUNTER:");
        int _plusPlus_1 = counter++;
        _builder.append(_plusPlus_1);
        _builder.newLineIfNotEmpty();
        {
          EReference _get_5 = c_1.getReference().get(0);
          boolean _tripleNotEquals_7 = (_get_5 != null);
          if (_tripleNotEquals_7) {
            final EReference reference = c_1.getReference().get(0);
            _builder.newLineIfNotEmpty();
            _builder.append("//NAME:");
            _builder.append(this.referenceName = reference.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.referenceName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((c_1 instanceof ReferenceSwap)) {
            final ReferenceSwap referenceSwap = ((ReferenceSwap) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_54 = referenceSwap.getObject();
              boolean _tripleNotEquals_8 = (_object_54 != null);
              if (_tripleNotEquals_8) {
                {
                  ObSelectionStrategy _object_55 = referenceSwap.getObject();
                  if ((_object_55 instanceof RandomTypeSelection)) {
                    _builder.append("if (hmObjects.get(\"");
                    ObSelectionStrategy _object_56 = referenceSwap.getObject();
                    String _name_72 = ((RandomTypeSelection) _object_56).getName();
                    _builder.append(_name_72);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (refsList.get(\"");
                    _builder.append(this.referenceName, "\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("refs = refsList.get(\"");
                    _builder.append(this.referenceName, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _object_57 = referenceSwap.getObject();
                    String _name_73 = ((RandomTypeSelection) _object_57).getName();
                    _builder.append(_name_73, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _object_58 = referenceSwap.getObject();
                    String _name_74 = ((RandomTypeSelection) _object_58).getName();
                    _builder.append(_name_74, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t   \t\t\t");
                    _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                    ObSelectionStrategy _object_59 = referenceSwap.getObject();
                    String _name_75 = ((RandomTypeSelection) _object_59).getName();
                    _builder.append(_name_75, "\t\t\t   \t\t\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("if (recovered == null) {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("recovered = entry_");
                    ObSelectionStrategy _object_60 = referenceSwap.getObject();
                    String _name_76 = ((RandomTypeSelection) _object_60).getName();
                    _builder.append(_name_76, "\t\t");
                    _builder.append(".getKey();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("refs.add(new SwapReferenceConfigurationStrategy(recovered, \"");
                    ObSelectionStrategy _object_61 = referenceSwap.getObject();
                    String _name_77 = ((RandomTypeSelection) _object_61).getType().getName();
                    _builder.append(_name_77, "\t");
                    _builder.append("\", \"");
                    String _name_78 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                    _builder.append(_name_78, "\t");
                    _builder.append("\", \"");
                    String _name_79 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                    _builder.append(_name_79, "\t");
                    _builder.append("\", resource));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("refsList.put(\"");
                    _builder.append(this.referenceName, "\t");
                    _builder.append(", refs);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  } else {
                    ObSelectionStrategy _object_62 = referenceSwap.getObject();
                    if ((_object_62 instanceof SpecificObjectSelection)) {
                      _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (hmObjects.get(\"");
                      ObSelectionStrategy _object_63 = referenceSwap.getObject();
                      String _name_80 = ((SpecificObjectSelection) _object_63).getObjSel().getName();
                      _builder.append(_name_80, "\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (refsList.get(\"");
                      _builder.append(this.referenceName, "\t\t");
                      _builder.append("\") != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                      _builder.append("refs = refsList.get(\"");
                      _builder.append(this.referenceName, "\t\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("   \t\t");
                      _builder.append("else {");
                      _builder.newLine();
                      _builder.append("\t\t\t");
                      _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                      _builder.newLine();
                      _builder.append("   \t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _object_64 = referenceSwap.getObject();
                      String _name_81 = ((SpecificObjectSelection) _object_64).getObjSel().getName();
                      _builder.append(_name_81, "\t\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _object_65 = referenceSwap.getObject();
                      String _name_82 = ((SpecificObjectSelection) _object_65).getObjSel().getName();
                      _builder.append(_name_82, "\t\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t\t   \t\t\t");
                      _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                      ObSelectionStrategy _object_66 = referenceSwap.getObject();
                      String _name_83 = ((SpecificObjectSelection) _object_66).getObjSel().getName();
                      _builder.append(_name_83, "\t\t\t\t   \t\t\t");
                      _builder.append(".getKey());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("if (recovered == null) {");
                      _builder.newLine();
                      _builder.append("\t\t\t");
                      _builder.append("recovered = entry_");
                      ObSelectionStrategy _object_67 = referenceSwap.getObject();
                      String _name_84 = ((SpecificObjectSelection) _object_67).getObjSel().getName();
                      _builder.append(_name_84, "\t\t\t");
                      _builder.append(".getKey();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("refs.add(new SwapReferenceConfigurationStrategy(obSelection.getObject(), recovered, \"");
                      String _name_85 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                      _builder.append(_name_85, "\t\t");
                      _builder.append("\", \"");
                      String _name_86 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                      _builder.append(_name_86, "\t\t");
                      _builder.append("\"));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("refsList.put(\"");
                      _builder.append(this.referenceName, "\t\t");
                      _builder.append("\", refs);");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("return numMutantsGenerated;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              } else {
                EList<EReference> _reference = referenceSwap.getReference();
                boolean _tripleNotEquals_9 = (_reference != null);
                if (_tripleNotEquals_9) {
                  _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                  _builder.newLine();
                  _builder.append("if (refsList.get(\"");
                  _builder.append(this.referenceName);
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("refs = refsList.get(\"");
                  _builder.append(this.referenceName, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t\t\t   \t\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t\t");
                  _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                  _builder.newLine();
                  _builder.append("\t\t\t   \t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("refs.add(new SwapReferenceConfigurationStrategy(obSelection.getObject(), \"");
                  ObSelectionStrategy _object_68 = mut.getObject();
                  String _name_87 = ((RandomTypeSelection) _object_68).getType().getName();
                  _builder.append(_name_87, "\t\t\t\t\t");
                  _builder.append("\", \"");
                  String _name_88 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                  _builder.append(_name_88, "\t\t\t\t\t");
                  _builder.append("\", \"");
                  String _name_89 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                  _builder.append(_name_89, "\t\t\t\t\t");
                  _builder.append("\", resource));");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t\t");
                  _builder.append("refsList.put(\"");
                  _builder.append(this.referenceName, "\t\t\t\t\t");
                  _builder.append("\", refs);");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (refsList.get(\"");
                  _builder.append(this.referenceName, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t");
                  _builder.append("refs = refsList.get(\"");
                  _builder.append(this.referenceName, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t\t");
                  _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("refs.add(new SwapReferenceConfigurationStrategy(obSelection.getObject(), \"");
                  String _name_90 = ((ReferenceSwap)c_1).getReference().get(0).getName();
                  _builder.append(_name_90, "\t");
                  _builder.append("\", \"");
                  String _name_91 = ((ReferenceSwap)c_1).getReference().get(1).getName();
                  _builder.append(_name_91, "\t");
                  _builder.append("\"));");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("refsList.put(\"");
                  _builder.append(this.referenceName, "\t");
                  _builder.append("\", refs);");
                  _builder.newLineIfNotEmpty();
                  _builder.append("}");
                  _builder.newLine();
                }
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceInit)) {
            _builder.append("\t   \t\t");
            final ReferenceInit referenceInit = ((ReferenceInit) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_69 = referenceInit.getObject();
              if ((_object_69 instanceof SpecificObjectSelection)) {
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_70 = referenceInit.getObject();
                String _name_92 = ((SpecificObjectSelection) _object_70).getObjSel().getName();
                _builder.append(_name_92, "\t   \t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_71 = referenceInit.getObject();
                String _name_93 = ((SpecificObjectSelection) _object_71).getObjSel().getName();
                _builder.append(_name_93, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_72 = referenceInit.getObject();
                String _name_94 = ((SpecificObjectSelection) _object_72).getObjSel().getName();
                _builder.append(_name_94, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t   \t\t\t");
                _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                ObSelectionStrategy _object_73 = referenceInit.getObject();
                String _name_95 = ((SpecificObjectSelection) _object_73).getObjSel().getName();
                _builder.append(_name_95, "\t\t\t\t   \t\t\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("if (recovered == null) {");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t\t");
                _builder.append("recovered = entry_");
                ObSelectionStrategy _object_74 = referenceInit.getObject();
                String _name_96 = ((SpecificObjectSelection) _object_74).getObjSel().getName();
                _builder.append(_name_96, "\t\t\t\t\t\t\t\t");
                _builder.append(".getKey();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), recovered, \"");
                String _name_97 = referenceInit.getReference().get(0).getName();
                _builder.append(_name_97, "\t   \t\t\t\t\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return numMutantsGenerated;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_75 = referenceInit.getObject();
              if ((_object_75 instanceof OtherTypeSelection)) {
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), \"");
                String _name_98 = referenceInit.getReference().get(0).getName();
                _builder.append(_name_98, "\t   \t\t\t\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_76 = referenceInit.getObject();
                String _name_99 = ((OtherTypeSelection) _object_76).getType().getName();
                _builder.append(_name_99, "\t   \t\t\t\t");
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t   \t\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceAdd)) {
            final ReferenceAdd referenceAdd = ((ReferenceAdd) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_77 = referenceAdd.getObject();
              if ((_object_77 instanceof SpecificObjectSelection)) {
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_78 = referenceAdd.getObject();
                String _name_100 = ((SpecificObjectSelection) _object_78).getObjSel().getName();
                _builder.append(_name_100, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_79 = referenceAdd.getObject();
                String _name_101 = ((SpecificObjectSelection) _object_79).getObjSel().getName();
                _builder.append(_name_101, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_80 = referenceAdd.getObject();
                String _name_102 = ((SpecificObjectSelection) _object_80).getObjSel().getName();
                _builder.append(_name_102, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t   \t\t\t");
                _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                ObSelectionStrategy _object_81 = referenceAdd.getObject();
                String _name_103 = ((SpecificObjectSelection) _object_81).getObjSel().getName();
                _builder.append(_name_103, "\t\t\t\t   \t\t\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("if (recovered == null) {");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t\t");
                _builder.append("recovered = entry_");
                ObSelectionStrategy _object_82 = referenceAdd.getObject();
                String _name_104 = ((SpecificObjectSelection) _object_82).getObjSel().getName();
                _builder.append(_name_104, "\t\t\t\t\t\t\t\t");
                _builder.append(".getKey();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), recovered, \"");
                String _name_105 = referenceAdd.getReference().get(0).getName();
                _builder.append(_name_105, "\t\t\t");
                _builder.append("\", false));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return numMutantsGenerated;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_83 = referenceAdd.getObject();
              if ((_object_83 instanceof OtherTypeSelection)) {
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), \"");
                String _name_106 = referenceAdd.getReference().get(0).getName();
                _builder.append(_name_106, "\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_84 = referenceAdd.getObject();
                String _name_107 = ((OtherTypeSelection) _object_84).getType().getName();
                _builder.append(_name_107, "\t");
                _builder.append("\", false));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceRemove)) {
            final ReferenceRemove referenceRemove = ((ReferenceRemove) c_1);
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _object_85 = referenceRemove.getObject();
              if ((_object_85 instanceof SpecificObjectSelection)) {
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (hmObjects.get(\"");
                ObSelectionStrategy _object_86 = referenceRemove.getObject();
                String _name_108 = ((SpecificObjectSelection) _object_86).getObjSel().getName();
                _builder.append(_name_108, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_87 = referenceRemove.getObject();
                String _name_109 = ((SpecificObjectSelection) _object_87).getObjSel().getName();
                _builder.append(_name_109, "\t\t\t\t\t\t\t");
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_88 = referenceRemove.getObject();
                String _name_110 = ((SpecificObjectSelection) _object_88).getObjSel().getName();
                _builder.append(_name_110, "\t\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t   \t\t\t");
                _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                ObSelectionStrategy _object_89 = referenceRemove.getObject();
                String _name_111 = ((SpecificObjectSelection) _object_89).getObjSel().getName();
                _builder.append(_name_111, "\t\t\t\t   \t\t\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("if (recovered == null) {");
                _builder.newLine();
                _builder.append("\t\t\t\t\t\t\t\t");
                _builder.append("recovered = entry_");
                ObSelectionStrategy _object_90 = referenceRemove.getObject();
                String _name_112 = ((SpecificObjectSelection) _object_90).getObjSel().getName();
                _builder.append(_name_112, "\t\t\t\t\t\t\t\t");
                _builder.append(".getKey();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs.add(new SpecificReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), recovered, \"");
                String _name_113 = referenceRemove.getReference().get(0).getName();
                _builder.append(_name_113, "\t\t\t");
                _builder.append("\", true));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("return numMutantsGenerated;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_91 = referenceRemove.getObject();
              if ((_object_91 instanceof OtherTypeSelection)) {
                _builder.append("\t");
                _builder.append("if (obSelection != null && obSelection.getObject() != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("List<ReferenceConfigurationStrategy> refs = null;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("if (refsList.get(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = refsList.get(\"");
                _builder.append(this.referenceName, "\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("refs = new ArrayList<ReferenceConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refs.add(new RandomReferenceConfigurationStrategy(obSelection.getModel(), obSelection.getObject(), \"");
                String _name_114 = referenceRemove.getReference().get(0).getName();
                _builder.append(_name_114, "\t\t");
                _builder.append("\", \"");
                ObSelectionStrategy _object_92 = referenceRemove.getObject();
                String _name_115 = ((OtherTypeSelection) _object_92).getType().getName();
                _builder.append(_name_115, "\t\t");
                _builder.append("\", true));");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("refsList.put(\"");
                _builder.append(this.referenceName, "\t\t");
                _builder.append("\", refs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((c_1 instanceof ReferenceAtt)) {
            final ReferenceAtt referenceAtt = ((ReferenceAtt) c_1);
            _builder.newLineIfNotEmpty();
            {
              EList<EReference> _reference_1 = referenceAtt.getReference();
              boolean _tripleNotEquals_10 = (_reference_1 != null);
              if (_tripleNotEquals_10) {
                {
                  EAttribute _attribute = referenceAtt.getAttribute();
                  boolean _tripleNotEquals_11 = (_attribute != null);
                  if (_tripleNotEquals_11) {
                    _builder.append("//NAME:");
                    _builder.append(this.attributeName = referenceAtt.getAttribute().getName());
                    _builder.newLineIfNotEmpty();
                    {
                      AttributeType _value_20 = referenceAtt.getValue();
                      boolean _tripleNotEquals_12 = (_value_20 != null);
                      if (_tripleNotEquals_12) {
                        {
                          EObject _eContainer = referenceAtt.eContainer();
                          ObSelectionStrategy _object_93 = ((ModifyInformationMutator) _eContainer).getObject();
                          if ((_object_93 instanceof SpecificObjectSelection)) {
                            _builder.append("EObject refObjectSelected = null;");
                            _builder.newLine();
                            _builder.append("if (hmObjects.get(\"");
                            EObject _eContainer_1 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_94 = ((ModifyInformationMutator) _eContainer_1).getObject();
                            String _name_116 = ((SpecificObjectSelection) _object_94).getObjSel().getName();
                            _builder.append(_name_116);
                            _builder.append("\") != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("for (EReference ref : hmObjects.get(\"");
                            EObject _eContainer_2 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_95 = ((ModifyInformationMutator) _eContainer_2).getObject();
                            String _name_117 = ((SpecificObjectSelection) _object_95).getObjSel().getName();
                            _builder.append(_name_117, "\t");
                            _builder.append("\").getKey().eClass().getEReferences()) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("if (ref.getName().equals(\"");
                            String _name_118 = referenceAtt.getReference().get(0).getName();
                            _builder.append(_name_118, "\t\t");
                            _builder.append("\")) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                            EObject _eContainer_3 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_96 = ((ModifyInformationMutator) _eContainer_3).getObject();
                            String _name_119 = ((SpecificObjectSelection) _object_96).getObjSel().getName();
                            _builder.append(_name_119, "\t\t\t");
                            _builder.append(" = hmObjects.get(\"");
                            EObject _eContainer_4 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_97 = ((ModifyInformationMutator) _eContainer_4).getObject();
                            String _name_120 = ((SpecificObjectSelection) _object_97).getObjSel().getName();
                            _builder.append(_name_120, "\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("   \t\t\t");
                            _builder.append("refObjectSelected = ModelManager.getObject(resource, entry_");
                            EObject _eContainer_5 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_98 = ((ModifyInformationMutator) _eContainer_5).getObject();
                            String _name_121 = ((SpecificObjectSelection) _object_98).getObjSel().getName();
                            _builder.append(_name_121, "   \t\t\t");
                            _builder.append(".getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t");
                            _builder.append("break;");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            EObject _eContainer_6 = referenceAtt.eContainer();
                            ObSelectionStrategy _object_99 = ((ModifyInformationMutator) _eContainer_6).getObject();
                            if ((_object_99 instanceof RandomTypeSelection)) {
                              _builder.append("EObject refObjectSelected = null;");
                              _builder.newLine();
                              _builder.append("if (obSelection != null) {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("if (obSelection.getObject() != null) {");
                              _builder.newLine();
                              _builder.append("\t\t");
                              _builder.append("for (EReference ref : obSelection.getObject().eClass().getEReferences()) {");
                              _builder.newLine();
                              _builder.append("\t\t\t");
                              _builder.append("if (ref.getName().equals(\"");
                              String _name_122 = referenceAtt.getReference().get(0).getName();
                              _builder.append(_name_122, "\t\t\t");
                              _builder.append("\")) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t\t\t\t");
                              _builder.append("refObjectSelected = (EObject) obSelection.getObject().eGet(ref);");
                              _builder.newLine();
                              _builder.append("\t\t\t\t");
                              _builder.append("break;");
                              _builder.newLine();
                              _builder.append("\t\t\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("}");
                              _builder.newLine();
                            }
                          }
                        }
                        _builder.append("if (refObjectSelected != null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("objsAttRef.add(refObjectSelected);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("List<AttributeConfigurationStrategy> attsRef = null;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (attsRefList.get(\"");
                        _builder.append(this.attributeName, "\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("attsRef = attsRefList.get(\"");
                        _builder.append(this.attributeName, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("attsRef = new ArrayList<AttributeConfigurationStrategy>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("attsRef.add(");
                        CharSequence _method_3 = this.method(referenceAtt.getValue(), true, true);
                        _builder.append(_method_3, "\t");
                        _builder.append(");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("attsRefList.put(\"");
                        _builder.append(this.attributeName, "\t");
                        _builder.append("\", attsRef);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("ModifyInformationMutator mut = new ModifyInformationMutator(obSelection.getModel(),");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("obSelection.getMetaModel(), obSelection, attsList, refsList,");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("objsAttRef, attsRefList);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Mutator mutator = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (muts == null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
    String _plus = ("registry" + _string);
    String _registryMethodName = this.registryMethodName = _plus;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        {
          String _name_123 = mut.getName();
          boolean _tripleNotEquals_13 = (_name_123 != null);
          if (_tripleNotEquals_13) {
            _builder.append("\t\t");
            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("hmObjects.put(\"");
            String _name_124 = mut.getName();
            _builder.append(_name_124, "\t\t");
            _builder.append("\", entry);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("mutator = mut;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (mutator != null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//");
    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((last == false)) {
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated = k[0];");
        _builder.newLine();
      }
    }
    {
      if ((last == true)) {
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("\t\t");
            _builder.append("if (rules.get(\"");
            String _name_125 = constraint.getType().getName();
            _builder.append(_name_125, "\t\t");
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_126 = constraint.getType().getName();
            _builder.append(_name_126, "\t\t\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_127 = constraint.getType().getName();
            _builder.append(_name_127, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_14 = (_expressions != null);
              if (_tripleNotEquals_14) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_15 = (_rules != null);
              if (_tripleNotEquals_15) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    _builder.append(rule, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("rules.put(\"");
            String _name_128 = constraint.getType().getName();
            _builder.append(_name_128, "\t\t");
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((b == null)) {
            _builder.append("\t\t");
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
            _builder.newLine();
          } else {
            {
              int _size = b.getFrom().size();
              boolean _equals_5 = (_size == 0);
              if (_equals_5) {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_129 = b.getName();
                _builder.append(_name_129);
                _builder.append("/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_130 = b.getName();
                _builder.append(_name_130);
                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((b == null)) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                _builder.newLine();
              } else {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName = this.getProjectName();
                _builder.append(_projectName, "\t\t   \t\t");
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className, "\t\t   \t\t");
                _builder.append(".class, true);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              if ((this.standalone == false)) {
                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_131 = b.getName();
                _builder.append(_name_131);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_132 = b.getName();
                _builder.append(_name_132);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName_1 = this.getProjectName();
                _builder.append(_projectName_1);
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className);
                _builder.append(".class, true, false);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("muts = null;");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END MODIFY INFORMATION ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence createObjectMutator(final CreateObjectMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//CREATE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _container = mut.getContainer();
      boolean _tripleEquals = (_container == null);
      if (_tripleEquals) {
        _builder.append("List<EObject> containers = ModelManager.getParentObjects(packages, model, \"");
        String _name = mut.getType().getName();
        _builder.append(_name);
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("EObject container = containers.get(ModelManager.getRandomIndex(containers));");
        _builder.newLine();
        _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
        _builder.newLine();
        _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_1 = mut.getContainer();
          if ((_container_1 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_1 = ((RandomTypeSelection) _container_2).getType().getName();
            _builder.append(_name_1);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType = mut.getContainer().getRefType();
              boolean _tripleNotEquals = (_refType != null);
              if (_tripleNotEquals) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_2 = mut.getContainer().getRefType().getName();
                _builder.append(_name_2);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_3 = mut.getContainer();
          if ((_container_3 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_3 = ((CompleteTypeSelection) _container_4).getType().getName();
            _builder.append(_name_3);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType_1 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_1 = (_refType_1 != null);
              if (_tripleNotEquals_1) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_4 = mut.getContainer().getRefType().getName();
                _builder.append(_name_4);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_5 = mut.getContainer();
          if ((_container_5 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_5 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_5);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_6 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_6);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_7 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_7);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            {
              EReference _refType_2 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_2 = (_refType_2 != null);
              if (_tripleNotEquals_2) {
                _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                ObSelectionStrategy _container_9 = mut.getContainer();
                String _name_8 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
                _builder.append(_name_8);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_10 = mut.getContainer();
                String _name_9 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
                _builder.append(_name_9);
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_11 = mut.getContainer();
                String _name_10 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
                _builder.append(_name_10);
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                ObSelectionStrategy _container_12 = mut.getContainer();
                String _name_11 = ((SpecificObjectSelection) _container_12).getObjSel().getName();
                _builder.append(_name_11);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_13 = mut.getContainer();
                String _name_12 = ((SpecificObjectSelection) _container_13).getObjSel().getName();
                _builder.append(_name_12);
                _builder.append(".getValue().getKey(), \"");
                String _name_13 = mut.getContainer().getRefType().getName();
                _builder.append(_name_13);
                _builder.append("\", entry_");
                ObSelectionStrategy _container_14 = mut.getContainer();
                String _name_14 = ((SpecificObjectSelection) _container_14).getObjSel().getName();
                _builder.append(_name_14);
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                ObSelectionStrategy _container_15 = mut.getContainer();
                String _name_15 = ((SpecificObjectSelection) _container_15).getObjSel().getName();
                _builder.append(_name_15);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_16 = mut.getContainer();
                String _name_16 = ((SpecificObjectSelection) _container_16).getObjSel().getName();
                _builder.append(_name_16);
                _builder.append(".getValue().getKey(), null, null);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_17 = mut.getContainer();
          if ((_container_17 instanceof SpecificClosureSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_18 = mut.getContainer();
            String _name_17 = ((SpecificClosureSelection) _container_18).getObjSel().getName();
            _builder.append(_name_17);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_19 = mut.getContainer();
            String _name_18 = ((SpecificClosureSelection) _container_19).getObjSel().getName();
            _builder.append(_name_18);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_20 = mut.getContainer();
            String _name_19 = ((SpecificClosureSelection) _container_20).getObjSel().getName();
            _builder.append(_name_19);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            {
              EReference _refType_3 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_3 = (_refType_3 != null);
              if (_tripleNotEquals_3) {
                _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                ObSelectionStrategy _container_21 = mut.getContainer();
                String _name_20 = ((SpecificClosureSelection) _container_21).getObjSel().getName();
                _builder.append(_name_20);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_22 = mut.getContainer();
                String _name_21 = ((SpecificClosureSelection) _container_22).getObjSel().getName();
                _builder.append(_name_21);
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_23 = mut.getContainer();
                String _name_22 = ((SpecificClosureSelection) _container_23).getObjSel().getName();
                _builder.append(_name_22);
                _builder.append(".getKey(), \"");
                ObSelectionStrategy _container_24 = mut.getContainer();
                String _name_23 = ((SpecificClosureSelection) _container_24).getObjSel().getName();
                _builder.append(_name_23);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                ObSelectionStrategy _container_25 = mut.getContainer();
                String _name_24 = ((SpecificClosureSelection) _container_25).getObjSel().getName();
                _builder.append(_name_24);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_26 = mut.getContainer();
                String _name_25 = ((SpecificClosureSelection) _container_26).getObjSel().getName();
                _builder.append(_name_25);
                _builder.append(".getValue().getKey(), \"");
                String _name_26 = mut.getContainer().getRefType().getName();
                _builder.append(_name_26);
                _builder.append("\", entry_");
                ObSelectionStrategy _container_27 = mut.getContainer();
                String _name_27 = ((SpecificClosureSelection) _container_27).getObjSel().getName();
                _builder.append(_name_27);
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                ObSelectionStrategy _container_28 = mut.getContainer();
                String _name_28 = ((SpecificClosureSelection) _container_28).getObjSel().getName();
                _builder.append(_name_28);
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_29 = mut.getContainer();
                String _name_29 = ((SpecificClosureSelection) _container_29).getObjSel().getName();
                _builder.append(_name_29);
                _builder.append(".getValue().getKey(), null, null);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t\t");
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("\t\t\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("ObSelectionStrategy objectSelection = null;");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method = this.method(c, false, false, counter, false);
        _builder.append(_method);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_1 = this.method(c_1, false);
        _builder.append(_method_1);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("CreateObjectMutator mut = new CreateObjectMutator(model, packages, referenceSelection, containerSelection, atts, refs, \"");
    String _name_30 = mut.getType().getName();
    _builder.append(_name_30);
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nMutation++;
    _builder.append(_plusPlus_1);
    _builder.newLineIfNotEmpty();
    _builder.append("//INC COUNTER: ");
    int _plusPlus_2 = this.nRegistryMutation++;
    _builder.append(_plusPlus_2);
    _builder.newLineIfNotEmpty();
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END CREATE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence createObjectMutatorExhaustive(final CreateObjectMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//CREATE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _container = mut.getContainer();
      boolean _tripleEquals = (_container == null);
      if (_tripleEquals) {
        _builder.append("List<EObject> containers = ModelManager.getParentObjects(packages, model, \"");
        String _name = mut.getType().getName();
        _builder.append(_name);
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("EObject container = containers.get(ModelManager.getRandomIndex(containers));");
        _builder.newLine();
        _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
        _builder.newLine();
        _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_1 = mut.getContainer();
          if ((_container_1 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_1 = ((RandomTypeSelection) _container_2).getType().getName();
            _builder.append(_name_1);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType = mut.getContainer().getRefType();
              boolean _tripleNotEquals = (_refType != null);
              if (_tripleNotEquals) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_2 = mut.getContainer().getRefType().getName();
                _builder.append(_name_2);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_3 = mut.getContainer();
          if ((_container_3 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_3 = ((CompleteTypeSelection) _container_4).getType().getName();
            _builder.append(_name_3);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType_1 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_1 = (_refType_1 != null);
              if (_tripleNotEquals_1) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_4 = mut.getContainer().getRefType().getName();
                _builder.append(_name_4);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_5 = mut.getContainer();
          if ((_container_5 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_5 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_5);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_6 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_6);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_7 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_7);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _container_9 = mut.getContainer();
            String _name_8 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
            _builder.append(_name_8, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_9 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
            _builder.append(_name_9, "\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType_2 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_2 = (_refType_2 != null);
              if (_tripleNotEquals_2) {
                _builder.append("containerSelection = new SpecificObjectSelection(packages, model, recovered);");
                _builder.newLine();
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_10 = mut.getContainer().getRefType().getName();
                _builder.append(_name_10);
                _builder.append("\", recovered);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return numMutantsGenerated;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_11 = mut.getContainer();
          if ((_container_11 instanceof SpecificClosureSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_12 = mut.getContainer();
            String _name_11 = ((SpecificClosureSelection) _container_12).getObjSel().getName();
            _builder.append(_name_11);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_13 = mut.getContainer();
            String _name_12 = ((SpecificClosureSelection) _container_13).getObjSel().getName();
            _builder.append(_name_12);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_14 = mut.getContainer();
            String _name_13 = ((SpecificClosureSelection) _container_14).getObjSel().getName();
            _builder.append(_name_13);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _container_15 = mut.getContainer();
            String _name_14 = ((SpecificClosureSelection) _container_15).getObjSel().getName();
            _builder.append(_name_14, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _container_16 = mut.getContainer();
            String _name_15 = ((SpecificClosureSelection) _container_16).getObjSel().getName();
            _builder.append(_name_15, "\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType_3 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_3 = (_refType_3 != null);
              if (_tripleNotEquals_3) {
                _builder.append("containerSelection = new SpecificClosureSelection(packages, model, recovered, \"");
                ObSelectionStrategy _container_17 = mut.getContainer();
                String _name_16 = ((SpecificClosureSelection) _container_17).getObjSel().getName();
                _builder.append(_name_16);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("referenceSelection = new SpecificReferenceSelection(pakages, model, \"");
                String _name_17 = mut.getContainer().getRefType().getName();
                _builder.append(_name_17);
                _builder.append("\", recovered);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return numMutantsGenerated;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("ObSelectionStrategy objectSelection = null;");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method = this.method(c, false, false, counter, true);
        _builder.append(_method);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_1 = this.method(c_1, true);
        _builder.append(_method_1);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("CreateObjectMutator mut = new CreateObjectMutator(model, packages, referenceSelection, containerSelection, atts, refs, \"");
    String _name_18 = mut.getType().getName();
    _builder.append(_name_18);
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("Mutator mutator = null;");
    _builder.newLine();
    _builder.append("if (muts == null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
    String _plus = ("registry" + _string);
    String _registryMethodName = this.registryMethodName = _plus;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        {
          String _name_19 = mut.getName();
          boolean _tripleNotEquals_4 = (_name_19 != null);
          if (_tripleNotEquals_4) {
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("hmObjects.put(\"");
            String _name_20 = mut.getName();
            _builder.append(_name_20, "\t\t\t");
            _builder.append("\", entry);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("mutator = mut;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (mutator != null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//");
    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((last == false)) {
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated = k[0];");
        _builder.newLine();
      }
    }
    {
      if ((last == true)) {
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("\t\t");
            _builder.append("if (rules.get(\"");
            String _name_21 = constraint.getType().getName();
            _builder.append(_name_21, "\t\t");
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_22 = constraint.getType().getName();
            _builder.append(_name_22, "\t\t\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_23 = constraint.getType().getName();
            _builder.append(_name_23, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_5 = (_expressions != null);
              if (_tripleNotEquals_5) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_6 = (_rules != null);
              if (_tripleNotEquals_6) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    _builder.append(rule, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("rules.put(\"");
            String _name_24 = constraint.getType().getName();
            _builder.append(_name_24, "\t\t");
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((b == null)) {
            _builder.append("\t\t");
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
            _builder.newLine();
          } else {
            {
              int _size = b.getFrom().size();
              boolean _equals = (_size == 0);
              if (_equals) {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_25 = b.getName();
                _builder.append(_name_25);
                _builder.append("/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_26 = b.getName();
                _builder.append(_name_26);
                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((b == null)) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                _builder.newLine();
              } else {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName = this.getProjectName();
                _builder.append(_projectName, "\t\t   \t\t");
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className, "\t\t   \t\t");
                _builder.append(".class, true);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              if ((this.standalone == false)) {
                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_27 = b.getName();
                _builder.append(_name_27);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_28 = b.getName();
                _builder.append(_name_28);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName_1 = this.getProjectName();
                _builder.append(_projectName_1);
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className);
                _builder.append(".class, true, false);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("muts = null;");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END CREATE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence selectObjectMutator(final SelectObjectMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//SELECT OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("SpecificReferenceSelection referenceSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("List<EPackage> resourcePackages = packages;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("List<Resource> resources = new ArrayList<Resource>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("resources.add(model);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//");
    boolean rts = false;
    _builder.newLineIfNotEmpty();
    {
      if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
        {
          String _resource = mut.getObject().getResource();
          boolean _tripleEquals = (_resource == null);
          if (_tripleEquals) {
            {
              ObSelectionStrategy _container = mut.getContainer();
              boolean _tripleEquals_1 = (_container == null);
              if (_tripleEquals_1) {
                {
                  ObSelectionStrategy _object = mut.getObject();
                  if ((_object instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _object_1 = mut.getObject();
                    String _name = ((RandomTypeSelection) _object_1).getType().getName();
                    _builder.append(_name, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_2 = mut.getObject();
                  if ((_object_2 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _object_3 = mut.getObject();
                    String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
                    _builder.append(_name_1, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              } else {
                {
                  ObSelectionStrategy _container_1 = mut.getContainer();
                  if ((_container_1 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _container_2 = mut.getContainer();
                    String _name_2 = ((RandomTypeSelection) _container_2).getType().getName();
                    _builder.append(_name_2, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("EObject container = rts.getObject();");
                    _builder.newLine();
                    {
                      EReference _refType = mut.getContainer().getRefType();
                      boolean _tripleNotEquals = (_refType != null);
                      if (_tripleNotEquals) {
                        _builder.append("\t");
                        _builder.append("//");
                        String refName = mut.getContainer().getRefType().getName();
                        _builder.newLineIfNotEmpty();
                        {
                          EReference _refRefType = mut.getContainer().getRefRefType();
                          boolean _tripleNotEquals_1 = (_refRefType != null);
                          if (_tripleNotEquals_1) {
                            _builder.append("\t");
                            _builder.append("container = ModelManager.getReference(\"");
                            String _name_3 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_3, "\t");
                            _builder.append("\", container);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("//");
                            _builder.append(refName = mut.getContainer().getRefRefType().getName(), "\t");
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefRefType = mut.getContainer().getRefRefRefType();
                              boolean _tripleNotEquals_2 = (_refRefRefType != null);
                              if (_tripleNotEquals_2) {
                                _builder.append("\t");
                                _builder.append("container = ModelManager.getReference(\"");
                                String _name_4 = mut.getContainer().getRefRefType().getName();
                                _builder.append(_name_4, "\t");
                                _builder.append("\", container);");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//");
                                _builder.append(refName = mut.getContainer().getRefRefRefType().getName(), "\t");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                          }
                        }
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                        _builder.append(refName, "\t");
                        _builder.append("\", containerSelection);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  } else {
                    ObSelectionStrategy _container_3 = mut.getContainer();
                    if ((_container_3 instanceof CompleteTypeSelection)) {
                      _builder.append("\t");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("//");
                      _builder.append(rts = true, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                      ObSelectionStrategy _container_4 = mut.getContainer();
                      String _name_5 = ((CompleteTypeSelection) _container_4).getType().getName();
                      _builder.append(_name_5, "\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("EObject container = rts.getObject();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                      _builder.newLine();
                      {
                        EReference _refType_1 = mut.getContainer().getRefType();
                        boolean _tripleNotEquals_3 = (_refType_1 != null);
                        if (_tripleNotEquals_3) {
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                          String _name_6 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_6, "\t");
                          _builder.append("\", containerSelection);");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                          _builder.newLine();
                        }
                      }
                    } else {
                      ObSelectionStrategy _container_5 = mut.getContainer();
                      if ((_container_5 instanceof SpecificObjectSelection)) {
                        _builder.append("\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _container_6 = mut.getContainer();
                        String _name_7 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
                        _builder.append(_name_7, "\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _container_7 = mut.getContainer();
                        String _name_8 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
                        _builder.append(_name_8, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_8 = mut.getContainer();
                        String _name_9 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
                        _builder.append(_name_9, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resourcePackages = entry_");
                        ObSelectionStrategy _container_9 = mut.getContainer();
                        String _name_10 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
                        _builder.append(_name_10, "\t\t");
                        _builder.append(".getValue().getValue();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources = new ArrayList<Resource>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources.add(entry_");
                        ObSelectionStrategy _container_10 = mut.getContainer();
                        String _name_11 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
                        _builder.append(_name_11, "\t\t");
                        _builder.append(".getValue().getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                        ObSelectionStrategy _container_11 = mut.getContainer();
                        String _name_12 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
                        _builder.append(_name_12, "\t\t");
                        _builder.append(".getValue().getValue(), entry_");
                        ObSelectionStrategy _container_12 = mut.getContainer();
                        String _name_13 = ((SpecificObjectSelection) _container_12).getObjSel().getName();
                        _builder.append(_name_13, "\t\t");
                        _builder.append(".getValue().getKey(), entry_");
                        ObSelectionStrategy _container_13 = mut.getContainer();
                        String _name_14 = ((SpecificObjectSelection) _container_13).getObjSel().getName();
                        _builder.append(_name_14, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                        ObSelectionStrategy _container_14 = mut.getContainer();
                        String _name_15 = ((SpecificObjectSelection) _container_14).getObjSel().getName();
                        _builder.append(_name_15, "\t\t");
                        _builder.append(" = hmList.get(\"");
                        ObSelectionStrategy _container_15 = mut.getContainer();
                        String _name_16 = ((SpecificObjectSelection) _container_15).getObjSel().getName();
                        _builder.append(_name_16, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("if (listEntry_");
                        ObSelectionStrategy _container_16 = mut.getContainer();
                        String _name_17 = ((SpecificObjectSelection) _container_16).getObjSel().getName();
                        _builder.append(_name_17, "\t\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resourcePackages = listEntry_");
                        ObSelectionStrategy _container_17 = mut.getContainer();
                        String _name_18 = ((SpecificObjectSelection) _container_17).getObjSel().getName();
                        _builder.append(_name_18, "\t\t\t");
                        _builder.append(".get(0).getValue().getValue();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resources = new ArrayList<Resource>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resources.add(listEntry_");
                        ObSelectionStrategy _container_18 = mut.getContainer();
                        String _name_19 = ((SpecificObjectSelection) _container_18).getObjSel().getName();
                        _builder.append(_name_19, "\t\t\t");
                        _builder.append(".get(0).getValue().getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                        ObSelectionStrategy _container_19 = mut.getContainer();
                        String _name_20 = ((SpecificObjectSelection) _container_19).getObjSel().getName();
                        _builder.append(_name_20, "\t\t\t");
                        _builder.append(") {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("EObject obj = ent.getKey();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("objs.add(obj);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(listEntry_");
                        ObSelectionStrategy _container_20 = mut.getContainer();
                        String _name_21 = ((SpecificObjectSelection) _container_20).getObjSel().getName();
                        _builder.append(_name_21, "\t\t\t");
                        _builder.append(".get(0).getValue().getValue(), listEntry_");
                        ObSelectionStrategy _container_21 = mut.getContainer();
                        String _name_22 = ((SpecificObjectSelection) _container_21).getObjSel().getName();
                        _builder.append(_name_22, "\t\t\t");
                        _builder.append(".get(0).getValue().getKey(), objs);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("return mutations;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_22 = mut.getContainer();
                        String _name_23 = ((SpecificObjectSelection) _container_22).getObjSel().getName();
                        _builder.append(_name_23, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resourcePackages = entry_");
                        ObSelectionStrategy _container_23 = mut.getContainer();
                        String _name_24 = ((SpecificObjectSelection) _container_23).getObjSel().getName();
                        _builder.append(_name_24, "\t\t");
                        _builder.append(".getValue().getValue();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources = new ArrayList<Resource>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources.add(entry_");
                        ObSelectionStrategy _container_24 = mut.getContainer();
                        String _name_25 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
                        _builder.append(_name_25, "\t\t");
                        _builder.append(".getValue().getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("List<EObject> recovered = new ArrayList<EObject>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("recovered.add(entry_");
                        ObSelectionStrategy _container_25 = mut.getContainer();
                        String _name_26 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
                        _builder.append(_name_26, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        {
                          EReference _refType_2 = mut.getContainer().getRefType();
                          boolean _tripleNotEquals_4 = (_refType_2 != null);
                          if (_tripleNotEquals_4) {
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("//");
                            String refName_1 = mut.getContainer().getRefType().getName();
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefType_1 = mut.getContainer().getRefRefType();
                              boolean _tripleNotEquals_5 = (_refRefType_1 != null);
                              if (_tripleNotEquals_5) {
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("Object ob = ModelManager.getReferenced(\"");
                                String _name_27 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_27, "\t\t\t");
                                _builder.append("\", recovered.get(0));");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("if (ob instanceof EObject) {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("recovered.add((EObject) ob);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("else {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("recovered.add(((List<EObject>) ob).get(ModelManager.getRandomIndex((List<EObject>) ob)));");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("//");
                                _builder.append(refName_1 = mut.getContainer().getRefRefType().getName(), "\t\t\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                                ObSelectionStrategy _container_26 = mut.getContainer();
                                String _name_28 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
                                _builder.append(_name_28, "\t\t\t");
                                _builder.append(".getValue().getValue(), entry_");
                                ObSelectionStrategy _container_27 = mut.getContainer();
                                String _name_29 = ((SpecificObjectSelection) _container_27).getObjSel().getName();
                                _builder.append(_name_29, "\t\t\t");
                                _builder.append(".getValue().getKey(), recovered.get(1));");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                                ObSelectionStrategy _container_28 = mut.getContainer();
                                String _name_30 = ((SpecificObjectSelection) _container_28).getObjSel().getName();
                                _builder.append(_name_30, "\t\t\t");
                                _builder.append(".getValue().getValue(), entry_");
                                ObSelectionStrategy _container_29 = mut.getContainer();
                                String _name_31 = ((SpecificObjectSelection) _container_29).getObjSel().getName();
                                _builder.append(_name_31, "\t\t\t");
                                _builder.append(".getValue().getKey(), \"");
                                _builder.append(refName_1, "\t\t\t");
                                _builder.append("\", recovered.get(1));");
                                _builder.newLineIfNotEmpty();
                                {
                                  EReference _refRefRefType_1 = mut.getContainer().getRefRefRefType();
                                  boolean _tripleNotEquals_6 = (_refRefRefType_1 != null);
                                  if (_tripleNotEquals_6) {
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("ob = ModelManager.getReferenced(\"");
                                    String _name_32 = mut.getContainer().getRefRefType().getName();
                                    _builder.append(_name_32, "\t\t\t");
                                    _builder.append("\", recovered.get(1));");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("List<EObject> tmp = new ArrayList<EObject>();");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("tmp.add(recovered.get(1));");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("if (ob instanceof EObject) {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("tmp.add((EObject) ob);");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("else {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("tmp.add(((List<EObject>) ob).get(ModelManager.getRandomIndex((List<EObject>) ob)));");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("recovered = tmp;");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("//");
                                    _builder.append(refName_1 = mut.getContainer().getRefRefRefType().getName(), "\t\t\t");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                                    ObSelectionStrategy _container_30 = mut.getContainer();
                                    String _name_33 = ((SpecificObjectSelection) _container_30).getObjSel().getName();
                                    _builder.append(_name_33, "\t\t\t");
                                    _builder.append(".getValue().getValue(), entry_");
                                    ObSelectionStrategy _container_31 = mut.getContainer();
                                    String _name_34 = ((SpecificObjectSelection) _container_31).getObjSel().getName();
                                    _builder.append(_name_34, "\t\t\t");
                                    _builder.append(".getValue().getKey(), recovered.get(1));");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                                    ObSelectionStrategy _container_32 = mut.getContainer();
                                    String _name_35 = ((SpecificObjectSelection) _container_32).getObjSel().getName();
                                    _builder.append(_name_35, "\t\t\t");
                                    _builder.append(".getValue().getValue(), entry_");
                                    ObSelectionStrategy _container_33 = mut.getContainer();
                                    String _name_36 = ((SpecificObjectSelection) _container_33).getObjSel().getName();
                                    _builder.append(_name_36, "\t\t\t");
                                    _builder.append(".getValue().getKey(), \"");
                                    _builder.append(refName_1, "\t\t\t");
                                    _builder.append("\", recovered.get(1));");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              } else {
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                                ObSelectionStrategy _container_34 = mut.getContainer();
                                String _name_37 = ((SpecificObjectSelection) _container_34).getObjSel().getName();
                                _builder.append(_name_37, "\t\t\t");
                                _builder.append(".getValue().getValue(), entry_");
                                ObSelectionStrategy _container_35 = mut.getContainer();
                                String _name_38 = ((SpecificObjectSelection) _container_35).getObjSel().getName();
                                _builder.append(_name_38, "\t\t\t");
                                _builder.append(".getValue().getKey(), recovered.get(0));");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                                ObSelectionStrategy _container_36 = mut.getContainer();
                                String _name_39 = ((SpecificObjectSelection) _container_36).getObjSel().getName();
                                _builder.append(_name_39, "\t\t\t");
                                _builder.append(".getValue().getValue(), entry_");
                                ObSelectionStrategy _container_37 = mut.getContainer();
                                String _name_40 = ((SpecificObjectSelection) _container_37).getObjSel().getName();
                                _builder.append(_name_40, "\t\t\t");
                                _builder.append(".getValue().getKey(), \"");
                                _builder.append(refName_1, "\t\t\t");
                                _builder.append("\", recovered.get(0));");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("} else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                            ObSelectionStrategy _container_38 = mut.getContainer();
                            String _name_41 = ((SpecificObjectSelection) _container_38).getObjSel().getName();
                            _builder.append(_name_41, "\t\t\t");
                            _builder.append(" = hmList.get(\"");
                            ObSelectionStrategy _container_39 = mut.getContainer();
                            String _name_42 = ((SpecificObjectSelection) _container_39).getObjSel().getName();
                            _builder.append(_name_42, "\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("if (listEntry_");
                            ObSelectionStrategy _container_40 = mut.getContainer();
                            String _name_43 = ((SpecificObjectSelection) _container_40).getObjSel().getName();
                            _builder.append(_name_43, "\t\t\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resourcePackages = listEntry_");
                            ObSelectionStrategy _container_41 = mut.getContainer();
                            String _name_44 = ((SpecificObjectSelection) _container_41).getObjSel().getName();
                            _builder.append(_name_44, "\t\t\t\t");
                            _builder.append(".get(0).getValue().getValue();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources = new ArrayList<Resource>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources.add(listEntry_");
                            ObSelectionStrategy _container_42 = mut.getContainer();
                            String _name_45 = ((SpecificObjectSelection) _container_42).getObjSel().getName();
                            _builder.append(_name_45, "\t\t\t\t");
                            _builder.append(".get(0).getValue().getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                            ObSelectionStrategy _container_43 = mut.getContainer();
                            String _name_46 = ((SpecificObjectSelection) _container_43).getObjSel().getName();
                            _builder.append(_name_46, "\t\t\t\t");
                            _builder.append(") {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t\t");
                            _builder.append("EObject obj = ent.getKey();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t\t");
                            _builder.append("objs.add(obj);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(listEntry_");
                            ObSelectionStrategy _container_44 = mut.getContainer();
                            String _name_47 = ((SpecificObjectSelection) _container_44).getObjSel().getName();
                            _builder.append(_name_47, "\t\t\t\t");
                            _builder.append(".get(0).getValue().getValue(), listEntry_");
                            ObSelectionStrategy _container_45 = mut.getContainer();
                            String _name_48 = ((SpecificObjectSelection) _container_45).getObjSel().getName();
                            _builder.append(_name_48, "\t\t\t\t");
                            _builder.append(".get(0).getValue().getKey(), \"");
                            String _name_49 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_49, "\t\t\t\t");
                            _builder.append("\", listEntry_");
                            ObSelectionStrategy _container_46 = mut.getContainer();
                            String _name_50 = ((SpecificObjectSelection) _container_46).getObjSel().getName();
                            _builder.append(_name_50, "\t\t\t\t");
                            _builder.append(".get(0).getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("return mutations;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                            _builder.newLine();
                          }
                        }
                      } else {
                        ObSelectionStrategy _container_47 = mut.getContainer();
                        if ((_container_47 instanceof SpecificClosureSelection)) {
                          _builder.append("\t");
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                          ObSelectionStrategy _container_48 = mut.getContainer();
                          String _name_51 = ((SpecificClosureSelection) _container_48).getObjSel().getName();
                          _builder.append(_name_51, "\t");
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _container_49 = mut.getContainer();
                          String _name_52 = ((SpecificClosureSelection) _container_49).getObjSel().getName();
                          _builder.append(_name_52, "\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("if (entry_");
                          ObSelectionStrategy _container_50 = mut.getContainer();
                          String _name_53 = ((SpecificClosureSelection) _container_50).getObjSel().getName();
                          _builder.append(_name_53, "\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resourcePackages = entry_");
                          ObSelectionStrategy _container_51 = mut.getContainer();
                          String _name_54 = ((SpecificClosureSelection) _container_51).getObjSel().getName();
                          _builder.append(_name_54, "\t\t");
                          _builder.append(".getValue().getValue();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resources = new ArrayList<Resource>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resources.add(entry_");
                          ObSelectionStrategy _container_52 = mut.getContainer();
                          String _name_55 = ((SpecificClosureSelection) _container_52).getObjSel().getName();
                          _builder.append(_name_55, "\t\t");
                          _builder.append(".getValue().getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                          ObSelectionStrategy _container_53 = mut.getContainer();
                          String _name_56 = ((SpecificClosureSelection) _container_53).getObjSel().getName();
                          _builder.append(_name_56, "\t\t");
                          _builder.append(".getValue().getValue(), entry_");
                          ObSelectionStrategy _container_54 = mut.getContainer();
                          String _name_57 = ((SpecificClosureSelection) _container_54).getObjSel().getName();
                          _builder.append(_name_57, "\t\t");
                          _builder.append(".getValue().getKey(), entry_");
                          ObSelectionStrategy _container_55 = mut.getContainer();
                          String _name_58 = ((SpecificClosureSelection) _container_55).getObjSel().getName();
                          _builder.append(_name_58, "\t\t");
                          _builder.append(".getKey(), \"");
                          ObSelectionStrategy _container_56 = mut.getContainer();
                          String _name_59 = ((SpecificClosureSelection) _container_56).getRefType().getName();
                          _builder.append(_name_59, "\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("} else {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                          ObSelectionStrategy _container_57 = mut.getContainer();
                          String _name_60 = ((SpecificClosureSelection) _container_57).getObjSel().getName();
                          _builder.append(_name_60, "\t\t");
                          _builder.append(" = hmList.get(\"");
                          ObSelectionStrategy _container_58 = mut.getContainer();
                          String _name_61 = ((SpecificClosureSelection) _container_58).getObjSel().getName();
                          _builder.append(_name_61, "\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("if (listEntry_");
                          ObSelectionStrategy _container_59 = mut.getContainer();
                          String _name_62 = ((SpecificClosureSelection) _container_59).getObjSel().getName();
                          _builder.append(_name_62, "\t\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resourcePackages = listEntry_");
                          ObSelectionStrategy _container_60 = mut.getContainer();
                          String _name_63 = ((SpecificClosureSelection) _container_60).getObjSel().getName();
                          _builder.append(_name_63, "\t\t\t");
                          _builder.append(".get(0).getValue().getValue();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resources = new ArrayList<Resource>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resources.add(listEntry_");
                          ObSelectionStrategy _container_61 = mut.getContainer();
                          String _name_64 = ((SpecificClosureSelection) _container_61).getObjSel().getName();
                          _builder.append(_name_64, "\t\t\t");
                          _builder.append(".get(0).getValue().getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                          ObSelectionStrategy _container_62 = mut.getContainer();
                          String _name_65 = ((SpecificClosureSelection) _container_62).getObjSel().getName();
                          _builder.append(_name_65, "\t\t\t");
                          _builder.append(") {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("EObject obj = ent.getKey();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("objs.add(obj);");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(listEntry_");
                          ObSelectionStrategy _container_63 = mut.getContainer();
                          String _name_66 = ((SpecificClosureSelection) _container_63).getObjSel().getName();
                          _builder.append(_name_66, "\t\t\t");
                          _builder.append(".get(0).getValue().getValue(), listEntry_");
                          ObSelectionStrategy _container_64 = mut.getContainer();
                          String _name_67 = ((SpecificClosureSelection) _container_64).getObjSel().getName();
                          _builder.append(_name_67, "\t\t\t");
                          _builder.append(".get(0).getValue().getKey(), \"");
                          String _name_68 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_68, "\t\t\t");
                          _builder.append("\", listEntry_");
                          ObSelectionStrategy _container_65 = mut.getContainer();
                          String _name_69 = ((SpecificClosureSelection) _container_65).getObjSel().getName();
                          _builder.append(_name_69, "\t\t\t");
                          _builder.append(".get(0).getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("else {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("return mutations;");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          {
                            EReference _refType_3 = mut.getContainer().getRefType();
                            boolean _tripleNotEquals_7 = (_refType_3 != null);
                            if (_tripleNotEquals_7) {
                              _builder.append("\t");
                              _builder.append("if (entry_");
                              ObSelectionStrategy _container_66 = mut.getContainer();
                              String _name_70 = ((SpecificClosureSelection) _container_66).getObjSel().getName();
                              _builder.append(_name_70, "\t");
                              _builder.append(" != null) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resourcePackages = entry_");
                              ObSelectionStrategy _container_67 = mut.getContainer();
                              String _name_71 = ((SpecificClosureSelection) _container_67).getObjSel().getName();
                              _builder.append(_name_71, "\t\t");
                              _builder.append(".getValue().getValue();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources = new ArrayList<Resource>();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources.add(entry_");
                              ObSelectionStrategy _container_68 = mut.getContainer();
                              String _name_72 = ((SpecificClosureSelection) _container_68).getObjSel().getName();
                              _builder.append(_name_72, "\t\t");
                              _builder.append(".getValue().getKey());");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                              ObSelectionStrategy _container_69 = mut.getContainer();
                              String _name_73 = ((SpecificClosureSelection) _container_69).getObjSel().getName();
                              _builder.append(_name_73, "\t\t");
                              _builder.append(".getValue().getValue(), entry_");
                              ObSelectionStrategy _container_70 = mut.getContainer();
                              String _name_74 = ((SpecificClosureSelection) _container_70).getObjSel().getName();
                              _builder.append(_name_74, "\t\t");
                              _builder.append(".getValue().getKey(), \"");
                              String _name_75 = mut.getContainer().getRefType().getName();
                              _builder.append(_name_75, "\t\t");
                              _builder.append("\", entry_");
                              ObSelectionStrategy _container_71 = mut.getContainer();
                              String _name_76 = ((SpecificClosureSelection) _container_71).getObjSel().getName();
                              _builder.append(_name_76, "\t\t");
                              _builder.append(".getKey());");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("} else {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("return mutations;");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                            } else {
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                              _builder.newLine();
                            }
                          }
                        }
                      }
                    }
                  }
                }
                {
                  if ((rts == true)) {
                    _builder.append("\t");
                    _builder.append("rts = new RandomTypeSelection(packages, model, \"");
                    String _name_77 = mut.getObject().getType().getName();
                    _builder.append(_name_77, "\t");
                    _builder.append("\", referenceSelection, containerSelection);");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
                    String _name_78 = mut.getObject().getType().getName();
                    _builder.append(_name_78, "\t");
                    _builder.append("\", referenceSelection, containerSelection);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                    _builder.append("\t");
                    _builder.append("EObject object = rts.getObject();");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              if (((mut.getObject().getExpression() == null) && (mut.getContainer() == null))) {
                _builder.append("\t");
                _builder.append("EObject object = rts.getObject();");
                _builder.newLine();
              }
            }
            {
              EReference _refType_4 = mut.getObject().getRefType();
              boolean _tripleNotEquals_8 = (_refType_4 != null);
              if (_tripleNotEquals_8) {
                _builder.append("\t");
                _builder.append("Object o = object.eGet(\"");
                EReference _refType_5 = mut.getObject().getRefType();
                _builder.append(_refType_5, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("if (o instanceof EObject) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("object = (EObject) o;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("if (o instanceof List<?>) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("object = ((List<EObject) o).get(ModelManager.getRandomIndex((List<EObject) o));");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          } else {
            _builder.append("\t");
            _builder.append("//");
            final List<String> resourceURIs = new ArrayList<String>();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//");
            final List<String> ecoreURIs = new ArrayList<String>();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//");
            final String resourceName = mut.getObject().getResource();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//");
            Resource resource = null;
            _builder.newLineIfNotEmpty();
            {
              EList<Resource> _resources = this.program.getResources();
              for(final Resource res : _resources) {
                {
                  boolean _equals = res.getName().equals(resourceName);
                  if (_equals) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(resource = res, "\t");
                    _builder.append(" ");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              if ((resource != null)) {
                _builder.append("\t");
                _builder.append("//");
                final Source source = resource.getPath();
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//");
                String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath();
                String _plus = (_workspaceAbsolutePath + "/");
                String _projectName = this.getProjectName();
                String _plus_1 = (_plus + _projectName);
                String _plus_2 = (_plus_1 + "/");
                String _path = source.getPath();
                final String resourcePath = (_plus_2 + _path);
                _builder.newLineIfNotEmpty();
                {
                  boolean _exists = new File(resourcePath).exists();
                  if (_exists) {
                    {
                      File[] _listFiles = new File(resourcePath).listFiles();
                      for(final File resourceFile : _listFiles) {
                        {
                          boolean _endsWith = resourceFile.getName().endsWith(".model");
                          if (_endsWith) {
                            _builder.append("\t");
                            _builder.append("//");
                            boolean _add = resourceURIs.add(resourceFile.getPath());
                            _builder.append(_add, "\t");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          boolean _endsWith_1 = resourceFile.getName().endsWith(".ecore");
                          if (_endsWith_1) {
                            _builder.append("\t");
                            _builder.append("//");
                            boolean _add_1 = ecoreURIs.add(resourceFile.getPath());
                            _builder.append(_add_1, "\t");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                  }
                }
                _builder.append("\t");
                _builder.append("//");
                final String metamodelPath = resource.getMetamodel().replace("\\", "/");
                _builder.newLineIfNotEmpty();
                {
                  if ((this.standalone == false)) {
                    _builder.append("\t");
                    _builder.append("resourcePackages = ModelManager.loadMetaModel(\"");
                    _builder.append(metamodelPath, "\t");
                    _builder.append("\", this.getClass());");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("resourcePackages = ModelManager.loadMetaModel(\"");
                    _builder.append(metamodelPath, "\t");
                    _builder.append("\", ");
                    _builder.append(this.className, "\t");
                    _builder.append(".class);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t");
                _builder.append("resources = new ArrayList<Resource>();");
                _builder.newLine();
                {
                  for(final String resourceURI : resourceURIs) {
                    {
                      if ((this.standalone == false)) {
                        _builder.append("\t");
                        _builder.append("resources.add(ModelManager.loadModel(resourcePackages, URI.createURI(\"file:/\" + \"");
                        _builder.append(resourceURI, "\t");
                        _builder.append("\").toFileString()));");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("resources.add(ModelManager.loadModelNoException(resourcePackages, URI.createURI(\"file:/\" + \"");
                        _builder.append(resourceURI, "\t");
                        _builder.append("\").toFileString()));");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  for(final String ecoreURI : ecoreURIs) {
                    _builder.append("\t");
                    _builder.append("//");
                    final String ecoreURI2 = ecoreURI.replace("\\", "/");
                    _builder.newLineIfNotEmpty();
                    {
                      if ((this.standalone == false)) {
                        _builder.append("\t");
                        _builder.append("resources.add(ModelManager.loadMetaModelAsResource(resourcePackages, \"");
                        _builder.append(ecoreURI2, "\t");
                        _builder.append("\"));");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("resources.add(ModelManager.loadMetaModelAsResourceNoException(resourcePackages, \"file:/");
                        _builder.append(ecoreURI2, "\t");
                        _builder.append("\"));");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  ObSelectionStrategy _container_72 = mut.getContainer();
                  boolean _tripleEquals_2 = (_container_72 == null);
                  if (_tripleEquals_2) {
                    {
                      ObSelectionStrategy _object_4 = mut.getObject();
                      if ((_object_4 instanceof RandomTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("//");
                        _builder.append(rts = true, "\t");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                        ObSelectionStrategy _object_5 = mut.getObject();
                        String _name_79 = ((RandomTypeSelection) _object_5).getType().getName();
                        _builder.append(_name_79, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      ObSelectionStrategy _object_6 = mut.getObject();
                      if ((_object_6 instanceof CompleteTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("//");
                        _builder.append(rts = true, "\t");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                        ObSelectionStrategy _object_7 = mut.getObject();
                        String _name_80 = ((CompleteTypeSelection) _object_7).getType().getName();
                        _builder.append(_name_80, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  } else {
                    {
                      ObSelectionStrategy _container_73 = mut.getContainer();
                      if ((_container_73 instanceof RandomTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("//");
                        _builder.append(rts = true, "\t");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                        ObSelectionStrategy _container_74 = mut.getContainer();
                        String _name_81 = ((RandomTypeSelection) _container_74).getType().getName();
                        _builder.append(_name_81, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("EObject container = rts.getObject();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resources, container);");
                        _builder.newLine();
                        {
                          EReference _refType_6 = mut.getContainer().getRefType();
                          boolean _tripleNotEquals_9 = (_refType_6 != null);
                          if (_tripleNotEquals_9) {
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, \"");
                            String _name_82 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_82, "\t");
                            _builder.append("\", containerSelection);");
                            _builder.newLineIfNotEmpty();
                          } else {
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                            _builder.newLine();
                          }
                        }
                      } else {
                        ObSelectionStrategy _container_75 = mut.getContainer();
                        if ((_container_75 instanceof CompleteTypeSelection)) {
                          _builder.append("\t");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("//");
                          _builder.append(rts = true, "\t");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                          ObSelectionStrategy _container_76 = mut.getContainer();
                          String _name_83 = ((CompleteTypeSelection) _container_76).getType().getName();
                          _builder.append(_name_83, "\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("EObject container = rts.getObject();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resources, container);");
                          _builder.newLine();
                          {
                            EReference _refType_7 = mut.getContainer().getRefType();
                            boolean _tripleNotEquals_10 = (_refType_7 != null);
                            if (_tripleNotEquals_10) {
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, \"");
                              String _name_84 = mut.getContainer().getRefType().getName();
                              _builder.append(_name_84, "\t");
                              _builder.append("\", containerSelection);");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                              _builder.newLine();
                            }
                          }
                        } else {
                          ObSelectionStrategy _container_77 = mut.getContainer();
                          if ((_container_77 instanceof SpecificObjectSelection)) {
                            _builder.append("\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                            ObSelectionStrategy _container_78 = mut.getContainer();
                            String _name_85 = ((SpecificObjectSelection) _container_78).getObjSel().getName();
                            _builder.append(_name_85, "\t");
                            _builder.append(" = hmObjects.get(\"");
                            ObSelectionStrategy _container_79 = mut.getContainer();
                            String _name_86 = ((SpecificObjectSelection) _container_79).getObjSel().getName();
                            _builder.append(_name_86, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("if (entry_");
                            ObSelectionStrategy _container_80 = mut.getContainer();
                            String _name_87 = ((SpecificObjectSelection) _container_80).getObjSel().getName();
                            _builder.append(_name_87, "\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resourcePackages = entry_");
                            ObSelectionStrategy _container_81 = mut.getContainer();
                            String _name_88 = ((SpecificObjectSelection) _container_81).getObjSel().getName();
                            _builder.append(_name_88, "\t\t");
                            _builder.append(".getValue().getValue();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resources = new ArrayList<Resource>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resources.add(entry_");
                            ObSelectionStrategy _container_82 = mut.getContainer();
                            String _name_89 = ((SpecificObjectSelection) _container_82).getObjSel().getName();
                            _builder.append(_name_89, "\t\t");
                            _builder.append(".getValue().getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                            ObSelectionStrategy _container_83 = mut.getContainer();
                            String _name_90 = ((SpecificObjectSelection) _container_83).getObjSel().getName();
                            _builder.append(_name_90, "\t\t");
                            _builder.append(".getValue().getValue(), entry_");
                            ObSelectionStrategy _container_84 = mut.getContainer();
                            String _name_91 = ((SpecificObjectSelection) _container_84).getObjSel().getName();
                            _builder.append(_name_91, "\t\t");
                            _builder.append(".getValue().getKey(), entry_");
                            ObSelectionStrategy _container_85 = mut.getContainer();
                            String _name_92 = ((SpecificObjectSelection) _container_85).getObjSel().getName();
                            _builder.append(_name_92, "\t\t");
                            _builder.append(".getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("} else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                            ObSelectionStrategy _container_86 = mut.getContainer();
                            String _name_93 = ((SpecificObjectSelection) _container_86).getObjSel().getName();
                            _builder.append(_name_93, "\t\t");
                            _builder.append(" = hmList.get(\"");
                            ObSelectionStrategy _container_87 = mut.getContainer();
                            String _name_94 = ((SpecificObjectSelection) _container_87).getObjSel().getName();
                            _builder.append(_name_94, "\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("if (listEntry_");
                            ObSelectionStrategy _container_88 = mut.getContainer();
                            String _name_95 = ((SpecificObjectSelection) _container_88).getObjSel().getName();
                            _builder.append(_name_95, "\t\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resourcePackages = listEntry_");
                            ObSelectionStrategy _container_89 = mut.getContainer();
                            String _name_96 = ((SpecificObjectSelection) _container_89).getObjSel().getName();
                            _builder.append(_name_96, "\t\t\t");
                            _builder.append(".get(0).getValue().getValue();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources = new ArrayList<Resource>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources.add(listEntry_");
                            ObSelectionStrategy _container_90 = mut.getContainer();
                            String _name_97 = ((SpecificObjectSelection) _container_90).getObjSel().getName();
                            _builder.append(_name_97, "\t\t\t");
                            _builder.append(".get(0).getValue().getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                            ObSelectionStrategy _container_91 = mut.getContainer();
                            String _name_98 = ((SpecificObjectSelection) _container_91).getObjSel().getName();
                            _builder.append(_name_98, "\t\t\t");
                            _builder.append(") {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t\t");
                            _builder.append("EObject obj = ent.getKey();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t\t");
                            _builder.append("objs.add(obj);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("containerSelection = new SpecificObjectSelection(listEntry_");
                            ObSelectionStrategy _container_92 = mut.getContainer();
                            String _name_99 = ((SpecificObjectSelection) _container_92).getObjSel().getName();
                            _builder.append(_name_99, "\t\t\t");
                            _builder.append(".get(0).getValue().getValue(), listEntry_");
                            ObSelectionStrategy _container_93 = mut.getContainer();
                            String _name_100 = ((SpecificObjectSelection) _container_93).getObjSel().getName();
                            _builder.append(_name_100, "\t\t\t");
                            _builder.append(".get(0).getValue().getKey(), objs);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("return mutations;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            {
                              EReference _refType_8 = mut.getContainer().getRefType();
                              boolean _tripleNotEquals_11 = (_refType_8 != null);
                              if (_tripleNotEquals_11) {
                                _builder.append("\t");
                                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                                ObSelectionStrategy _container_94 = mut.getContainer();
                                String _name_101 = ((SpecificObjectSelection) _container_94).getObjSel().getName();
                                _builder.append(_name_101, "\t");
                                _builder.append(" = hmObjects.get(\"");
                                ObSelectionStrategy _container_95 = mut.getContainer();
                                String _name_102 = ((SpecificObjectSelection) _container_95).getObjSel().getName();
                                _builder.append(_name_102, "\t");
                                _builder.append("\");");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("if (entry_");
                                ObSelectionStrategy _container_96 = mut.getContainer();
                                String _name_103 = ((SpecificObjectSelection) _container_96).getObjSel().getName();
                                _builder.append(_name_103, "\t");
                                _builder.append(" != null) {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resourcePackages = listEntry_");
                                ObSelectionStrategy _container_97 = mut.getContainer();
                                String _name_104 = ((SpecificObjectSelection) _container_97).getObjSel().getName();
                                _builder.append(_name_104, "\t\t");
                                _builder.append(".getValue().getValue();");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resources = new ArrayList<Resource>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resources.add(listEntry_");
                                ObSelectionStrategy _container_98 = mut.getContainer();
                                String _name_105 = ((SpecificObjectSelection) _container_98).getObjSel().getName();
                                _builder.append(_name_105, "\t\t");
                                _builder.append(".getValue().getKey());");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                                ObSelectionStrategy _container_99 = mut.getContainer();
                                String _name_106 = ((SpecificObjectSelection) _container_99).getObjSel().getName();
                                _builder.append(_name_106, "\t\t");
                                _builder.append(".getValue().getValue(), entry_");
                                ObSelectionStrategy _container_100 = mut.getContainer();
                                String _name_107 = ((SpecificObjectSelection) _container_100).getObjSel().getName();
                                _builder.append(_name_107, "\t\t");
                                _builder.append(".getValue().getKey(), \"");
                                String _name_108 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_108, "\t\t");
                                _builder.append("\", entry_");
                                ObSelectionStrategy _container_101 = mut.getContainer();
                                String _name_109 = ((SpecificObjectSelection) _container_101).getObjSel().getName();
                                _builder.append(_name_109, "\t\t");
                                _builder.append(".getKey());");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("} else {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                ObSelectionStrategy _container_102 = mut.getContainer();
                                String _name_110 = ((SpecificObjectSelection) _container_102).getObjSel().getName();
                                _builder.append(_name_110, "\t\t");
                                _builder.append(" = hmList.get(\"");
                                ObSelectionStrategy _container_103 = mut.getContainer();
                                String _name_111 = ((SpecificObjectSelection) _container_103).getObjSel().getName();
                                _builder.append(_name_111, "\t\t");
                                _builder.append("\");");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("if (listEntry_");
                                ObSelectionStrategy _container_104 = mut.getContainer();
                                String _name_112 = ((SpecificObjectSelection) _container_104).getObjSel().getName();
                                _builder.append(_name_112, "\t\t");
                                _builder.append(" != null) {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resourcePackages = listEntry_");
                                ObSelectionStrategy _container_105 = mut.getContainer();
                                String _name_113 = ((SpecificObjectSelection) _container_105).getObjSel().getName();
                                _builder.append(_name_113, "\t\t\t");
                                _builder.append(".get(0).getValue().getValue();");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resources = new ArrayList<Resource>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resources.add(listEntry_");
                                ObSelectionStrategy _container_106 = mut.getContainer();
                                String _name_114 = ((SpecificObjectSelection) _container_106).getObjSel().getName();
                                _builder.append(_name_114, "\t\t\t");
                                _builder.append(".get(0).getValue().getKey());");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                                ObSelectionStrategy _container_107 = mut.getContainer();
                                String _name_115 = ((SpecificObjectSelection) _container_107).getObjSel().getName();
                                _builder.append(_name_115, "\t\t\t");
                                _builder.append(") {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("EObject obj = ent.getKey();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("objs.add(obj);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(listEntry_");
                                ObSelectionStrategy _container_108 = mut.getContainer();
                                String _name_116 = ((SpecificObjectSelection) _container_108).getObjSel().getName();
                                _builder.append(_name_116, "\t\t\t");
                                _builder.append(".get(0).getValue().getValue(), listEntry_");
                                ObSelectionStrategy _container_109 = mut.getContainer();
                                String _name_117 = ((SpecificObjectSelection) _container_109).getObjSel().getName();
                                _builder.append(_name_117, "\t\t\t");
                                _builder.append(".get(0).getValue().getKey(), \"");
                                String _name_118 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_118, "\t\t\t");
                                _builder.append("\", listEntry_");
                                ObSelectionStrategy _container_110 = mut.getContainer();
                                String _name_119 = ((SpecificObjectSelection) _container_110).getObjSel().getName();
                                _builder.append(_name_119, "\t\t\t");
                                _builder.append(".get(0).getKey());");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("else {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("return mutations;");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                              } else {
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                _builder.newLine();
                              }
                            }
                          } else {
                            ObSelectionStrategy _container_111 = mut.getContainer();
                            if ((_container_111 instanceof SpecificClosureSelection)) {
                              _builder.append("\t");
                              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                              ObSelectionStrategy _container_112 = mut.getContainer();
                              String _name_120 = ((SpecificClosureSelection) _container_112).getObjSel().getName();
                              _builder.append(_name_120, "\t");
                              _builder.append(" = hmObjects.get(\"");
                              ObSelectionStrategy _container_113 = mut.getContainer();
                              String _name_121 = ((SpecificClosureSelection) _container_113).getObjSel().getName();
                              _builder.append(_name_121, "\t");
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("if (entry_");
                              ObSelectionStrategy _container_114 = mut.getContainer();
                              String _name_122 = ((SpecificClosureSelection) _container_114).getObjSel().getName();
                              _builder.append(_name_122, "\t");
                              _builder.append(" != null) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resourcePackages = entry_");
                              ObSelectionStrategy _container_115 = mut.getContainer();
                              String _name_123 = ((SpecificClosureSelection) _container_115).getObjSel().getName();
                              _builder.append(_name_123, "\t\t");
                              _builder.append(".getValue().getValue();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources = new ArrayList<Resource>();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources.add(entry_");
                              ObSelectionStrategy _container_116 = mut.getContainer();
                              String _name_124 = ((SpecificClosureSelection) _container_116).getObjSel().getName();
                              _builder.append(_name_124, "\t\t");
                              _builder.append(".getValue().getKey());");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                              ObSelectionStrategy _container_117 = mut.getContainer();
                              String _name_125 = ((SpecificClosureSelection) _container_117).getObjSel().getName();
                              _builder.append(_name_125, "\t\t");
                              _builder.append(".getValue().getValue(), entry_");
                              ObSelectionStrategy _container_118 = mut.getContainer();
                              String _name_126 = ((SpecificClosureSelection) _container_118).getObjSel().getName();
                              _builder.append(_name_126, "\t\t");
                              _builder.append(".getValue().getKey(), entry_");
                              ObSelectionStrategy _container_119 = mut.getContainer();
                              String _name_127 = ((SpecificClosureSelection) _container_119).getObjSel().getName();
                              _builder.append(_name_127, "\t\t");
                              _builder.append(".getKey(), \"");
                              ObSelectionStrategy _container_120 = mut.getContainer();
                              String _name_128 = ((SpecificClosureSelection) _container_120).getRefType().getName();
                              _builder.append(_name_128, "\t\t");
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("} else {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                              ObSelectionStrategy _container_121 = mut.getContainer();
                              String _name_129 = ((SpecificClosureSelection) _container_121).getObjSel().getName();
                              _builder.append(_name_129, "\t\t");
                              _builder.append(" = hmList.get(\"");
                              ObSelectionStrategy _container_122 = mut.getContainer();
                              String _name_130 = ((SpecificObjectSelection) _container_122).getObjSel().getName();
                              _builder.append(_name_130, "\t\t");
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("if (listEntry_");
                              ObSelectionStrategy _container_123 = mut.getContainer();
                              String _name_131 = ((SpecificClosureSelection) _container_123).getObjSel().getName();
                              _builder.append(_name_131, "\t\t");
                              _builder.append(" != null) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("resourcePackages = listEntry_");
                              ObSelectionStrategy _container_124 = mut.getContainer();
                              String _name_132 = ((SpecificClosureSelection) _container_124).getObjSel().getName();
                              _builder.append(_name_132, "\t\t\t");
                              _builder.append(".get(0).getValue().getValue();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("resources = new ArrayList<Resource>();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("resources.add(listEntry_");
                              ObSelectionStrategy _container_125 = mut.getContainer();
                              String _name_133 = ((SpecificClosureSelection) _container_125).getObjSel().getName();
                              _builder.append(_name_133, "\t\t\t");
                              _builder.append(".get(0).getValue().getKey());");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                              ObSelectionStrategy _container_126 = mut.getContainer();
                              String _name_134 = ((SpecificClosureSelection) _container_126).getObjSel().getName();
                              _builder.append(_name_134, "\t\t\t");
                              _builder.append(") {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t\t\t");
                              _builder.append("EObject obj = ent.getKey();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t\t");
                              _builder.append("objs.add(obj);");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("containerSelection = new SpecificObjectSelection(listEntry_");
                              ObSelectionStrategy _container_127 = mut.getContainer();
                              String _name_135 = ((SpecificClosureSelection) _container_127).getObjSel().getName();
                              _builder.append(_name_135, "\t\t\t");
                              _builder.append(".get(0).getValue().getValue(), listEntry_");
                              ObSelectionStrategy _container_128 = mut.getContainer();
                              String _name_136 = ((SpecificClosureSelection) _container_128).getObjSel().getName();
                              _builder.append(_name_136, "\t\t\t");
                              _builder.append(".get(0).getValue().getKey(), objs);");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("else {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("return mutations;");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              {
                                EReference _refType_9 = mut.getContainer().getRefType();
                                boolean _tripleNotEquals_12 = (_refType_9 != null);
                                if (_tripleNotEquals_12) {
                                  _builder.append("\t");
                                  _builder.append("if (entry_");
                                  ObSelectionStrategy _container_129 = mut.getContainer();
                                  String _name_137 = ((SpecificClosureSelection) _container_129).getObjSel().getName();
                                  _builder.append(_name_137, "\t");
                                  _builder.append(" != null) {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resourcePackages = entry_");
                                  ObSelectionStrategy _container_130 = mut.getContainer();
                                  String _name_138 = ((SpecificClosureSelection) _container_130).getObjSel().getName();
                                  _builder.append(_name_138, "\t\t");
                                  _builder.append(".getValue().getValue();");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resources = new ArrayList<Resource>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resources.add(entry_");
                                  ObSelectionStrategy _container_131 = mut.getContainer();
                                  String _name_139 = ((SpecificClosureSelection) _container_131).getObjSel().getName();
                                  _builder.append(_name_139, "\t\t");
                                  _builder.append(".getValue().getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                                  ObSelectionStrategy _container_132 = mut.getContainer();
                                  String _name_140 = ((SpecificClosureSelection) _container_132).getObjSel().getName();
                                  _builder.append(_name_140, "\t\t");
                                  _builder.append(".getValue().getValue(), entry_");
                                  ObSelectionStrategy _container_133 = mut.getContainer();
                                  String _name_141 = ((SpecificClosureSelection) _container_133).getObjSel().getName();
                                  _builder.append(_name_141, "\t\t");
                                  _builder.append(".getValue().getKey(), \"");
                                  String _name_142 = mut.getContainer().getRefType().getName();
                                  _builder.append(_name_142, "\t\t");
                                  _builder.append("\", entry_");
                                  ObSelectionStrategy _container_134 = mut.getContainer();
                                  String _name_143 = ((SpecificClosureSelection) _container_134).getObjSel().getName();
                                  _builder.append(_name_143, "\t\t");
                                  _builder.append(".getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("} else {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                  ObSelectionStrategy _container_135 = mut.getContainer();
                                  String _name_144 = ((SpecificClosureSelection) _container_135).getObjSel().getName();
                                  _builder.append(_name_144, "\t\t");
                                  _builder.append(" = hmList.get(\"");
                                  ObSelectionStrategy _container_136 = mut.getContainer();
                                  String _name_145 = ((SpecificClosureSelection) _container_136).getObjSel().getName();
                                  _builder.append(_name_145, "\t\t");
                                  _builder.append("\");");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("if (listEntry_");
                                  ObSelectionStrategy _container_137 = mut.getContainer();
                                  String _name_146 = ((SpecificClosureSelection) _container_137).getObjSel().getName();
                                  _builder.append(_name_146, "\t\t");
                                  _builder.append(" != null) {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resourcePackages = listEntry_");
                                  ObSelectionStrategy _container_138 = mut.getContainer();
                                  String _name_147 = ((SpecificClosureSelection) _container_138).getObjSel().getName();
                                  _builder.append(_name_147, "\t\t\t");
                                  _builder.append(".get(0).getValue().getValue();");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resources = new ArrayList<Resource>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resources.add(listEntry_");
                                  ObSelectionStrategy _container_139 = mut.getContainer();
                                  String _name_148 = ((SpecificClosureSelection) _container_139).getObjSel().getName();
                                  _builder.append(_name_148, "\t\t\t");
                                  _builder.append(".get(0).getValue().getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                                  ObSelectionStrategy _container_140 = mut.getContainer();
                                  String _name_149 = ((SpecificClosureSelection) _container_140).getObjSel().getName();
                                  _builder.append(_name_149, "\t\t\t");
                                  _builder.append(") {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("EObject obj = ent.getKey();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("objs.add(obj);");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("referenceSelection = new SpecificReferenceSelection(listEntry_");
                                  ObSelectionStrategy _container_141 = mut.getContainer();
                                  String _name_150 = ((SpecificClosureSelection) _container_141).getObjSel().getName();
                                  _builder.append(_name_150, "\t\t\t");
                                  _builder.append(".get(0).getValue().getValue(), listEntry_");
                                  ObSelectionStrategy _container_142 = mut.getContainer();
                                  String _name_151 = ((SpecificObjectSelection) _container_142).getObjSel().getName();
                                  _builder.append(_name_151, "\t\t\t");
                                  _builder.append(".get(0).getValue().getKey(), \"");
                                  String _name_152 = mut.getContainer().getRefType().getName();
                                  _builder.append(_name_152, "\t\t\t");
                                  _builder.append("\", listEntry_");
                                  ObSelectionStrategy _container_143 = mut.getContainer();
                                  String _name_153 = ((SpecificClosureSelection) _container_143).getObjSel().getName();
                                  _builder.append(_name_153, "\t\t\t");
                                  _builder.append(".get(0).getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("else {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("return mutations;");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                } else {
                                  _builder.append("\t");
                                  _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                  _builder.newLine();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      if ((rts == true)) {
                        _builder.append("\t");
                        _builder.append("rts = new RandomTypeSelection(resourcePackages, resources, \"");
                        String _name_154 = mut.getObject().getType().getName();
                        _builder.append(_name_154, "\t");
                        _builder.append("\", referenceSelection, containerSelection);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                        String _name_155 = mut.getObject().getType().getName();
                        _builder.append(_name_155, "\t");
                        _builder.append("\", referenceSelection, containerSelection);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                        _builder.append("\t");
                        _builder.append("EObject object = rts.getObject();");
                        _builder.newLine();
                      }
                    }
                  }
                }
                {
                  if (((mut.getObject().getExpression() == null) && (mut.getContainer() == null))) {
                    _builder.append("\t");
                    _builder.append("EObject object = rts.getObject();");
                    _builder.newLine();
                  }
                }
                {
                  EReference _refType_10 = mut.getObject().getRefType();
                  boolean _tripleNotEquals_13 = (_refType_10 != null);
                  if (_tripleNotEquals_13) {
                    _builder.append("\t");
                    _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                    String _name_156 = mut.getObject().getRefType().getName();
                    _builder.append(_name_156, "\t");
                    _builder.append("\", object);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
                    _builder.newLine();
                  }
                }
              }
            }
          }
        }
        _builder.append("\t");
        _builder.newLine();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleNotEquals_14 = (_expression != null);
          if (_tripleNotEquals_14) {
            {
              ObSelectionStrategy _container_144 = mut.getContainer();
              boolean _tripleEquals_3 = (_container_144 == null);
              if (_tripleEquals_3) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList = new ArrayList<Integer>();
                List<Integer> _expressionList = this.expressionList = _arrayList;
                _builder.append(_expressionList, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add_2 = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get = this.expressionList.get(0);
                _builder.append(_get, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Object _method = this.method(mut.getObject().getExpression(), 0);
                _builder.append(_method, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                Integer _get_1 = this.expressionList.get(0);
                _builder.append(_get_1, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_8 = mut.getObject();
                  if ((_object_8 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("EObject object = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (selectedObjects.size() > 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  ObSelectionStrategy _object_9 = mut.getObject();
                  if ((_object_9 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("objects = selectedObjects;");
                    _builder.newLine();
                  }
                }
              } else {
                Expression _expression_1 = mut.getContainer().getExpression();
                boolean _tripleEquals_4 = (_expression_1 == null);
                if (_tripleEquals_4) {
                  _builder.append("\t");
                  _builder.append("List<EObject> objects = rts.getObjects();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LIST: ");
                  ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
                  List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
                  _builder.append(_expressionList_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  _builder.append(this.nExpression = 0, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  boolean _add_3 = this.expressionList.add(Integer.valueOf(0));
                  _builder.append(_add_3, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("Expression exp");
                  Integer _get_2 = this.expressionList.get(0);
                  _builder.append(_get_2, "\t");
                  _builder.append(" = new Expression();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  Object _method_1 = this.method(mut.getObject().getExpression(), 0);
                  _builder.append(_method_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                  Integer _get_3 = this.expressionList.get(0);
                  _builder.append(_get_3, "\t");
                  _builder.append(");");
                  _builder.newLineIfNotEmpty();
                  {
                    ObSelectionStrategy _object_10 = mut.getObject();
                    if ((_object_10 instanceof RandomTypeSelection)) {
                      _builder.append("EObject object = null;");
                      _builder.newLine();
                      _builder.append("if (selectedObjects.size() > 0) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                  {
                    ObSelectionStrategy _object_11 = mut.getObject();
                    if ((_object_11 instanceof CompleteTypeSelection)) {
                      _builder.append("\t");
                      _builder.append("objects = selectedObjects;");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
        }
        {
          Expression _expression_2 = mut.getObject().getExpression();
          boolean _tripleEquals_5 = (_expression_2 == null);
          if (_tripleEquals_5) {
            {
              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() != null))) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList_2 = new ArrayList<Integer>();
                List<Integer> _expressionList_2 = this.expressionList = _arrayList_2;
                _builder.append(_expressionList_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add_4 = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add_4, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get_4 = this.expressionList.get(0);
                _builder.append(_get_4, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Object _method_2 = this.method(mut.getContainer().getExpression(), 0);
                _builder.append(_method_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                Integer _get_5 = this.expressionList.get(0);
                _builder.append(_get_5, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_12 = mut.getObject();
                  if ((_object_12 instanceof RandomTypeSelection)) {
                    _builder.append("   \t\t\t\t");
                    _builder.append("EObject object = null;");
                    _builder.newLine();
                    _builder.append("if (selectedObjects.size() > 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  ObSelectionStrategy _object_13 = mut.getObject();
                  if ((_object_13 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("objects = selectedObjects;");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() == null))) {
                {
                  ObSelectionStrategy _object_14 = mut.getObject();
                  if ((_object_14 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("List<EObject> objects = rts.getObjects();");
                    _builder.newLine();
                  }
                }
              }
            }
          }
        }
        {
          if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof SpecificObjectSelection))) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy objectSelection = null; ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (object != null) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(resourcePackages, resources, object);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      } else {
        ObSelectionStrategy _object_15 = mut.getObject();
        if ((_object_15 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
          ObSelectionStrategy _object_16 = mut.getObject();
          String _name_157 = ((CompleteTypeSelection) _object_16).getType().getName();
          _builder.append(_name_157, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("EObject object = rts.getObject();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
          _builder.newLine();
        } else {
          ObSelectionStrategy _object_17 = mut.getObject();
          if ((_object_17 instanceof SpecificObjectSelection)) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_145 = mut.getContainer();
            String _name_158 = ((SpecificObjectSelection) _container_145).getObjSel().getName();
            _builder.append(_name_158, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_146 = mut.getContainer();
            String _name_159 = ((SpecificObjectSelection) _container_146).getObjSel().getName();
            _builder.append(_name_159, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _container_147 = mut.getContainer();
            String _name_160 = ((SpecificObjectSelection) _container_147).getObjSel().getName();
            _builder.append(_name_160, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("resourcePackages = entry_");
            ObSelectionStrategy _container_148 = mut.getContainer();
            String _name_161 = ((SpecificObjectSelection) _container_148).getObjSel().getName();
            _builder.append(_name_161, "\t\t");
            _builder.append(".getValue().getValue();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("resources = new ArrayList<Resource>();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("resources.add(entry_");
            ObSelectionStrategy _container_149 = mut.getContainer();
            String _name_162 = ((SpecificObjectSelection) _container_149).getObjSel().getName();
            _builder.append(_name_162, "\t\t");
            _builder.append(".getValue().getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _container_150 = mut.getContainer();
            String _name_163 = ((SpecificObjectSelection) _container_150).getObjSel().getName();
            _builder.append(_name_163, "\t\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_151 = mut.getContainer();
            String _name_164 = ((SpecificObjectSelection) _container_151).getObjSel().getName();
            _builder.append(_name_164, "\t\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _container_152 = mut.getContainer();
            String _name_165 = ((SpecificObjectSelection) _container_152).getObjSel().getName();
            _builder.append(_name_165, "\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _object_18 = mut.getObject();
            if ((_object_18 instanceof SpecificClosureSelection)) {
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_153 = mut.getContainer();
              String _name_166 = ((SpecificClosureSelection) _container_153).getObjSel().getName();
              _builder.append(_name_166, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_154 = mut.getContainer();
              String _name_167 = ((SpecificClosureSelection) _container_154).getObjSel().getName();
              _builder.append(_name_167, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _container_155 = mut.getContainer();
              String _name_168 = ((SpecificClosureSelection) _container_155).getObjSel().getName();
              _builder.append(_name_168, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("resourcePackages = entry_");
              ObSelectionStrategy _container_156 = mut.getContainer();
              String _name_169 = ((SpecificClosureSelection) _container_156).getObjSel().getName();
              _builder.append(_name_169, "\t\t");
              _builder.append(".getValue().getValue();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("resources = new ArrayList<Resource>();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("resources.add(entry_");
              ObSelectionStrategy _container_157 = mut.getContainer();
              String _name_170 = ((SpecificClosureSelection) _container_157).getObjSel().getName();
              _builder.append(_name_170, "\t\t");
              _builder.append(".getValue().getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificClosureSelection(entry_");
              ObSelectionStrategy _container_158 = mut.getContainer();
              String _name_171 = ((SpecificClosureSelection) _container_158).getObjSel().getName();
              _builder.append(_name_171, "\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_159 = mut.getContainer();
              String _name_172 = ((SpecificClosureSelection) _container_159).getObjSel().getName();
              _builder.append(_name_172, "\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _container_160 = mut.getContainer();
              String _name_173 = ((SpecificClosureSelection) _container_160).getObjSel().getName();
              _builder.append(_name_173, "\t\t");
              _builder.append(".getKey(), \"");
              ObSelectionStrategy _object_19 = mut.getObject();
              String _name_174 = ((SpecificClosureSelection) _object_19).getRefType().getName();
              _builder.append(_name_174, "\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("List<EObject> objects = ModelManager.getParentObjects(packages, model, \"");
              String _name_175 = mut.getType().getName();
              _builder.append(_name_175, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("EObject container = containers.get(ModelManager.getRandomIndex(objects));");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
              _builder.newLine();
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _object_20 = mut.getObject();
      if ((_object_20 instanceof CompleteTypeSelection)) {
        _builder.append("\t\t");
        _builder.append("for (EObject obj : objects) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("SelectObjectMutator mut = new SelectObjectMutator(resources, resourcePackages, referenceSelection, containerSelection, obj);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("   \t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus = this.nMutation++;
        _builder.append(_plusPlus, "\t\t   \t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_1 = this.nRegistryMutation++;
        _builder.append(_plusPlus_1, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("   \t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("   \t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t   \t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      } else {
        _builder.append("\t\t");
        _builder.append("SelectObjectMutator mut = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (objectSelection != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mut = new SelectObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), referenceSelection, containerSelection, objectSelection);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_2 = this.nMutation++;
        _builder.append(_plusPlus_2, "\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_3 = this.nRegistryMutation++;
        _builder.append(_plusPlus_3, "   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("//END SELECT OBJECT ");
    _builder.append(this.methodName, "\t\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence selectObjectMutatorExhaustive(final SelectObjectMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("//SELECT OBJECT ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("SpecificReferenceSelection referenceSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("List<EPackage> resourcePackages = packages;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("List<Resource> resources = new ArrayList<Resource>();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("resources.add(model);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//");
    boolean rts = false;
    _builder.newLineIfNotEmpty();
    {
      if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
        {
          String _resource = mut.getObject().getResource();
          boolean _tripleEquals = (_resource == null);
          if (_tripleEquals) {
            {
              ObSelectionStrategy _container = mut.getContainer();
              boolean _tripleEquals_1 = (_container == null);
              if (_tripleEquals_1) {
                {
                  ObSelectionStrategy _object = mut.getObject();
                  if ((_object instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _object_1 = mut.getObject();
                    String _name = ((RandomTypeSelection) _object_1).getType().getName();
                    _builder.append(_name, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_2 = mut.getObject();
                  if ((_object_2 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _object_3 = mut.getObject();
                    String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
                    _builder.append(_name_1, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              } else {
                {
                  ObSelectionStrategy _container_1 = mut.getContainer();
                  if ((_container_1 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("//");
                    _builder.append(rts = true, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _container_2 = mut.getContainer();
                    String _name_2 = ((RandomTypeSelection) _container_2).getType().getName();
                    _builder.append(_name_2, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("EObject container = rts.getObject();");
                    _builder.newLine();
                    {
                      EReference _refType = mut.getContainer().getRefType();
                      boolean _tripleNotEquals = (_refType != null);
                      if (_tripleNotEquals) {
                        _builder.append("\t");
                        _builder.append("//");
                        String refName = mut.getContainer().getRefType().getName();
                        _builder.newLineIfNotEmpty();
                        {
                          EReference _refRefType = mut.getContainer().getRefRefType();
                          boolean _tripleNotEquals_1 = (_refRefType != null);
                          if (_tripleNotEquals_1) {
                            _builder.append("\t");
                            _builder.append("container = ModelManager.getReference(\"");
                            String _name_3 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_3, "\t");
                            _builder.append("\", container);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("//");
                            _builder.append(refName = mut.getContainer().getRefRefType().getName(), "\t");
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefRefType = mut.getContainer().getRefRefRefType();
                              boolean _tripleNotEquals_2 = (_refRefRefType != null);
                              if (_tripleNotEquals_2) {
                                _builder.append("\t");
                                _builder.append("container = ModelManager.getReference(\"");
                                String _name_4 = mut.getContainer().getRefRefType().getName();
                                _builder.append(_name_4, "\t");
                                _builder.append("\", container);");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//");
                                _builder.append(refName = mut.getContainer().getRefRefRefType().getName(), "\t");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                          }
                        }
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                        _builder.append(refName, "\t");
                        _builder.append("\", containerSelection);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  } else {
                    ObSelectionStrategy _container_3 = mut.getContainer();
                    if ((_container_3 instanceof CompleteTypeSelection)) {
                      _builder.append("\t");
                      _builder.append("//");
                      _builder.append(rts = true, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                      ObSelectionStrategy _container_4 = mut.getContainer();
                      String _name_5 = ((CompleteTypeSelection) _container_4).getType().getName();
                      _builder.append(_name_5, "\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("EObject container = rts.getObject();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                      _builder.newLine();
                      {
                        EReference _refType_1 = mut.getContainer().getRefType();
                        boolean _tripleNotEquals_3 = (_refType_1 != null);
                        if (_tripleNotEquals_3) {
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                          String _name_6 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_6, "\t");
                          _builder.append("\", containerSelection);");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                          _builder.newLine();
                        }
                      }
                    } else {
                      ObSelectionStrategy _container_5 = mut.getContainer();
                      if ((_container_5 instanceof SpecificObjectSelection)) {
                        _builder.append("\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _container_6 = mut.getContainer();
                        String _name_7 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
                        _builder.append(_name_7, "\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _container_7 = mut.getContainer();
                        String _name_8 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
                        _builder.append(_name_8, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_8 = mut.getContainer();
                        String _name_9 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
                        _builder.append(_name_9, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                        ObSelectionStrategy _container_9 = mut.getContainer();
                        String _name_10 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
                        _builder.append(_name_10, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("recovered = entry_");
                        ObSelectionStrategy _container_10 = mut.getContainer();
                        String _name_11 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
                        _builder.append(_name_11, "\t\t\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resourcePackages = packages;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources = new ArrayList<Resource>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("resources.add(model);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, model, recovered);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                        ObSelectionStrategy _container_11 = mut.getContainer();
                        String _name_12 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
                        _builder.append(_name_12, "\t\t");
                        _builder.append(" = hmList.get(\"");
                        ObSelectionStrategy _container_12 = mut.getContainer();
                        String _name_13 = ((SpecificObjectSelection) _container_12).getObjSel().getName();
                        _builder.append(_name_13, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("if (listEntry_");
                        ObSelectionStrategy _container_13 = mut.getContainer();
                        String _name_14 = ((SpecificObjectSelection) _container_13).getObjSel().getName();
                        _builder.append(_name_14, "\t\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resourcePackages = packages;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resources = new ArrayList<Resource>();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("resources.add(model);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                        ObSelectionStrategy _container_14 = mut.getContainer();
                        String _name_15 = ((SpecificObjectSelection) _container_14).getObjSel().getName();
                        _builder.append(_name_15, "\t\t\t");
                        _builder.append(") {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("if (obj == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t\t\t");
                        _builder.append("obj = ent.getKey();");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t\t");
                        _builder.append("objs.add(obj);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, model, objs);");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("return numMutantsGenerated;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        {
                          EReference _refType_2 = mut.getContainer().getRefType();
                          boolean _tripleNotEquals_4 = (_refType_2 != null);
                          if (_tripleNotEquals_4) {
                            _builder.append("\t");
                            _builder.append("if (entry_");
                            ObSelectionStrategy _container_15 = mut.getContainer();
                            String _name_16 = ((SpecificObjectSelection) _container_15).getObjSel().getName();
                            _builder.append(_name_16, "\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("Object valueRecovered = null;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("EObject obRecovered = ModelManager.getObject(model, entry_");
                            ObSelectionStrategy _container_16 = mut.getContainer();
                            String _name_17 = ((SpecificObjectSelection) _container_16).getObjSel().getName();
                            _builder.append(_name_17, "\t\t");
                            _builder.append(".getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("//");
                            String refName_1 = mut.getContainer().getRefType().getName();
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefType_1 = mut.getContainer().getRefRefType();
                              boolean _tripleNotEquals_5 = (_refRefType_1 != null);
                              if (_tripleNotEquals_5) {
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                String _name_18 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_18, "\t\t");
                                _builder.append("\", obRecovered);");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("//");
                                _builder.append(refName_1 = mut.getContainer().getRefRefType().getName(), "\t\t");
                                _builder.newLineIfNotEmpty();
                                {
                                  EReference _refRefRefType_1 = mut.getContainer().getRefRefRefType();
                                  boolean _tripleNotEquals_6 = (_refRefRefType_1 != null);
                                  if (_tripleNotEquals_6) {
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                    String _name_19 = mut.getContainer().getRefRefType().getName();
                                    _builder.append(_name_19, "\t\t");
                                    _builder.append("\", obRecovered);");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("//");
                                    _builder.append(refName_1 = mut.getContainer().getRefRefRefType().getName(), "\t\t");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              }
                            }
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("if (valueRecovered == null) {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("obRecovered = entry_");
                            ObSelectionStrategy _container_17 = mut.getContainer();
                            String _name_20 = ((SpecificObjectSelection) _container_17).getObjSel().getName();
                            _builder.append(_name_20, "\t\t\t");
                            _builder.append(".getKey();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("//");
                            _builder.append(refName_1 = mut.getContainer().getRefType().getName(), "\t\t\t");
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefType_2 = mut.getContainer().getRefRefType();
                              boolean _tripleNotEquals_7 = (_refRefType_2 != null);
                              if (_tripleNotEquals_7) {
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                String _name_21 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_21, "\t\t\t");
                                _builder.append("\", obRecovered);");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("//");
                                _builder.append(refName_1 = mut.getContainer().getRefRefType().getName(), "\t\t\t");
                                _builder.newLineIfNotEmpty();
                                {
                                  EReference _refRefRefType_2 = mut.getContainer().getRefRefRefType();
                                  boolean _tripleNotEquals_8 = (_refRefRefType_2 != null);
                                  if (_tripleNotEquals_8) {
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                    String _name_22 = mut.getContainer().getRefRefType().getName();
                                    _builder.append(_name_22, "\t\t\t");
                                    _builder.append("\", obRecovered);");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("//");
                                    _builder.append(refName_1 = mut.getContainer().getRefRefRefType().getName(), "\t\t\t");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              }
                            }
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("EObject recovered = valueRecovered instanceof List<?> ? ((List<EObject>) valueRecovered).get(0) : (EObject) valueRecovered;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, model, recovered);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resourcePackages = packages;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resources = new ArrayList<Resource>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("resources.add(model);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, model, \"");
                            _builder.append(refName_1, "\t\t");
                            _builder.append("\", recovered);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("} else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                            ObSelectionStrategy _container_18 = mut.getContainer();
                            String _name_23 = ((SpecificObjectSelection) _container_18).getObjSel().getName();
                            _builder.append(_name_23, "\t\t");
                            _builder.append(" = hmList.get(\"");
                            ObSelectionStrategy _container_19 = mut.getContainer();
                            String _name_24 = ((SpecificObjectSelection) _container_19).getObjSel().getName();
                            _builder.append(_name_24, "\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("if (listEntry_");
                            ObSelectionStrategy _container_20 = mut.getContainer();
                            String _name_25 = ((SpecificObjectSelection) _container_20).getObjSel().getName();
                            _builder.append(_name_25, "\t\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resourcePackages = packages;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources = new ArrayList<Resource>();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("resources.add(model);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("EObject obRecovered = ModelManager.getObject(model, listEntry_");
                            ObSelectionStrategy _container_21 = mut.getContainer();
                            String _name_26 = ((SpecificObjectSelection) _container_21).getObjSel().getName();
                            _builder.append(_name_26, "\t\t\t");
                            _builder.append(".get(0).getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("if (obRecovered == null) {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t\t");
                            _builder.append("obRecovered = listEntry_");
                            ObSelectionStrategy _container_22 = mut.getContainer();
                            String _name_27 = ((SpecificObjectSelection) _container_22).getObjSel().getName();
                            _builder.append(_name_27, "\t\t\t\t");
                            _builder.append(".get(0).getKey();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("Object valueRecovered = obRecovered;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("//");
                            _builder.append(refName_1 = mut.getContainer().getRefType().getName(), "\t\t\t");
                            _builder.newLineIfNotEmpty();
                            {
                              EReference _refRefType_3 = mut.getContainer().getRefRefType();
                              boolean _tripleNotEquals_9 = (_refRefType_3 != null);
                              if (_tripleNotEquals_9) {
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                String _name_28 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_28, "\t\t\t");
                                _builder.append("\", obRecovered);");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("//");
                                _builder.append(refName_1 = mut.getContainer().getRefRefType().getName(), "\t\t\t");
                                _builder.newLineIfNotEmpty();
                                {
                                  EReference _refRefRefType_3 = mut.getContainer().getRefRefRefType();
                                  boolean _tripleNotEquals_10 = (_refRefRefType_3 != null);
                                  if (_tripleNotEquals_10) {
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("valueRecovered = ModelManager.getReferenced(\"");
                                    String _name_29 = mut.getContainer().getRefRefType().getName();
                                    _builder.append(_name_29, "\t\t\t");
                                    _builder.append("\", obRecovered);");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("//");
                                    _builder.append(refName_1 = mut.getContainer().getRefRefRefType().getName(), "\t\t\t");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              }
                            }
                            _builder.append("\t");
                            _builder.append("\t    ");
                            _builder.append("EObject recovered = valueRecovered instanceof List<?> ? ((List<EObject>) valueRecovered).get(0) : (EObject) valueRecovered;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, model, recovered);");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, model, \"");
                            _builder.append(refName_1, "\t\t\t");
                            _builder.append("\", recovered);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t\t");
                            _builder.append("return numMutantsGenerated;");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                            _builder.newLine();
                          }
                        }
                      } else {
                        ObSelectionStrategy _container_23 = mut.getContainer();
                        if ((_container_23 instanceof SpecificClosureSelection)) {
                          _builder.append("\t");
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                          ObSelectionStrategy _container_24 = mut.getContainer();
                          String _name_30 = ((SpecificClosureSelection) _container_24).getObjSel().getName();
                          _builder.append(_name_30, "\t");
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _container_25 = mut.getContainer();
                          String _name_31 = ((SpecificClosureSelection) _container_25).getObjSel().getName();
                          _builder.append(_name_31, "\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("if (entry_");
                          ObSelectionStrategy _container_26 = mut.getContainer();
                          String _name_32 = ((SpecificClosureSelection) _container_26).getObjSel().getName();
                          _builder.append(_name_32, "\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                          ObSelectionStrategy _container_27 = mut.getContainer();
                          String _name_33 = ((SpecificClosureSelection) _container_27).getObjSel().getName();
                          _builder.append(_name_33, "\t\t");
                          _builder.append(".getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("if (recovered == null) {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("recovered = entry_");
                          ObSelectionStrategy _container_28 = mut.getContainer();
                          String _name_34 = ((SpecificClosureSelection) _container_28).getObjSel().getName();
                          _builder.append(_name_34, "\t\t\t");
                          _builder.append(".getKey();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resourcePackages = packages;");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resources = new ArrayList<Resource>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("resources.add(model);");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("containerSelection = new SpecificClosureSelection(resourcePackages, model, recovered, \"");
                          ObSelectionStrategy _container_29 = mut.getContainer();
                          String _name_35 = ((SpecificClosureSelection) _container_29).getRefType().getName();
                          _builder.append(_name_35, "\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("} else {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                          ObSelectionStrategy _container_30 = mut.getContainer();
                          String _name_36 = ((SpecificClosureSelection) _container_30).getObjSel().getName();
                          _builder.append(_name_36, "\t\t");
                          _builder.append(" = hmList.get(\"");
                          ObSelectionStrategy _container_31 = mut.getContainer();
                          String _name_37 = ((SpecificClosureSelection) _container_31).getObjSel().getName();
                          _builder.append(_name_37, "\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("if (listEntry_");
                          ObSelectionStrategy _container_32 = mut.getContainer();
                          String _name_38 = ((SpecificClosureSelection) _container_32).getObjSel().getName();
                          _builder.append(_name_38, "\t\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resourcePackages = packages;");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resources = new ArrayList<Resource>();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("resources.add(model);");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                          ObSelectionStrategy _container_33 = mut.getContainer();
                          String _name_39 = ((SpecificClosureSelection) _container_33).getObjSel().getName();
                          _builder.append(_name_39, "\t\t\t");
                          _builder.append(") {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("EObject obj = ModelManager.getObject(model, entry.getKey());");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("if (obj == null) {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t\t\t");
                          _builder.append("obj = ent.getKey();");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("objs.add(obj);");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, model, \"");
                          String _name_40 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_40, "\t\t\t");
                          _builder.append("\", recovered);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("else {");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t\t");
                          _builder.append("return numMutantsGenerated;");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          {
                            EReference _refType_3 = mut.getContainer().getRefType();
                            boolean _tripleNotEquals_11 = (_refType_3 != null);
                            if (_tripleNotEquals_11) {
                              _builder.append("\t");
                              _builder.append("if (entry_");
                              ObSelectionStrategy _container_34 = mut.getContainer();
                              String _name_41 = ((SpecificClosureSelection) _container_34).getObjSel().getName();
                              _builder.append(_name_41, "\t");
                              _builder.append(" != null) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                              ObSelectionStrategy _container_35 = mut.getContainer();
                              String _name_42 = ((SpecificClosureSelection) _container_35).getObjSel().getName();
                              _builder.append(_name_42, "\t\t");
                              _builder.append(".getKey());");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("if (recovered == null) {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t\t");
                              _builder.append("recovered = entry_");
                              ObSelectionStrategy _container_36 = mut.getContainer();
                              String _name_43 = ((SpecificClosureSelection) _container_36).getObjSel().getName();
                              _builder.append(_name_43, "\t\t\t");
                              _builder.append(".getKey();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resourcePackages = packages;");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources = new ArrayList<Resource>();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("resources.add(model);");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, model, \"");
                              String _name_44 = mut.getContainer().getRefType().getName();
                              _builder.append(_name_44, "\t\t");
                              _builder.append("\", recovered);");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("} else {");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("\t");
                              _builder.append("return numMutantsGenerated;");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("}");
                              _builder.newLine();
                            } else {
                              _builder.append("\t");
                              _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                              _builder.newLine();
                            }
                          }
                        }
                      }
                    }
                  }
                }
                {
                  if ((rts == true)) {
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("rts = new RandomTypeSelection(packages, model, \"");
                    String _name_45 = mut.getObject().getType().getName();
                    _builder.append(_name_45, "\t\t");
                    _builder.append("\", referenceSelection, containerSelection);");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
                    String _name_46 = mut.getObject().getType().getName();
                    _builder.append(_name_46, "\t\t");
                    _builder.append("\", referenceSelection, containerSelection);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("List<EObject> objects = rts.getObjects();");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              if (((mut.getObject().getExpression() == null) && (mut.getContainer() == null))) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
              }
            }
            {
              Expression _expression = mut.getObject().getExpression();
              boolean _tripleNotEquals_12 = (_expression != null);
              if (_tripleNotEquals_12) {
                {
                  ObSelectionStrategy _container_37 = mut.getContainer();
                  boolean _tripleEquals_2 = (_container_37 == null);
                  if (_tripleEquals_2) {
                    _builder.append("\t");
                    _builder.append("List<EObject> objects = rts.getObjects();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LIST: ");
                    ArrayList<Integer> _arrayList = new ArrayList<Integer>();
                    List<Integer> _expressionList = this.expressionList = _arrayList;
                    _builder.append(_expressionList, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    _builder.append(this.nExpression = 0, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    boolean _add = this.expressionList.add(Integer.valueOf(0));
                    _builder.append(_add, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("Expression exp");
                    Integer _get = this.expressionList.get(0);
                    _builder.append(_get, "\t");
                    _builder.append(" = new Expression();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    Object _method = this.method(mut.getObject().getExpression(), 0);
                    _builder.append(_method, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("objects = evaluate(objects, exp");
                    Integer _get_1 = this.expressionList.get(0);
                    _builder.append(_get_1, "\t");
                    _builder.append(");");
                    _builder.newLineIfNotEmpty();
                  } else {
                    Expression _expression_1 = mut.getContainer().getExpression();
                    boolean _tripleEquals_3 = (_expression_1 == null);
                    if (_tripleEquals_3) {
                      _builder.append("\t");
                      _builder.append("List<EObject> objects = rts.getObjects();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("//EXPRESSION LIST: ");
                      ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
                      List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
                      _builder.append(_expressionList_1, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("//EXPRESSION LEVEL: ");
                      _builder.append(this.nExpression = 0, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("//EXPRESSION LEVEL: ");
                      boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
                      _builder.append(_add_1, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("Expression exp");
                      Integer _get_2 = this.expressionList.get(0);
                      _builder.append(_get_2, "\t");
                      _builder.append(" = new Expression();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      Object _method_1 = this.method(mut.getObject().getExpression(), 0);
                      _builder.append(_method_1, "\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("objects = evaluate(objects, exp");
                      Integer _get_3 = this.expressionList.get(0);
                      _builder.append(_get_3, "\t");
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
            }
            {
              Expression _expression_2 = mut.getObject().getExpression();
              boolean _tripleEquals_4 = (_expression_2 == null);
              if (_tripleEquals_4) {
                {
                  if (((mut.getContainer() != null) && (mut.getContainer().getExpression() != null))) {
                    _builder.append("\t");
                    _builder.append("List<EObject> objects = rts.getObjects();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LIST: ");
                    ArrayList<Integer> _arrayList_2 = new ArrayList<Integer>();
                    List<Integer> _expressionList_2 = this.expressionList = _arrayList_2;
                    _builder.append(_expressionList_2, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    _builder.append(this.nExpression = 0, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    boolean _add_2 = this.expressionList.add(Integer.valueOf(0));
                    _builder.append(_add_2, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("Expression exp");
                    Integer _get_4 = this.expressionList.get(0);
                    _builder.append(_get_4, "\t");
                    _builder.append(" = new Expression();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    Object _method_2 = this.method(mut.getContainer().getExpression(), 0);
                    _builder.append(_method_2, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("objects = evaluate(objects, exp");
                    Integer _get_5 = this.expressionList.get(0);
                    _builder.append(_get_5, "\t");
                    _builder.append(");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if (((mut.getContainer() != null) && (mut.getContainer().getExpression() == null))) {
                    {
                      ObSelectionStrategy _object_4 = mut.getObject();
                      if ((_object_4 instanceof CompleteTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("List<EObject> objects = rts.getObjects();");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
            _builder.append("\t");
            _builder.append("for (EObject object : objects) {");
            _builder.newLine();
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t");
                _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
                _builder.newLine();
              } else {
                _builder.append("\t\t");
                _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
                _builder.append(this.className, "\t\t");
                _builder.append(".class);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t");
            _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
            _builder.append(this.methodName, "\t\t");
            _builder.append(".\" + numMutantsGenerated +\".model\"));");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            {
              if (((mut.getObject().getRefType() != null) && mut.getObject().getRefType().isMany())) {
                _builder.append("\t\t");
                _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                String _name_47 = mut.getObject().getRefType().getName();
                _builder.append(_name_47, "\t\t");
                _builder.append("\", object);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
                _builder.newLine();
              } else {
                if (((mut.getObject().getRefType() != null) && (!mut.getObject().getRefType().isMany()))) {
                  _builder.append("\t\t");
                  _builder.append("object = (EObject) ModelManager.getReferenced(\"");
                  String _name_48 = mut.getObject().getRefType().getName();
                  _builder.append(_name_48, "\t\t");
                  _builder.append("\", object);");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("object = ModelManager.getObject(resource, object);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("if (object != null) {");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, resource, object);");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("SelectObjectMutator mut = new SelectObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), referenceSelection, containerSelection, objectSelection);");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("Mutator mutator = null;");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("if (muts == null) {");
            _builder.newLine();
            _builder.append("\t\t\t\t");
            _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("//COUNTER: ");
            _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
            _builder.newLineIfNotEmpty();
            _builder.append("//COUNTER: ");
            _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
            _builder.newLineIfNotEmpty();
            _builder.append("//REGISTRY METHOD NAME:");
            String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
            String _plus = ("registry" + _string);
            String _registryMethodName = this.registryMethodName = _plus;
            _builder.append(_registryMethodName);
            _builder.newLineIfNotEmpty();
            {
              if ((this.executeMutation == true)) {
                _builder.append("if (mut != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("Object mutated = mut.mutate();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("if (mutated != null) {");
                _builder.newLine();
                {
                  String _name_49 = mut.getName();
                  boolean _tripleNotEquals_13 = (_name_49 != null);
                  if (_tripleNotEquals_13) {
                    _builder.append("\t\t\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("hmObjects.put(\"");
                    String _name_50 = mut.getName();
                    _builder.append(_name_50, "\t\t\t");
                    _builder.append("\", entry);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t\t\t");
                _builder.append("AppMutation appMut = ");
                _builder.append(this.registryMethodName, "\t\t\t");
                _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t");
                _builder.append("if (appMut != null) {");
                _builder.newLine();
                _builder.append("\t\t\t\t");
                _builder.append("muts.getMuts().add(appMut);");
                _builder.newLine();
                _builder.append("\t\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("mutator = mut;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("if (mutator != null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("//");
            _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
            _builder.newLineIfNotEmpty();
            {
              if ((last == false)) {
                {
                  if ((this.standalone == false)) {
                    _builder.append("\t\t");
                    _builder.append("mutation");
                    _builder.append(this.nMethodCall, "\t\t");
                    _builder.append("(packages, resource, hmObjects, hmList, hashmapModelFilenames,");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t\t\t\t\t");
                    _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t\t\t\t");
                    _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                    _builder.newLine();
                  } else {
                    _builder.append("\t\t");
                    _builder.append("mutation");
                    _builder.append(this.nMethodCall, "\t\t");
                    _builder.append("(packages, resource, hmObjects, hmList, hashmapModelFilenames,");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t\t\t\t\t");
                    _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t\t\t\t");
                    _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                    _builder.newLine();
                  }
                }
                _builder.append("\t\t");
                _builder.append("numMutantsGenerated = k[0];");
                _builder.newLine();
              }
            }
            {
              if ((last == true)) {
                _builder.append("\t");
                _builder.append("// MUTANT COMPLETION AND REGISTRY");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
                _builder.newLine();
                {
                  EList<Constraint> _constraints = e.getConstraints();
                  for(final Constraint constraint : _constraints) {
                    _builder.append("\t");
                    _builder.append("if (rules.get(\"");
                    String _name_51 = constraint.getType().getName();
                    _builder.append(_name_51, "\t");
                    _builder.append("\") == null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("rules.put(\"");
                    String _name_52 = constraint.getType().getName();
                    _builder.append(_name_52, "\t\t");
                    _builder.append("\", new ArrayList<String>());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("List<String> newrules = rules.get(\"");
                    String _name_53 = constraint.getType().getName();
                    _builder.append(_name_53, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    {
                      EList<InvariantCS> _expressions = constraint.getExpressions();
                      boolean _tripleNotEquals_14 = (_expressions != null);
                      if (_tripleNotEquals_14) {
                        {
                          EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                          for(final InvariantCS expression : _expressions_1) {
                            _builder.append("\t");
                            _builder.append("newrules.add(\"");
                            String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                            _builder.append(_constraintText, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    {
                      EList<String> _rules = constraint.getRules();
                      boolean _tripleNotEquals_15 = (_rules != null);
                      if (_tripleNotEquals_15) {
                        {
                          EList<String> _rules_1 = constraint.getRules();
                          for(final String rule : _rules_1) {
                            _builder.append("\t");
                            _builder.append("newrules.add(\"");
                            _builder.append(rule, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    _builder.append("\t");
                    _builder.append("rules.put(\"");
                    String _name_54 = constraint.getType().getName();
                    _builder.append(_name_54, "\t");
                    _builder.append("\", newrules);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((b == null)) {
                    _builder.append("\t");
                    _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
                    _builder.newLine();
                  } else {
                    {
                      int _size = b.getFrom().size();
                      boolean _equals = (_size == 0);
                      if (_equals) {
                        _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                        String _name_55 = b.getName();
                        _builder.append(_name_55);
                        _builder.append("/Output\" + k[0] + \".model\";");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                        String _name_56 = b.getName();
                        _builder.append(_name_56);
                        _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  if ((b == null)) {
                    {
                      if ((this.standalone == false)) {
                        _builder.append("\t\t   \t\t");
                        _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                        _builder.newLine();
                      } else {
                        _builder.append("\t\t   \t\t");
                        _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                        String _projectName = this.getProjectName();
                        _builder.append(_projectName, "\t\t   \t\t");
                        _builder.append("\", serialize, test, classes, ");
                        _builder.append(this.className, "\t\t   \t\t");
                        _builder.append(".class, true);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  } else {
                    {
                      if ((this.standalone == false)) {
                        _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                        String _name_57 = b.getName();
                        _builder.append(_name_57);
                        _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                        String _name_58 = b.getName();
                        _builder.append(_name_58);
                        _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                        String _projectName_1 = this.getProjectName();
                        _builder.append(_projectName_1);
                        _builder.append("\", serialize, test, classes, ");
                        _builder.append(this.className);
                        _builder.append(".class, true, false);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("\t");
                    _builder.append("if (isRepeated == false) {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("numMutantsGenerated++;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("monitor.worked(1);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("k[0] = k[0] + 1;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("muts = null;");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                _builder.append("}");
                _builder.newLine();
              } else {
                _builder.append("\t");
                _builder.append("//");
                final List<String> resourceURIs = new ArrayList<String>();
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//");
                final List<String> ecoreURIs = new ArrayList<String>();
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//");
                final String resourceName = mut.getObject().getResource();
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//");
                Resource resource = null;
                _builder.newLineIfNotEmpty();
                {
                  EList<Resource> _resources = this.program.getResources();
                  for(final Resource res : _resources) {
                    {
                      boolean _equals_1 = res.getName().equals(resourceName);
                      if (_equals_1) {
                        _builder.append("\t");
                        _builder.append("//");
                        _builder.append(resource = res, "\t");
                        _builder.append(" ");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  if ((resource != null)) {
                    _builder.append("\t");
                    _builder.append("//");
                    final Source source = resource.getPath();
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//");
                    String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath();
                    String _plus_1 = (_workspaceAbsolutePath + "/");
                    String _projectName_2 = this.getProjectName();
                    String _plus_2 = (_plus_1 + _projectName_2);
                    String _plus_3 = (_plus_2 + "/");
                    String _path = source.getPath();
                    final String resourcePath = (_plus_3 + _path);
                    _builder.newLineIfNotEmpty();
                    {
                      File[] _listFiles = new File(resourcePath).listFiles();
                      for(final File resourceFile : _listFiles) {
                        {
                          boolean _endsWith = resourceFile.getName().endsWith(".model");
                          if (_endsWith) {
                            _builder.append("\t");
                            _builder.append("//");
                            boolean _add_3 = resourceURIs.add(resourceFile.getPath());
                            _builder.append(_add_3, "\t");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          boolean _endsWith_1 = resourceFile.getName().endsWith(".ecore");
                          if (_endsWith_1) {
                            _builder.append("\t");
                            _builder.append("//");
                            boolean _add_4 = ecoreURIs.add(resourceFile.getPath());
                            _builder.append(_add_4, "\t");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    _builder.append("\t");
                    _builder.append("//");
                    final String metamodelPath = resource.getMetamodel().replace("\\", "/");
                    _builder.newLineIfNotEmpty();
                    {
                      if ((this.standalone == false)) {
                        _builder.append("\t");
                        _builder.append("resourcePackages = ModelManager.loadMetaModel(\"");
                        _builder.append(metamodelPath, "\t");
                        _builder.append("\", this.getClass());");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("resourcePackages = ModelManager.loadMetaModel(\"");
                        _builder.append(metamodelPath, "\t");
                        _builder.append("\", ");
                        _builder.append(this.className, "\t");
                        _builder.append(".class);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("\t");
                    _builder.append("resources = new ArrayList<Resource>();");
                    _builder.newLine();
                    {
                      for(final String resourceURI : resourceURIs) {
                        {
                          if ((this.standalone == false)) {
                            _builder.append("\t");
                            _builder.append("resources.add(ModelManager.loadModel(resourcePackages, URI.createURI(\"file:/\" + \"");
                            _builder.append(resourceURI, "\t");
                            _builder.append("\").toFileString()));");
                            _builder.newLineIfNotEmpty();
                          } else {
                            _builder.append("\t");
                            _builder.append("resources.add(ModelManager.loadModelNoException(resourcePackages, URI.createURI(\"file:/\" + \"");
                            _builder.append(resourceURI, "\t");
                            _builder.append("\").toFileString()));");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    {
                      for(final String ecoreURI : ecoreURIs) {
                        _builder.append("\t");
                        _builder.append("//");
                        final String ecoreURI2 = ecoreURI.replace("\\", "/");
                        _builder.newLineIfNotEmpty();
                        {
                          if ((this.standalone == false)) {
                            _builder.append("\t");
                            _builder.append("resources.add(ModelManager.loadMetaModelAsResource(resourcePackages, \"");
                            _builder.append(ecoreURI2, "\t");
                            _builder.append("\"));");
                            _builder.newLineIfNotEmpty();
                          } else {
                            _builder.append("\t");
                            _builder.append("resources.add(ModelManager.loadMetaModelAsResourceNoException(resourcePackages, \"file:/");
                            _builder.append(ecoreURI2, "\t");
                            _builder.append("\"));");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    {
                      ObSelectionStrategy _container_38 = mut.getContainer();
                      boolean _tripleEquals_5 = (_container_38 == null);
                      if (_tripleEquals_5) {
                        {
                          ObSelectionStrategy _object_5 = mut.getObject();
                          if ((_object_5 instanceof RandomTypeSelection)) {
                            _builder.append("\t");
                            _builder.append("//");
                            _builder.append(rts = true, "\t");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                            ObSelectionStrategy _object_6 = mut.getObject();
                            String _name_59 = ((RandomTypeSelection) _object_6).getType().getName();
                            _builder.append(_name_59, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          ObSelectionStrategy _object_7 = mut.getObject();
                          if ((_object_7 instanceof CompleteTypeSelection)) {
                            _builder.append("\t");
                            _builder.append("//");
                            _builder.append(rts = true, "\t");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                            ObSelectionStrategy _object_8 = mut.getObject();
                            String _name_60 = ((CompleteTypeSelection) _object_8).getType().getName();
                            _builder.append(_name_60, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      } else {
                        {
                          ObSelectionStrategy _container_39 = mut.getContainer();
                          if ((_container_39 instanceof RandomTypeSelection)) {
                            _builder.append("\t");
                            _builder.append("//");
                            _builder.append(rts = true, "\t");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                            ObSelectionStrategy _container_40 = mut.getContainer();
                            String _name_61 = ((RandomTypeSelection) _container_40).getType().getName();
                            _builder.append(_name_61, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("EObject container = rts.getObject();");
                            _builder.newLine();
                            _builder.append("\t");
                            _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resources, container);");
                            _builder.newLine();
                            {
                              EReference _refType_4 = mut.getContainer().getRefType();
                              boolean _tripleNotEquals_16 = (_refType_4 != null);
                              if (_tripleNotEquals_16) {
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, \"");
                                String _name_62 = mut.getContainer().getRefType().getName();
                                _builder.append(_name_62, "\t");
                                _builder.append("\", containerSelection);");
                                _builder.newLineIfNotEmpty();
                              } else {
                                _builder.append("\t");
                                _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                _builder.newLine();
                              }
                            }
                          } else {
                            ObSelectionStrategy _container_41 = mut.getContainer();
                            if ((_container_41 instanceof CompleteTypeSelection)) {
                              _builder.append("\t");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("//");
                              _builder.append(rts = true, "\t");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                              ObSelectionStrategy _container_42 = mut.getContainer();
                              String _name_63 = ((CompleteTypeSelection) _container_42).getType().getName();
                              _builder.append(_name_63, "\t");
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("EObject container = rts.getObject();");
                              _builder.newLine();
                              _builder.append("\t");
                              _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resources, container);");
                              _builder.newLine();
                              {
                                EReference _refType_5 = mut.getContainer().getRefType();
                                boolean _tripleNotEquals_17 = (_refType_5 != null);
                                if (_tripleNotEquals_17) {
                                  _builder.append("\t");
                                  _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, \"");
                                  String _name_64 = mut.getContainer().getRefType().getName();
                                  _builder.append(_name_64, "\t");
                                  _builder.append("\", containerSelection);");
                                  _builder.newLineIfNotEmpty();
                                } else {
                                  _builder.append("\t");
                                  _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                  _builder.newLine();
                                }
                              }
                            } else {
                              ObSelectionStrategy _container_43 = mut.getContainer();
                              if ((_container_43 instanceof SpecificObjectSelection)) {
                                _builder.append("\t");
                                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                                ObSelectionStrategy _container_44 = mut.getContainer();
                                String _name_65 = ((SpecificObjectSelection) _container_44).getObjSel().getName();
                                _builder.append(_name_65, "\t");
                                _builder.append(" = hmObjects.get(\"");
                                ObSelectionStrategy _container_45 = mut.getContainer();
                                String _name_66 = ((SpecificObjectSelection) _container_45).getObjSel().getName();
                                _builder.append(_name_66, "\t");
                                _builder.append("\");");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("if (entry_");
                                ObSelectionStrategy _container_46 = mut.getContainer();
                                String _name_67 = ((SpecificObjectSelection) _container_46).getObjSel().getName();
                                _builder.append(_name_67, "\t");
                                _builder.append(" != null) {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                                ObSelectionStrategy _container_47 = mut.getContainer();
                                String _name_68 = ((SpecificObjectSelection) _container_47).getObjSel().getName();
                                _builder.append(_name_68, "\t\t");
                                _builder.append(".getKey());");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("if (recovered == null) {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("recovered = entry_");
                                ObSelectionStrategy _container_48 = mut.getContainer();
                                String _name_69 = ((SpecificObjectSelection) _container_48).getObjSel().getName();
                                _builder.append(_name_69, "\t\t\t");
                                _builder.append(".getKey();");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resourcePackages = packages;");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resources = new ArrayList<Resource>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("resources.add(resource);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resource, recovered);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("} else {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                ObSelectionStrategy _container_49 = mut.getContainer();
                                String _name_70 = ((SpecificObjectSelection) _container_49).getObjSel().getName();
                                _builder.append(_name_70, "\t\t");
                                _builder.append(" = hmList.get(\"");
                                ObSelectionStrategy _container_50 = mut.getContainer();
                                String _name_71 = ((SpecificObjectSelection) _container_50).getObjSel().getName();
                                _builder.append(_name_71, "\t\t");
                                _builder.append("\");");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("if (listEntry_");
                                ObSelectionStrategy _container_51 = mut.getContainer();
                                String _name_72 = ((SpecificObjectSelection) _container_51).getObjSel().getName();
                                _builder.append(_name_72, "\t\t");
                                _builder.append(" != null) {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resourcePackages = packages;");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resources = new ArrayList<Resource>();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("resources.add(resource);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                                ObSelectionStrategy _container_52 = mut.getContainer();
                                String _name_73 = ((SpecificObjectSelection) _container_52).getObjSel().getName();
                                _builder.append(_name_73, "\t\t\t");
                                _builder.append(") {");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("EObject obj = ModelManager.getObject(resource, ent.getKey());");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("if (obj == null) {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t\t\t");
                                _builder.append("obj = ent.getKey();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t\t");
                                _builder.append("objs.add(obj);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resource, objs);");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("else {");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t\t");
                                _builder.append("return numMutantsGenerated;");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("}");
                                _builder.newLine();
                                {
                                  EReference _refType_6 = mut.getContainer().getRefType();
                                  boolean _tripleNotEquals_18 = (_refType_6 != null);
                                  if (_tripleNotEquals_18) {
                                    _builder.append("\t");
                                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                                    ObSelectionStrategy _container_53 = mut.getContainer();
                                    String _name_74 = ((SpecificObjectSelection) _container_53).getObjSel().getName();
                                    _builder.append(_name_74, "\t");
                                    _builder.append(" = hmObjects.get(\"");
                                    ObSelectionStrategy _container_54 = mut.getContainer();
                                    String _name_75 = ((SpecificObjectSelection) _container_54).getObjSel().getName();
                                    _builder.append(_name_75, "\t");
                                    _builder.append("\");");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("if (entry_");
                                    ObSelectionStrategy _container_55 = mut.getContainer();
                                    String _name_76 = ((SpecificObjectSelection) _container_55).getObjSel().getName();
                                    _builder.append(_name_76, "\t");
                                    _builder.append(" != null) {");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                                    ObSelectionStrategy _container_56 = mut.getContainer();
                                    String _name_77 = ((SpecificObjectSelection) _container_56).getObjSel().getName();
                                    _builder.append(_name_77, "\t\t");
                                    _builder.append(".getKey());");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("if (recovered == null) {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("recovered = entry_");
                                    ObSelectionStrategy _container_57 = mut.getContainer();
                                    String _name_78 = ((SpecificObjectSelection) _container_57).getObjSel().getName();
                                    _builder.append(_name_78, "\t\t\t");
                                    _builder.append(".getKey();");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("resourcePackages = packages;");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("resources = new ArrayList<Resource>();");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("resources.add(resource);");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resource, \"");
                                    String _name_79 = mut.getContainer().getRefType().getName();
                                    _builder.append(_name_79, "\t\t");
                                    _builder.append("\", recovered);");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("} else {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                    ObSelectionStrategy _container_58 = mut.getContainer();
                                    String _name_80 = ((SpecificObjectSelection) _container_58).getObjSel().getName();
                                    _builder.append(_name_80, "\t\t");
                                    _builder.append(" = hmList.get(\"");
                                    ObSelectionStrategy _container_59 = mut.getContainer();
                                    String _name_81 = ((SpecificObjectSelection) _container_59).getObjSel().getName();
                                    _builder.append(_name_81, "\t\t");
                                    _builder.append("\");");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("if (listEntry_");
                                    ObSelectionStrategy _container_60 = mut.getContainer();
                                    String _name_82 = ((SpecificObjectSelection) _container_60).getObjSel().getName();
                                    _builder.append(_name_82, "\t\t");
                                    _builder.append(" != null) {");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("EObject recovered = ModelManager.getObject(resource, listEntry_");
                                    ObSelectionStrategy _container_61 = mut.getContainer();
                                    String _name_83 = ((SpecificObjectSelection) _container_61).getObjSel().getName();
                                    _builder.append(_name_83, "\t\t\t");
                                    _builder.append(".get(0).getKey());");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("if (recovered == null) {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t\t");
                                    _builder.append("recovered = listEntry_");
                                    ObSelectionStrategy _container_62 = mut.getContainer();
                                    String _name_84 = ((SpecificObjectSelection) _container_62).getObjSel().getName();
                                    _builder.append(_name_84, "\t\t\t\t");
                                    _builder.append(".get(0).getKey();");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("resourcePackages = packages;");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("resources = new ArrayList<Resource>();");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("resources.add(resource);");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resource, \"");
                                    String _name_85 = mut.getContainer().getRefType().getName();
                                    _builder.append(_name_85, "\t\t\t");
                                    _builder.append("\", recovered);");
                                    _builder.newLineIfNotEmpty();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("else {");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t\t");
                                    _builder.append("return numMutantsGenerated;");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                    _builder.append("\t");
                                    _builder.append("}");
                                    _builder.newLine();
                                  } else {
                                    _builder.append("\t");
                                    _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                    _builder.newLine();
                                  }
                                }
                              } else {
                                ObSelectionStrategy _container_63 = mut.getContainer();
                                if ((_container_63 instanceof SpecificClosureSelection)) {
                                  _builder.append("\t");
                                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                                  ObSelectionStrategy _container_64 = mut.getContainer();
                                  String _name_86 = ((SpecificClosureSelection) _container_64).getObjSel().getName();
                                  _builder.append(_name_86, "\t");
                                  _builder.append(" = hmObjects.get(\"");
                                  ObSelectionStrategy _container_65 = mut.getContainer();
                                  String _name_87 = ((SpecificClosureSelection) _container_65).getObjSel().getName();
                                  _builder.append(_name_87, "\t");
                                  _builder.append("\");");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("if (entry_");
                                  ObSelectionStrategy _container_66 = mut.getContainer();
                                  String _name_88 = ((SpecificClosureSelection) _container_66).getObjSel().getName();
                                  _builder.append(_name_88, "\t");
                                  _builder.append(" != null) {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                                  ObSelectionStrategy _container_67 = mut.getContainer();
                                  String _name_89 = ((SpecificClosureSelection) _container_67).getObjSel().getName();
                                  _builder.append(_name_89, "\t\t");
                                  _builder.append(".getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("if (recovered == null) {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("recovered = entry_");
                                  ObSelectionStrategy _container_68 = mut.getContainer();
                                  String _name_90 = ((SpecificClosureSelection) _container_68).getObjSel().getName();
                                  _builder.append(_name_90, "\t\t\t");
                                  _builder.append(".getKey();");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resourcePackages = packages;");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resources = new ArrayList<Resource>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("resources.add(resource);");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("containerSelection = new SpecificClosureSelection(resourcePackages, resource, recovered, \"");
                                  ObSelectionStrategy _container_69 = mut.getContainer();
                                  String _name_91 = ((SpecificClosureSelection) _container_69).getRefType().getName();
                                  _builder.append(_name_91, "\t\t");
                                  _builder.append("\");");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("} else {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                  ObSelectionStrategy _container_70 = mut.getContainer();
                                  String _name_92 = ((SpecificClosureSelection) _container_70).getObjSel().getName();
                                  _builder.append(_name_92, "\t\t");
                                  _builder.append(" = hmList.get(\"");
                                  ObSelectionStrategy _container_71 = mut.getContainer();
                                  String _name_93 = ((SpecificObjectSelection) _container_71).getObjSel().getName();
                                  _builder.append(_name_93, "\t\t");
                                  _builder.append("\");");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("if (listEntry_");
                                  ObSelectionStrategy _container_72 = mut.getContainer();
                                  String _name_94 = ((SpecificClosureSelection) _container_72).getObjSel().getName();
                                  _builder.append(_name_94, "\t\t");
                                  _builder.append(" != null) {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("EObject recovered = ModelManager.getObject(resource, listEntry_");
                                  ObSelectionStrategy _container_73 = mut.getContainer();
                                  String _name_95 = ((SpecificClosureSelection) _container_73).getObjSel().getName();
                                  _builder.append(_name_95, "\t\t\t");
                                  _builder.append(".get(0).getKey());");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("if (recovered == null) {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("recovered = listEntry_");
                                  ObSelectionStrategy _container_74 = mut.getContainer();
                                  String _name_96 = ((SpecificClosureSelection) _container_74).getObjSel().getName();
                                  _builder.append(_name_96, "\t\t\t\t");
                                  _builder.append(".get(0).getKey();");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resourcePackages = packages;");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resources = new ArrayList<Resource>();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("resources.add(resource);");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                                  ObSelectionStrategy _container_75 = mut.getContainer();
                                  String _name_97 = ((SpecificClosureSelection) _container_75).getObjSel().getName();
                                  _builder.append(_name_97, "\t\t\t");
                                  _builder.append(") {");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("EObject obj = ModelManager.getObject(resource, ent.getKey());");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("if (obj == null) {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t\t");
                                  _builder.append("obj = ent.getKey();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t\t");
                                  _builder.append("objs.add(obj);");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("containerSelection = new SpecificObjectSelection(resourcePackages, resource, objs);");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("else {");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t\t");
                                  _builder.append("return numMutantsGenerated;");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("}");
                                  _builder.newLine();
                                  {
                                    EReference _refType_7 = mut.getContainer().getRefType();
                                    boolean _tripleNotEquals_19 = (_refType_7 != null);
                                    if (_tripleNotEquals_19) {
                                      _builder.append("\t");
                                      _builder.append("if (entry_");
                                      ObSelectionStrategy _container_76 = mut.getContainer();
                                      String _name_98 = ((SpecificClosureSelection) _container_76).getObjSel().getName();
                                      _builder.append(_name_98, "\t");
                                      _builder.append(" != null) {");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("EObject recovered = ModelManager.getObject(resource, entry_");
                                      ObSelectionStrategy _container_77 = mut.getContainer();
                                      String _name_99 = ((SpecificClosureSelection) _container_77).getObjSel().getName();
                                      _builder.append(_name_99, "\t\t");
                                      _builder.append(".getKey());");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("if (recovered == null) {");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("recovered = entry_");
                                      ObSelectionStrategy _container_78 = mut.getContainer();
                                      String _name_100 = ((SpecificClosureSelection) _container_78).getObjSel().getName();
                                      _builder.append(_name_100, "\t\t\t");
                                      _builder.append(".getKey();");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("}");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("resourcePackages = packages;");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("resources = new ArrayList<Resource>();");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("resources.add(resource);");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resource, \"");
                                      String _name_101 = mut.getContainer().getRefType().getName();
                                      _builder.append(_name_101, "\t\t");
                                      _builder.append("\", objs);");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("} else {");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                                      ObSelectionStrategy _container_79 = mut.getContainer();
                                      String _name_102 = ((SpecificClosureSelection) _container_79).getObjSel().getName();
                                      _builder.append(_name_102, "\t\t");
                                      _builder.append(" = hmList.get(\"");
                                      ObSelectionStrategy _container_80 = mut.getContainer();
                                      String _name_103 = ((SpecificClosureSelection) _container_80).getObjSel().getName();
                                      _builder.append(_name_103, "\t\t");
                                      _builder.append("\");");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("if (listEntry_");
                                      ObSelectionStrategy _container_81 = mut.getContainer();
                                      String _name_104 = ((SpecificClosureSelection) _container_81).getObjSel().getName();
                                      _builder.append(_name_104, "\t\t");
                                      _builder.append(" != null) {");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("EObject recovered = ModelManager.getObject(resource, listEntry_");
                                      ObSelectionStrategy _container_82 = mut.getContainer();
                                      String _name_105 = ((SpecificObjectSelection) _container_82).getObjSel().getName();
                                      _builder.append(_name_105, "\t\t\t");
                                      _builder.append(".get(0).getKey());");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("if (recovered == null) {");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t\t");
                                      _builder.append("recovered = listEntry_");
                                      ObSelectionStrategy _container_83 = mut.getContainer();
                                      String _name_106 = ((SpecificObjectSelection) _container_83).getObjSel().getName();
                                      _builder.append(_name_106, "\t\t\t\t");
                                      _builder.append(".get(0).getKey();");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("}");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("resourcePackages = packages;");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("resources = new ArrayList<Resource>();");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("resources.add(resource);");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resource, \"");
                                      String _name_107 = mut.getContainer().getRefType().getName();
                                      _builder.append(_name_107, "\t\t\t");
                                      _builder.append("\", recovered);");
                                      _builder.newLineIfNotEmpty();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("}");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("else {");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t\t");
                                      _builder.append("return numMutantsGenerated;");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("\t");
                                      _builder.append("}");
                                      _builder.newLine();
                                      _builder.append("\t");
                                      _builder.append("}");
                                      _builder.newLine();
                                    } else {
                                      _builder.append("\t");
                                      _builder.append("referenceSelection = new SpecificReferenceSelection(resourcePackages, resources, null, null);");
                                      _builder.newLine();
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                        {
                          if ((rts == true)) {
                            _builder.append("\t");
                            _builder.append("rts = new RandomTypeSelection(resourcePackages, resources, \"");
                            String _name_108 = mut.getObject().getType().getName();
                            _builder.append(_name_108, "\t");
                            _builder.append("\", referenceSelection, containerSelection);");
                            _builder.newLineIfNotEmpty();
                          } else {
                            _builder.append("\t");
                            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                            String _name_109 = mut.getObject().getType().getName();
                            _builder.append(_name_109, "\t");
                            _builder.append("\", referenceSelection, containerSelection);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                            _builder.append("\t");
                            _builder.append("List<EObject> objects = rts.getObjects();");
                            _builder.newLine();
                          }
                        }
                      }
                    }
                    {
                      Expression _expression_3 = mut.getObject().getExpression();
                      boolean _tripleEquals_6 = (_expression_3 == null);
                      if (_tripleEquals_6) {
                        _builder.append("\t");
                        _builder.append("List<EObject> objects = rts.getObjects();");
                        _builder.newLine();
                      } else {
                        {
                          Expression _expression_4 = mut.getObject().getExpression();
                          boolean _tripleNotEquals_20 = (_expression_4 != null);
                          if (_tripleNotEquals_20) {
                            {
                              ObSelectionStrategy _container_84 = mut.getContainer();
                              boolean _tripleEquals_7 = (_container_84 == null);
                              if (_tripleEquals_7) {
                                _builder.append("\t");
                                _builder.append("List<EObject> objects = rts.getObjects();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LIST: ");
                                ArrayList<Integer> _arrayList_3 = new ArrayList<Integer>();
                                List<Integer> _expressionList_3 = this.expressionList = _arrayList_3;
                                _builder.append(_expressionList_3, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LEVEL: ");
                                _builder.append(this.nExpression = 0, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LEVEL: ");
                                boolean _add_5 = this.expressionList.add(Integer.valueOf(0));
                                _builder.append(_add_5, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("Expression exp");
                                Integer _get_6 = this.expressionList.get(0);
                                _builder.append(_get_6, "\t");
                                _builder.append(" = new Expression();");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                Object _method_3 = this.method(mut.getObject().getExpression(), 0);
                                _builder.append(_method_3, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("objects = evaluate(objects, exp");
                                Integer _get_7 = this.expressionList.get(0);
                                _builder.append(_get_7, "\t");
                                _builder.append(");");
                                _builder.newLineIfNotEmpty();
                              } else {
                                Expression _expression_5 = mut.getContainer().getExpression();
                                boolean _tripleEquals_8 = (_expression_5 == null);
                                if (_tripleEquals_8) {
                                  _builder.append("\t");
                                  _builder.append("List<EObject> objects = rts.getObjects();");
                                  _builder.newLine();
                                  _builder.append("\t");
                                  _builder.append("//EXPRESSION LIST: ");
                                  ArrayList<Integer> _arrayList_4 = new ArrayList<Integer>();
                                  List<Integer> _expressionList_4 = this.expressionList = _arrayList_4;
                                  _builder.append(_expressionList_4, "\t");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("//EXPRESSION LEVEL: ");
                                  _builder.append(this.nExpression = 0, "\t");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("//EXPRESSION LEVEL: ");
                                  boolean _add_6 = this.expressionList.add(Integer.valueOf(0));
                                  _builder.append(_add_6, "\t");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("Expression exp");
                                  Integer _get_8 = this.expressionList.get(0);
                                  _builder.append(_get_8, "\t");
                                  _builder.append(" = new Expression();");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  Object _method_4 = this.method(mut.getObject().getExpression(), 0);
                                  _builder.append(_method_4, "\t");
                                  _builder.newLineIfNotEmpty();
                                  _builder.append("\t");
                                  _builder.append("objects = evaluate(objects, exp");
                                  Integer _get_9 = this.expressionList.get(0);
                                  _builder.append(_get_9, "\t");
                                  _builder.append(");");
                                  _builder.newLineIfNotEmpty();
                                }
                              }
                            }
                          }
                        }
                        {
                          Expression _expression_6 = mut.getObject().getExpression();
                          boolean _tripleEquals_9 = (_expression_6 == null);
                          if (_tripleEquals_9) {
                            {
                              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() != null))) {
                                _builder.append("\t");
                                _builder.append("List<EObject> objects = rts.getObjects();");
                                _builder.newLine();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LIST: ");
                                ArrayList<Integer> _arrayList_5 = new ArrayList<Integer>();
                                List<Integer> _expressionList_5 = this.expressionList = _arrayList_5;
                                _builder.append(_expressionList_5, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LEVEL: ");
                                _builder.append(this.nExpression = 0, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("//EXPRESSION LEVEL: ");
                                boolean _add_7 = this.expressionList.add(Integer.valueOf(0));
                                _builder.append(_add_7, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("Expression exp");
                                Integer _get_10 = this.expressionList.get(0);
                                _builder.append(_get_10, "\t");
                                _builder.append(" = new Expression();");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                Object _method_5 = this.method(mut.getContainer().getExpression(), 0);
                                _builder.append(_method_5, "\t");
                                _builder.newLineIfNotEmpty();
                                _builder.append("\t");
                                _builder.append("objects = evaluate(objects, exp");
                                Integer _get_11 = this.expressionList.get(0);
                                _builder.append(_get_11, "\t");
                                _builder.append(");");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                            {
                              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() == null))) {
                                {
                                  ObSelectionStrategy _object_9 = mut.getObject();
                                  if ((_object_9 instanceof CompleteTypeSelection)) {
                                    _builder.append("\t");
                                    _builder.append("List<EObject> objects = rts.getObjects();");
                                    _builder.newLine();
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    _builder.append("\t");
                    _builder.append("for (EObject object : objects) {");
                    _builder.newLine();
                    {
                      if ((this.standalone == false)) {
                        _builder.append("\t\t");
                        _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
                        _builder.newLine();
                      } else {
                        _builder.append("\t\t");
                        _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
                        _builder.append(this.className, "\t\t");
                        _builder.append(".class);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    _builder.append("\t\t");
                    _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
                    _builder.append(this.methodName, "\t\t");
                    _builder.append(".\" + numMutantsGenerated +\".model\"));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("ObSelectionStrategy objectSelection = null;");
                    _builder.newLine();
                    {
                      if (((mut.getObject().getRefType() != null) && mut.getObject().getRefType().isMany())) {
                        _builder.append("\t\t");
                        _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                        String _name_110 = mut.getObject().getRefType().getName();
                        _builder.append(_name_110, "\t\t");
                        _builder.append("\", object);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
                        _builder.newLine();
                      } else {
                        if (((mut.getObject().getRefType() != null) && (!mut.getObject().getRefType().isMany()))) {
                          _builder.append("\t\t");
                          _builder.append("object = (EObject) ModelManager.getReferenced(\"");
                          String _name_111 = mut.getObject().getRefType().getName();
                          _builder.append(_name_111, "\t\t");
                          _builder.append("\", object);");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                    _builder.append("\t\t");
                    _builder.append("object = ModelManager.getObject(resource, object);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("if (object != null) {");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("objectSelection = new SpecificObjectSelection(packages, resource, object);");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("SelectObjectMutator mut = new SelectObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), referenceSelection, containerSelection, objectSelection);");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("Mutator mutator = null;");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("if (muts == null) {");
                    _builder.newLine();
                    _builder.append("\t\t\t\t");
                    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("//COUNTER: ");
                    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
                    _builder.newLineIfNotEmpty();
                    _builder.append("//COUNTER: ");
                    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
                    _builder.newLineIfNotEmpty();
                    _builder.append("//REGISTRY METHOD NAME:");
                    String _string_1 = Integer.valueOf(this.nRegistryMethodCall).toString();
                    String _plus_4 = ("registry" + _string_1);
                    String _registryMethodName_1 = this.registryMethodName = _plus_4;
                    _builder.append(_registryMethodName_1);
                    _builder.newLineIfNotEmpty();
                    {
                      if ((this.executeMutation == true)) {
                        _builder.append("if (mut != null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("Object mutated = mut.mutate();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("if (mutated != null) {");
                        _builder.newLine();
                        {
                          String _name_112 = mut.getName();
                          boolean _tripleNotEquals_21 = (_name_112 != null);
                          if (_tripleNotEquals_21) {
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("hmObjects.put(\"");
                            String _name_113 = mut.getName();
                            _builder.append(_name_113, "\t\t");
                            _builder.append("\", entry);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        _builder.append("\t\t\t");
                        _builder.append("AppMutation appMut = ");
                        _builder.append(this.registryMethodName, "\t\t\t");
                        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t\t");
                        _builder.append("if (appMut != null) {");
                        _builder.newLine();
                        _builder.append("\t\t\t\t");
                        _builder.append("muts.getMuts().add(appMut);");
                        _builder.newLine();
                        _builder.append("\t\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                    _builder.append("\t\t");
                    _builder.append("mutator = mut;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("if (mutator != null) {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("//");
                    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
                    _builder.newLineIfNotEmpty();
                    {
                      if ((last == false)) {
                        {
                          if ((this.standalone == false)) {
                            _builder.append("\t\t");
                            _builder.append("mutation");
                            _builder.append(this.nMethodCall, "\t\t");
                            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t\t\t\t");
                            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t\t\t\t");
                            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                            _builder.newLine();
                          } else {
                            _builder.append("\t\t");
                            _builder.append("mutation");
                            _builder.append(this.nMethodCall, "\t\t");
                            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t\t\t\t");
                            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t\t\t\t");
                            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                            _builder.newLine();
                          }
                        }
                        _builder.append("\t\t");
                        _builder.append("numMutantsGenerated = k[0];");
                        _builder.newLine();
                      }
                    }
                    {
                      if ((last == true)) {
                        _builder.append("\t\t");
                        _builder.append("// MUTANT COMPLETION AND REGISTRY");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
                        _builder.newLine();
                        {
                          EList<Constraint> _constraints_1 = e.getConstraints();
                          for(final Constraint constraint_1 : _constraints_1) {
                            _builder.append("\t\t");
                            _builder.append("if (rules.get(\"");
                            String _name_114 = constraint_1.getType().getName();
                            _builder.append(_name_114, "\t\t");
                            _builder.append("\") == null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("rules.put(\"");
                            String _name_115 = constraint_1.getType().getName();
                            _builder.append(_name_115, "\t\t\t");
                            _builder.append("\", new ArrayList<String>());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("List<String> newrules = rules.get(\"");
                            String _name_116 = constraint_1.getType().getName();
                            _builder.append(_name_116, "\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            {
                              EList<InvariantCS> _expressions_2 = constraint_1.getExpressions();
                              boolean _tripleNotEquals_22 = (_expressions_2 != null);
                              if (_tripleNotEquals_22) {
                                {
                                  EList<InvariantCS> _expressions_3 = constraint_1.getExpressions();
                                  for(final InvariantCS expression_1 : _expressions_3) {
                                    _builder.append("\t\t");
                                    _builder.append("newrules.add(\"");
                                    String _constraintText_1 = WodelUtils.getConstraintText(this.fileName, expression_1);
                                    _builder.append(_constraintText_1, "\t\t");
                                    _builder.append("\");");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              }
                            }
                            {
                              EList<String> _rules_2 = constraint_1.getRules();
                              boolean _tripleNotEquals_23 = (_rules_2 != null);
                              if (_tripleNotEquals_23) {
                                {
                                  EList<String> _rules_3 = constraint_1.getRules();
                                  for(final String rule_1 : _rules_3) {
                                    _builder.append("\t\t");
                                    _builder.append("newrules.add(\"");
                                    _builder.append(rule_1, "\t\t");
                                    _builder.append("\");");
                                    _builder.newLineIfNotEmpty();
                                  }
                                }
                              }
                            }
                            _builder.append("\t\t");
                            _builder.append("rules.put(\"");
                            String _name_117 = constraint_1.getType().getName();
                            _builder.append(_name_117, "\t\t");
                            _builder.append("\", newrules);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          if ((b == null)) {
                            _builder.append("\t\t");
                            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
                            _builder.newLine();
                          } else {
                            {
                              int _size_1 = b.getFrom().size();
                              boolean _equals_2 = (_size_1 == 0);
                              if (_equals_2) {
                                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                                String _name_118 = b.getName();
                                _builder.append(_name_118);
                                _builder.append("/Output\" + k[0] + \".model\";");
                                _builder.newLineIfNotEmpty();
                              } else {
                                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                                String _name_119 = b.getName();
                                _builder.append(_name_119);
                                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                          }
                        }
                        {
                          if ((b == null)) {
                            {
                              if ((this.standalone == false)) {
                                _builder.append("\t\t   \t\t");
                                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                                _builder.newLine();
                              } else {
                                _builder.append("\t\t   \t\t");
                                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                                String _projectName_3 = this.getProjectName();
                                _builder.append(_projectName_3, "\t\t   \t\t");
                                _builder.append("\", serialize, test, classes, ");
                                _builder.append(this.className, "\t\t   \t\t");
                                _builder.append(".class, true);");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                          } else {
                            {
                              if ((this.standalone == false)) {
                                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                                String _name_120 = b.getName();
                                _builder.append(_name_120);
                                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                                _builder.newLineIfNotEmpty();
                              } else {
                                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                                String _name_121 = b.getName();
                                _builder.append(_name_121);
                                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                                String _projectName_4 = this.getProjectName();
                                _builder.append(_projectName_4);
                                _builder.append("\", serialize, test, classes, ");
                                _builder.append(this.className);
                                _builder.append(".class, true, false);");
                                _builder.newLineIfNotEmpty();
                              }
                            }
                          }
                        }
                      }
                    }
                    _builder.append("\t\t\t");
                    _builder.append("if (isRepeated == false) {");
                    _builder.newLine();
                    _builder.append("\t\t\t\t");
                    _builder.append("numMutantsGenerated++;");
                    _builder.newLine();
                    _builder.append("\t\t\t\t");
                    _builder.append("monitor.worked(1);");
                    _builder.newLine();
                    _builder.append("\t\t\t\t");
                    _builder.append("k[0] = k[0] + 1;");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("muts = null;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      } else {
        if (((mut.getObject() instanceof SpecificObjectSelection) || (mut.getObject() instanceof SpecificClosureSelection))) {
          {
            ObSelectionStrategy _object_10 = mut.getObject();
            if ((_object_10 instanceof SpecificObjectSelection)) {
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_11 = mut.getObject();
              String _name_122 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
              _builder.append(_name_122, "\t\t\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_12 = mut.getObject();
              String _name_123 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
              _builder.append(_name_123, "\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_13 = mut.getObject();
              String _name_124 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
              _builder.append(_name_124, "\t\t\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resourcePackages = entry_");
              ObSelectionStrategy _object_14 = mut.getObject();
              String _name_125 = ((SpecificObjectSelection) _object_14).getObjSel().getName();
              _builder.append(_name_125, "\t\t\t\t");
              _builder.append(".getValue().getValue();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resources = new ArrayList<Resource>();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resources.add(entry_");
              ObSelectionStrategy _object_15 = mut.getObject();
              String _name_126 = ((SpecificObjectSelection) _object_15).getObjSel().getName();
              _builder.append(_name_126, "\t\t\t\t");
              _builder.append(".getValue().getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificObjectSelection(entry_");
              ObSelectionStrategy _object_16 = mut.getObject();
              String _name_127 = ((SpecificObjectSelection) _object_16).getObjSel().getName();
              _builder.append(_name_127, "\t\t\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _object_17 = mut.getObject();
              String _name_128 = ((SpecificObjectSelection) _object_17).getObjSel().getName();
              _builder.append(_name_128, "\t\t\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _object_18 = mut.getObject();
              String _name_129 = ((SpecificObjectSelection) _object_18).getObjSel().getName();
              _builder.append(_name_129, "\t\t\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("return numMutantsGenerated;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          {
            ObSelectionStrategy _object_19 = mut.getObject();
            if ((_object_19 instanceof SpecificClosureSelection)) {
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("ObSelectionStrategy obSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_20 = mut.getObject();
              String _name_130 = ((SpecificClosureSelection) _object_20).getObjSel().getName();
              _builder.append(_name_130, "\t\t\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_21 = mut.getObject();
              String _name_131 = ((SpecificClosureSelection) _object_21).getObjSel().getName();
              _builder.append(_name_131, "\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_22 = mut.getObject();
              String _name_132 = ((SpecificClosureSelection) _object_22).getObjSel().getName();
              _builder.append(_name_132, "\t\t\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resourcePackages = entry_");
              ObSelectionStrategy _object_23 = mut.getObject();
              String _name_133 = ((SpecificClosureSelection) _object_23).getObjSel().getName();
              _builder.append(_name_133, "\t\t\t\t");
              _builder.append(".getValue().getValue();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resources = new ArrayList<Resource>();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("resources.add(entry_");
              ObSelectionStrategy _object_24 = mut.getObject();
              String _name_134 = ((SpecificClosureSelection) _object_24).getObjSel().getName();
              _builder.append(_name_134, "\t\t\t\t");
              _builder.append(".getValue().getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificClosureSelection(entry_");
              ObSelectionStrategy _object_25 = mut.getObject();
              String _name_135 = ((SpecificClosureSelection) _object_25).getObjSel().getName();
              _builder.append(_name_135, "\t\t\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _object_26 = mut.getObject();
              String _name_136 = ((SpecificClosureSelection) _object_26).getObjSel().getName();
              _builder.append(_name_136, "\t\t\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _object_27 = mut.getObject();
              String _name_137 = ((SpecificClosureSelection) _object_27).getObjSel().getName();
              _builder.append(_name_137, "\t\t\t\t");
              _builder.append(".getKey(), \"");
              ObSelectionStrategy _object_28 = mut.getObject();
              String _name_138 = ((SpecificClosureSelection) _object_28).getRefType().getName();
              _builder.append(_name_138, "\t\t\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("return numMutantsGenerated;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("if (objectSelection.getObjects() != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("for (EObject object : objectSelection.getObjects()) {");
          _builder.newLine();
          {
            if ((this.standalone == false)) {
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
              _builder.append(this.className, "\t\t\t\t\t");
              _builder.append(".class);");
              _builder.newLineIfNotEmpty();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
          _builder.append(this.methodName, "\t\t\t\t\t");
          _builder.append(".\" + numMutantsGenerated +\".model\"));");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("ObSelectionStrategy obSelection = null;");
          _builder.newLine();
          {
            if (((mut.getObject().getRefType() != null) && mut.getObject().getRefType().isMany())) {
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("List<EObject> o = ModelManager.getReferences(\"");
              String _name_139 = mut.getObject().getRefType().getName();
              _builder.append(_name_139, "\t\t\t\t\t");
              _builder.append("\", object);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t");
              _builder.append("object = o.get(ModelManager.getRandomIndex(o);");
              _builder.newLine();
            } else {
              if (((mut.getObject().getRefType() != null) && (!mut.getObject().getRefType().isMany()))) {
                _builder.append("\t");
                _builder.append("\t\t\t\t");
                _builder.append("object = (EObject) ModelManager.getReferenced(\"");
                String _name_140 = mut.getObject().getRefType().getName();
                _builder.append(_name_140, "\t\t\t\t\t");
                _builder.append("\", object);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("object = ModelManager.getObject(resource, object);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("if (object != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("obSelection = new SpecificObjectSelection(packages, resource, object);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("SelectObjectMutator mut = new SelectObjectMutator(obSelection.getModel(), obSelection.getMetaModel(), referenceSelection, containerSelection, obSelection);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("Mutator mutator = null;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("if (muts == null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t\t");
          _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("//COUNTER: ");
          _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1), "\t\t\t\t\t\t");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("//COUNTER: ");
          _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1), "\t\t\t\t\t\t");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("//REGISTRY METHOD NAME:");
          String _string_2 = Integer.valueOf(this.nRegistryMethodCall).toString();
          String _plus_5 = ("registry" + _string_2);
          String _registryMethodName_2 = this.registryMethodName = _plus_5;
          _builder.append(_registryMethodName_2, "\t\t\t\t\t\t");
          _builder.newLineIfNotEmpty();
          {
            if ((this.executeMutation == true)) {
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("if (mut != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("Object mutated = mut.mutate();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("if (mutated != null) {");
              _builder.newLine();
              {
                String _name_141 = mut.getName();
                boolean _tripleNotEquals_24 = (_name_141 != null);
                if (_tripleNotEquals_24) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("hmObjects.put(\"");
                  String _name_142 = mut.getName();
                  _builder.append(_name_142, "\t\t\t\t\t\t\t\t");
                  _builder.append("\", entry);");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("AppMutation appMut = ");
              _builder.append(this.registryMethodName, "\t\t\t\t\t\t\t\t");
              _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("if (appMut != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t\t");
              _builder.append("muts.getMuts().add(appMut);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("mutator = mut;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("if (mutator != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t\t");
          _builder.append("//");
          _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t\t\t\t\t");
          _builder.newLineIfNotEmpty();
          {
            if ((last == false)) {
              {
                if ((this.standalone == false)) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("mutation");
                  _builder.append(this.nMethodCall, "\t\t\t\t\t\t");
                  _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                  _builder.newLine();
                } else {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("mutation");
                  _builder.append(this.nMethodCall, "\t\t\t\t\t\t");
                  _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                  _builder.newLine();
                }
              }
            }
          }
          {
            if ((last == true)) {
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("// MUTANT COMPLETION AND REGISTRY");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
              _builder.newLine();
              {
                EList<Constraint> _constraints_2 = e.getConstraints();
                for(final Constraint constraint_2 : _constraints_2) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("if (rules.get(\"");
                  String _name_143 = constraint_2.getType().getName();
                  _builder.append(_name_143, "\t\t\t\t\t\t");
                  _builder.append("\") == null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("\t");
                  _builder.append("rules.put(\"");
                  String _name_144 = constraint_2.getType().getName();
                  _builder.append(_name_144, "\t\t\t\t\t\t\t");
                  _builder.append("\", new ArrayList<String>());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("List<String> newrules = rules.get(\"");
                  String _name_145 = constraint_2.getType().getName();
                  _builder.append(_name_145, "\t\t\t\t\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  {
                    EList<InvariantCS> _expressions_4 = constraint_2.getExpressions();
                    boolean _tripleNotEquals_25 = (_expressions_4 != null);
                    if (_tripleNotEquals_25) {
                      {
                        EList<InvariantCS> _expressions_5 = constraint_2.getExpressions();
                        for(final InvariantCS expression_2 : _expressions_5) {
                          _builder.append("\t");
                          _builder.append("\t\t\t\t\t");
                          _builder.append("newrules.add(\"");
                          String _constraintText_2 = WodelUtils.getConstraintText(this.fileName, expression_2);
                          _builder.append(_constraintText_2, "\t\t\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  {
                    EList<String> _rules_4 = constraint_2.getRules();
                    boolean _tripleNotEquals_26 = (_rules_4 != null);
                    if (_tripleNotEquals_26) {
                      {
                        EList<String> _rules_5 = constraint_2.getRules();
                        for(final String rule_2 : _rules_5) {
                          _builder.append("\t");
                          _builder.append("\t\t\t\t\t");
                          _builder.append("newrules.add(\"");
                          _builder.append(rule_2, "\t\t\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("rules.put(\"");
                  String _name_146 = constraint_2.getType().getName();
                  _builder.append(_name_146, "\t\t\t\t\t\t");
                  _builder.append("\", newrules);");
                  _builder.newLineIfNotEmpty();
                }
              }
              {
                if ((b == null)) {
                  _builder.append("\t");
                  _builder.append("\t\t\t\t\t");
                  _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
                  _builder.newLine();
                } else {
                  {
                    int _size_2 = b.getFrom().size();
                    boolean _equals_3 = (_size_2 == 0);
                    if (_equals_3) {
                      _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                      String _name_147 = b.getName();
                      _builder.append(_name_147);
                      _builder.append("/Output\" + k[0] + \".model\";");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                      String _name_148 = b.getName();
                      _builder.append(_name_148);
                      _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
              {
                if ((b == null)) {
                  {
                    if ((this.standalone == false)) {
                      _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                      _builder.newLine();
                    } else {
                      _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                      String _projectName_5 = this.getProjectName();
                      _builder.append(_projectName_5);
                      _builder.append("\", serialize, test, classes, ");
                      _builder.append(this.className);
                      _builder.append(".class, true);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                } else {
                  {
                    if ((this.standalone == false)) {
                      _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                      String _name_149 = b.getName();
                      _builder.append(_name_149);
                      _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                      String _name_150 = b.getName();
                      _builder.append(_name_150);
                      _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                      String _projectName_6 = this.getProjectName();
                      _builder.append(_projectName_6);
                      _builder.append("\", serialize, test, classes, ");
                      _builder.append(this.className);
                      _builder.append(".class, true, false);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("if (isRepeated == false) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("numMutantsGenerated++;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("monitor.worked(1);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t\t");
              _builder.append("k[0] = k[0] + 1;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("\t");
              _builder.append("muts = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("if (objectSelection.getObject() != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("EObject object = objectSelection.getObject();");
          _builder.newLine();
          {
            if ((this.standalone == false)) {
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
              _builder.append(this.className, "\t\t\t");
              _builder.append(".class);");
              _builder.newLineIfNotEmpty();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
          _builder.append(this.methodName, "\t\t\t");
          _builder.append(".\" + numMutantsGenerated +\".model\"));");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("ObSelectionStrategy obSelection = null;");
          _builder.newLine();
          {
            if (((mut.getObject().getRefType() != null) && mut.getObject().getRefType().isMany())) {
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("List<EObject> o = ModelManager.getReferences(\"");
              String _name_151 = mut.getObject().getRefType().getName();
              _builder.append(_name_151, "\t\t\t");
              _builder.append("\", object);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
              _builder.newLine();
            } else {
              if (((mut.getObject().getRefType() != null) && (!mut.getObject().getRefType().isMany()))) {
                _builder.append("\t");
                _builder.append("\t\t");
                _builder.append("object = (EObject) ModelManager.getReferenced(\"");
                String _name_152 = mut.getObject().getRefType().getName();
                _builder.append(_name_152, "\t\t\t");
                _builder.append("\", object);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("object = ModelManager.getObject(resource, object);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("if (object != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("obSelection = new SpecificObjectSelection(packages, resource, object);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("SelectObjectMutator mut = new SelectObjectMutator(obSelection.getModel(), obSelection.getMetaModel(), referenceSelection, containerSelection, obSelection);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("Mutator mutator = null;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("if (muts == null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t\t");
          _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("}");
          _builder.newLine();
          {
            if ((this.executeMutation == true)) {
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("if (mut != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("Object mutated = mut.mutate();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("if (mutated != null) {");
              _builder.newLine();
              {
                String _name_153 = mut.getName();
                boolean _tripleNotEquals_27 = (_name_153 != null);
                if (_tripleNotEquals_27) {
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("hmObjects.put(\"");
                  String _name_154 = mut.getName();
                  _builder.append(_name_154, "\t\t\t\t\t\t");
                  _builder.append("\", entry);");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("AppMutation appMut = ");
              _builder.append(this.registryMethodName, "\t\t\t\t\t\t");
              _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("if (appMut != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t\t");
              _builder.append("muts.getMuts().add(appMut);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("mutator = mut;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("if (mutator != null) {");
          _builder.newLine();
          {
            if ((last == false)) {
              {
                if ((this.standalone == false)) {
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("mutation");
                  _builder.append(this.nMethodCall, "\t\t\t\t");
                  _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                  _builder.newLine();
                } else {
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("mutation");
                  _builder.append(this.nMethodCall, "\t\t\t\t");
                  _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t\t");
                  _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                  _builder.newLine();
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("numMutantsGenerated = k[0];");
              _builder.newLine();
            }
          }
          {
            if ((last == true)) {
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("// MUTANT COMPLETION AND REGISTRY");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
              _builder.newLine();
              {
                EList<Constraint> _constraints_3 = e.getConstraints();
                for(final Constraint constraint_3 : _constraints_3) {
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("if (rules.get(\"");
                  String _name_155 = constraint_3.getType().getName();
                  _builder.append(_name_155, "\t\t\t\t");
                  _builder.append("\") == null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("\t");
                  _builder.append("rules.put(\"");
                  String _name_156 = constraint_3.getType().getName();
                  _builder.append(_name_156, "\t\t\t\t\t");
                  _builder.append("\", new ArrayList<String>());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("List<String> newrules = rules.get(\"");
                  String _name_157 = constraint_3.getType().getName();
                  _builder.append(_name_157, "\t\t\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  {
                    EList<InvariantCS> _expressions_6 = constraint_3.getExpressions();
                    boolean _tripleNotEquals_28 = (_expressions_6 != null);
                    if (_tripleNotEquals_28) {
                      {
                        EList<InvariantCS> _expressions_7 = constraint_3.getExpressions();
                        for(final InvariantCS expression_3 : _expressions_7) {
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("newrules.add(\"");
                          String _constraintText_3 = WodelUtils.getConstraintText(this.fileName, expression_3);
                          _builder.append(_constraintText_3, "\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  {
                    EList<String> _rules_6 = constraint_3.getRules();
                    boolean _tripleNotEquals_29 = (_rules_6 != null);
                    if (_tripleNotEquals_29) {
                      {
                        EList<String> _rules_7 = constraint_3.getRules();
                        for(final String rule_3 : _rules_7) {
                          _builder.append("\t");
                          _builder.append("\t\t\t");
                          _builder.append("newrules.add(\"");
                          _builder.append(rule_3, "\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("rules.put(\"");
                  String _name_158 = constraint_3.getType().getName();
                  _builder.append(_name_158, "\t\t\t\t");
                  _builder.append("\", newrules);");
                  _builder.newLineIfNotEmpty();
                }
              }
              {
                if ((b == null)) {
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
                  _builder.newLine();
                } else {
                  {
                    int _size_3 = b.getFrom().size();
                    boolean _equals_4 = (_size_3 == 0);
                    if (_equals_4) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                      String _name_159 = b.getName();
                      _builder.append(_name_159, "\t\t\t\t");
                      _builder.append("/Output\" + k[0] + \".model\";");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                      String _name_160 = b.getName();
                      _builder.append(_name_160, "\t\t\t\t");
                      _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
              {
                if ((b == null)) {
                  {
                    if ((this.standalone == false)) {
                      _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                      _builder.newLine();
                    } else {
                      _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                      String _projectName_7 = this.getProjectName();
                      _builder.append(_projectName_7);
                      _builder.append("\", serialize, test, classes, ");
                      _builder.append(this.className);
                      _builder.append(".class, true);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                } else {
                  {
                    if ((this.standalone == false)) {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                      String _name_161 = b.getName();
                      _builder.append(_name_161, "\t\t\t\t");
                      _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("\t\t\t");
                      _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                      String _name_162 = b.getName();
                      _builder.append(_name_162, "\t\t\t\t");
                      _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                      String _projectName_8 = this.getProjectName();
                      _builder.append(_projectName_8, "\t\t\t\t");
                      _builder.append("\", serialize, test, classes, ");
                      _builder.append(this.className, "\t\t\t\t");
                      _builder.append(".class, true, false);");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("if (isRepeated == false) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("numMutantsGenerated++;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("monitor.worked(1);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t\t");
              _builder.append("k[0] = k[0] + 1;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("\t");
              _builder.append("muts = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        }
      }
    }
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END SELECT OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence selectSampleMutator(final SelectSampleMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append(" \t\t");
    _builder.append("//SELECT SAMPLE OBJECT ");
    _builder.append(this.methodName, " \t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("List<EPackage> resourcePackages = packages;");
    _builder.newLine();
    _builder.append("List<Resource> resources = new ArrayList<Resource>();");
    _builder.newLine();
    _builder.append("resources.add(model);");
    _builder.newLine();
    _builder.append("SpecificReferenceSelection referenceSelection = null;");
    _builder.newLine();
    {
      String _resource = mut.getObject().getResource();
      boolean _tripleEquals = (_resource == null);
      if (_tripleEquals) {
        {
          if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
            {
              ObSelectionStrategy _object = mut.getObject();
              if ((_object instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _object_1 = mut.getObject();
                String _name = ((RandomTypeSelection) _object_1).getType().getName();
                _builder.append(_name, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              ObSelectionStrategy _object_2 = mut.getObject();
              if ((_object_2 instanceof CompleteTypeSelection)) {
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _object_3 = mut.getObject();
                String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
                _builder.append(_name_1, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              Expression _expression = mut.getObject().getExpression();
              boolean _tripleEquals_1 = (_expression == null);
              if (_tripleEquals_1) {
                _builder.append("\t");
                _builder.append("EObject object = rts.getObject();");
                _builder.newLine();
              } else {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList = new ArrayList<Integer>();
                List<Integer> _expressionList = this.expressionList = _arrayList;
                _builder.append(_expressionList, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get = this.expressionList.get(0);
                _builder.append(_get, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Object _method = this.method(mut.getObject().getExpression(), 0);
                _builder.append(_method, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                Integer _get_1 = this.expressionList.get(0);
                _builder.append(_get_1, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_4 = mut.getObject();
                  if ((_object_4 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("EObject object = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (selectedObjects.size() > 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  ObSelectionStrategy _object_5 = mut.getObject();
                  if ((_object_5 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("objects = selectedObjects;");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              ObSelectionStrategy _object_6 = mut.getObject();
              if ((_object_6 instanceof RandomTypeSelection)) {
                _builder.append("ObSelectionStrategy objectSelection = null; ");
                _builder.newLine();
                _builder.append("if (object != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("objectSelection = new SpecificObjectSelection(packages, model, object);");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          } else {
            ObSelectionStrategy _object_7 = mut.getObject();
            if ((_object_7 instanceof CompleteTypeSelection)) {
              _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
              ObSelectionStrategy _object_8 = mut.getObject();
              String _name_2 = ((CompleteTypeSelection) _object_8).getType().getName();
              _builder.append(_name_2);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("EObject object = rts.getObject();");
              _builder.newLine();
              _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
              _builder.newLine();
            } else {
              ObSelectionStrategy _object_9 = mut.getObject();
              if ((_object_9 instanceof SpecificObjectSelection)) {
                _builder.append("ObSelectionStrategy objectSelection = null;");
                _builder.newLine();
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _object_10 = mut.getObject();
                String _name_3 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
                _builder.append(_name_3);
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _object_11 = mut.getObject();
                String _name_4 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
                _builder.append(_name_4);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (entry_");
                ObSelectionStrategy _object_12 = mut.getObject();
                String _name_5 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
                _builder.append(_name_5);
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("resourcePackages = entry_");
                ObSelectionStrategy _object_13 = mut.getObject();
                String _name_6 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
                _builder.append(_name_6, "\t");
                _builder.append(".getValue().getValue();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("resources = new ArrayList<Resource>();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("resources.add(entry_");
                ObSelectionStrategy _object_14 = mut.getObject();
                String _name_7 = ((SpecificObjectSelection) _object_14).getObjSel().getName();
                _builder.append(_name_7, "\t");
                _builder.append(".getValue().getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("objectSelection = new SpecificObjectSelection(entry_");
                ObSelectionStrategy _object_15 = mut.getObject();
                String _name_8 = ((SpecificObjectSelection) _object_15).getObjSel().getName();
                _builder.append(_name_8, "\t");
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _object_16 = mut.getObject();
                String _name_9 = ((SpecificObjectSelection) _object_16).getObjSel().getName();
                _builder.append(_name_9, "\t");
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _object_17 = mut.getObject();
                String _name_10 = ((SpecificObjectSelection) _object_17).getObjSel().getName();
                _builder.append(_name_10, "\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                ObSelectionStrategy _object_18 = mut.getObject();
                String _name_11 = ((SpecificObjectSelection) _object_18).getObjSel().getName();
                _builder.append(_name_11, "\t");
                _builder.append(" = hmList.get(\"");
                ObSelectionStrategy _object_19 = mut.getObject();
                String _name_12 = ((SpecificObjectSelection) _object_19).getObjSel().getName();
                _builder.append(_name_12, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("if (listEntry_");
                ObSelectionStrategy _object_20 = mut.getObject();
                String _name_13 = ((SpecificObjectSelection) _object_20).getObjSel().getName();
                _builder.append(_name_13, "\t");
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("resourcePackages = listEntry_");
                ObSelectionStrategy _object_21 = mut.getObject();
                String _name_14 = ((SpecificObjectSelection) _object_21).getObjSel().getName();
                _builder.append(_name_14, "\t\t");
                _builder.append(".get(0).getValue().getValue();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("resources = new ArrayList<Resource>();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("resources.add(listEntry_");
                ObSelectionStrategy _object_22 = mut.getObject();
                String _name_15 = ((SpecificObjectSelection) _object_22).getObjSel().getName();
                _builder.append(_name_15, "\t\t");
                _builder.append(".get(0).getValue().getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                ObSelectionStrategy _object_23 = mut.getObject();
                String _name_16 = ((SpecificObjectSelection) _object_23).getObjSel().getName();
                _builder.append(_name_16, "\t\t");
                _builder.append(") {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t\t");
                _builder.append("EObject obj = ent.getKey();");
                _builder.newLine();
                _builder.append("\t\t\t");
                _builder.append("objs.add(obj);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
                ObSelectionStrategy _object_24 = mut.getObject();
                String _name_17 = ((SpecificObjectSelection) _object_24).getObjSel().getName();
                _builder.append(_name_17, "\t\t");
                _builder.append(".get(0).getValue().getValue(), listEntry_");
                ObSelectionStrategy _object_25 = mut.getObject();
                String _name_18 = ((SpecificObjectSelection) _object_25).getObjSel().getName();
                _builder.append(_name_18, "\t\t");
                _builder.append(".get(0).getValue().getKey(), objs);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              } else {
                ObSelectionStrategy _object_26 = mut.getObject();
                if ((_object_26 instanceof SpecificClosureSelection)) {
                  _builder.append("ObSelectionStrategy objectSelection = null;");
                  _builder.newLine();
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  ObSelectionStrategy _object_27 = mut.getObject();
                  String _name_19 = ((SpecificClosureSelection) _object_27).getObjSel().getName();
                  _builder.append(_name_19);
                  _builder.append(" = hmObjects.get(\"");
                  ObSelectionStrategy _object_28 = mut.getObject();
                  String _name_20 = ((SpecificClosureSelection) _object_28).getObjSel().getName();
                  _builder.append(_name_20);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("if (entry_");
                  ObSelectionStrategy _object_29 = mut.getObject();
                  String _name_21 = ((SpecificClosureSelection) _object_29).getObjSel().getName();
                  _builder.append(_name_21);
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("resourcePackages = entry_");
                  ObSelectionStrategy _object_30 = mut.getObject();
                  String _name_22 = ((SpecificClosureSelection) _object_30).getObjSel().getName();
                  _builder.append(_name_22, "\t");
                  _builder.append(".getValue().getValue();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("resources = new ArrayList<Resource>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("resources.add(entry_");
                  ObSelectionStrategy _object_31 = mut.getObject();
                  String _name_23 = ((SpecificClosureSelection) _object_31).getObjSel().getName();
                  _builder.append(_name_23, "\t");
                  _builder.append(".getValue().getKey());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("objectSelection = new SpecificClosureSelection(entry_");
                  ObSelectionStrategy _object_32 = mut.getObject();
                  String _name_24 = ((SpecificClosureSelection) _object_32).getObjSel().getName();
                  _builder.append(_name_24, "\t");
                  _builder.append(".getValue().getValue(), entry_");
                  ObSelectionStrategy _object_33 = mut.getObject();
                  String _name_25 = ((SpecificClosureSelection) _object_33).getObjSel().getName();
                  _builder.append(_name_25, "\t");
                  _builder.append(".getValue().getKey(), entry_");
                  ObSelectionStrategy _object_34 = mut.getObject();
                  String _name_26 = ((SpecificClosureSelection) _object_34).getObjSel().getName();
                  _builder.append(_name_26, "\t");
                  _builder.append(".getKey(), \"");
                  ObSelectionStrategy _object_35 = mut.getObject();
                  String _name_27 = ((SpecificClosureSelection) _object_35).getRefType().getName();
                  _builder.append(_name_27, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("} else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("return mutations;");
                  _builder.newLine();
                  _builder.append("}");
                  _builder.newLine();
                } else {
                  _builder.append("List<EObject> objects = ModelManager.getParentObjects(packages, model, \"");
                  String _name_28 = mut.getType().getName();
                  _builder.append(_name_28);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("EObject container = containers.get(ModelManager.getRandomIndex(objects));");
                  _builder.newLine();
                  _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
                  _builder.newLine();
                }
              }
            }
          }
        }
        _builder.append("if (objectSelection != null) {");
        _builder.newLine();
        {
          EReference _refType = mut.getObject().getRefType();
          boolean _tripleNotEquals = (_refType != null);
          if (_tripleNotEquals) {
            _builder.append("referenceSelection = new SpecificReferenceSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            String _name_29 = mut.getObject().getRefType().getName();
            _builder.append(_name_29);
            _builder.append("\", objectSelection.getObject());");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("referenceSelection = new SpecificReferenceSelection(objectSelection.getMetaModel(), model, null, null);");
            _builder.newLine();
          }
        }
        _builder.append("}");
        _builder.newLine();
        _builder.append("List<String> features = new ArrayList<String>();");
        _builder.newLine();
        {
          SampleClause _clause = mut.getClause();
          boolean _equals = Objects.equal(_clause, SampleClause.EQUALS);
          if (_equals) {
            _builder.append("boolean equals = true;");
            _builder.newLine();
          }
        }
        {
          SampleClause _clause_1 = mut.getClause();
          boolean _equals_1 = Objects.equal(_clause_1, SampleClause.DISTINCT);
          if (_equals_1) {
            _builder.append("boolean equals = false;");
            _builder.newLine();
          }
        }
        {
          int _size = mut.getFeatures().size();
          boolean _greaterThan = (_size > 0);
          if (_greaterThan) {
            {
              EList<EStructuralFeature> _features = mut.getFeatures();
              for(final EStructuralFeature feature : _features) {
                _builder.append("if (!features.contains(\"");
                String _name_30 = feature.getName();
                _builder.append(_name_30);
                _builder.append("\")) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("features.add(\"");
                String _name_31 = feature.getName();
                _builder.append(_name_31, "\t");
                _builder.append("\");\t");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
              }
            }
          } else {
            _builder.append("equals = false;");
            _builder.newLine();
          }
        }
        {
          Expression _expression_1 = mut.getObject().getExpression();
          boolean _tripleNotEquals_1 = (_expression_1 != null);
          if (_tripleNotEquals_1) {
            {
              Evaluation _first = mut.getObject().getExpression().getFirst();
              if ((_first instanceof ReferenceEvaluation)) {
                _builder.append("//");
                Evaluation _first_1 = mut.getObject().getExpression().getFirst();
                ReferenceEvaluation ev = ((ReferenceEvaluation) _first_1);
                _builder.newLineIfNotEmpty();
                _builder.append("if (!features.contains(\"");
                String _name_32 = ev.getName().getName();
                _builder.append(_name_32);
                _builder.append("\")) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("features.add(\"");
                String _name_33 = ev.getName().getName();
                _builder.append(_name_33, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              Evaluation _first_2 = mut.getObject().getExpression().getFirst();
              if ((_first_2 instanceof AttributeEvaluation)) {
                _builder.append("//");
                Evaluation _first_3 = mut.getObject().getExpression().getFirst();
                AttributeEvaluation ev_1 = ((AttributeEvaluation) _first_3);
                _builder.newLineIfNotEmpty();
                _builder.append("if (!features.contains(\"");
                String _name_34 = ev_1.getName().getName();
                _builder.append(_name_34);
                _builder.append("\")) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("features.add(\"");
                String _name_35 = ev_1.getName().getName();
                _builder.append(_name_35, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
              }
            }
            {
              if (((mut.getObject().getExpression().getSecond() != null) && (mut.getObject().getExpression().getSecond().size() > 0))) {
                {
                  EList<Evaluation> _second = mut.getObject().getExpression().getSecond();
                  for(final Evaluation ev_2 : _second) {
                    {
                      if ((ev_2 instanceof ReferenceEvaluation)) {
                        _builder.append("if (!features.contains(\"");
                        String _name_36 = ((ReferenceEvaluation)ev_2).getName().getName();
                        _builder.append(_name_36);
                        _builder.append("\")) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("features.add(\"");
                        String _name_37 = ((ReferenceEvaluation)ev_2).getName().getName();
                        _builder.append(_name_37, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                    {
                      if ((ev_2 instanceof AttributeEvaluation)) {
                        _builder.append("if (!features.contains(\"");
                        String _name_38 = ((AttributeEvaluation)ev_2).getName().getName();
                        _builder.append(_name_38);
                        _builder.append("\")) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("features.add(\"");
                        String _name_39 = ((AttributeEvaluation)ev_2).getName().getName();
                        _builder.append(_name_39, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        _builder.append("//");
        final List<String> resourceURIs = new ArrayList<String>();
        _builder.newLineIfNotEmpty();
        _builder.append("//");
        final List<String> ecoreURIs = new ArrayList<String>();
        _builder.newLineIfNotEmpty();
        _builder.append("//");
        final String resourceName = mut.getObject().getResource();
        _builder.newLineIfNotEmpty();
        _builder.append("//");
        Resource resource = null;
        _builder.newLineIfNotEmpty();
        {
          EList<Resource> _resources = this.program.getResources();
          for(final Resource res : _resources) {
            {
              boolean _equals_2 = res.getName().equals(resourceName);
              if (_equals_2) {
                _builder.append("//");
                _builder.append(resource = res);
                _builder.append(" ");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((resource != null)) {
            _builder.append("\t");
            _builder.append("//");
            final Source source = resource.getPath();
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//");
            String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath();
            String _plus = (_workspaceAbsolutePath + "/");
            String _projectName = this.getProjectName();
            String _plus_1 = (_plus + _projectName);
            String _plus_2 = (_plus_1 + "/");
            String _path = source.getPath();
            final String resourcePath = (_plus_2 + _path);
            _builder.newLineIfNotEmpty();
            {
              File[] _listFiles = new File(resourcePath).listFiles();
              for(final File resourceFile : _listFiles) {
                {
                  boolean _endsWith = resourceFile.getName().endsWith(".model");
                  if (_endsWith) {
                    _builder.append("\t");
                    _builder.append("//");
                    boolean _add_1 = resourceURIs.add(resourceFile.getPath());
                    _builder.append(_add_1, "\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  boolean _endsWith_1 = resourceFile.getName().endsWith(".ecore");
                  if (_endsWith_1) {
                    _builder.append("\t");
                    _builder.append("//");
                    boolean _add_2 = ecoreURIs.add(resourceFile.getPath());
                    _builder.append(_add_2, "\t");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t");
            _builder.append("//");
            final String metamodelPath = resource.getMetamodel().replace("\\", "/");
            _builder.newLineIfNotEmpty();
            {
              if ((this.standalone == false)) {
                _builder.append("\t");
                _builder.append("List<EPackage> resourcePackages = ModelManager.loadMetaModel(\"");
                _builder.append(metamodelPath, "\t");
                _builder.append("\", this.getClass());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("List<EPackage> resourcePackages = ModelManager.loadMetaModel(\"");
                _builder.append(metamodelPath, "\t");
                _builder.append("\", ");
                _builder.append(this.className, "\t");
                _builder.append(".class);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t");
            _builder.append("List<Resource> resources = new ArrayList<Resource>();");
            _builder.newLine();
            {
              for(final String resourceURI : resourceURIs) {
                {
                  if ((this.standalone == false)) {
                    _builder.append("\t");
                    _builder.append("resources.add(ModelManager.loadModel(resourcePackages, URI.createURI(\"file:/\" + \"");
                    _builder.append(resourceURI, "\t");
                    _builder.append("\").toFileString()));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("resources.add(ModelManager.loadModelNoException(resourcePackages, URI.createURI(\"file:/\" + \"");
                    _builder.append(resourceURI, "\t");
                    _builder.append("\").toFileString()));");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              for(final String ecoreURI : ecoreURIs) {
                _builder.append("\t");
                _builder.append("//");
                final String ecoreURI2 = ecoreURI.replace("\\", "/");
                _builder.newLineIfNotEmpty();
                {
                  if ((this.standalone == false)) {
                    _builder.append("\t");
                    _builder.append("resources.add(ModelManager.loadMetaModelAsResource(resourcePackages, \"");
                    _builder.append(ecoreURI2, "\t");
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("resources.add(ModelManager.loadMetaModelAsResourceNoException(resourcePackages, \"file:/");
                    _builder.append(ecoreURI2, "\t");
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
                {
                  ObSelectionStrategy _object_36 = mut.getObject();
                  if ((_object_36 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                    ObSelectionStrategy _object_37 = mut.getObject();
                    String _name_40 = ((RandomTypeSelection) _object_37).getType().getName();
                    _builder.append(_name_40, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_38 = mut.getObject();
                  if ((_object_38 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                    ObSelectionStrategy _object_39 = mut.getObject();
                    String _name_41 = ((CompleteTypeSelection) _object_39).getType().getName();
                    _builder.append(_name_41, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  Expression _expression_2 = mut.getObject().getExpression();
                  boolean _tripleEquals_2 = (_expression_2 == null);
                  if (_tripleEquals_2) {
                    _builder.append("\t");
                    _builder.append("EObject object = rts.getObject();");
                    _builder.newLine();
                  } else {
                    _builder.append("\t");
                    _builder.append("List<EObject> objects = rts.getObjects();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LIST: ");
                    ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
                    List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
                    _builder.append(_expressionList_1, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    _builder.append(this.nExpression = 0, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("//EXPRESSION LEVEL: ");
                    boolean _add_3 = this.expressionList.add(Integer.valueOf(0));
                    _builder.append(_add_3, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("Expression exp");
                    Integer _get_2 = this.expressionList.get(0);
                    _builder.append(_get_2, "\t");
                    _builder.append(" = new Expression();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    Object _method_1 = this.method(mut.getObject().getExpression(), 0);
                    _builder.append(_method_1, "\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                    Integer _get_3 = this.expressionList.get(0);
                    _builder.append(_get_3, "\t");
                    _builder.append(");");
                    _builder.newLineIfNotEmpty();
                    {
                      ObSelectionStrategy _object_40 = mut.getObject();
                      if ((_object_40 instanceof RandomTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("EObject object = null;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("if (selectedObjects.size() > 0) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                      }
                    }
                    {
                      ObSelectionStrategy _object_41 = mut.getObject();
                      if ((_object_41 instanceof CompleteTypeSelection)) {
                        _builder.append("\t");
                        _builder.append("objects = selectedObjects;");
                        _builder.newLine();
                      }
                    }
                  }
                }
                {
                  ObSelectionStrategy _object_42 = mut.getObject();
                  if ((_object_42 instanceof RandomTypeSelection)) {
                    _builder.append("ObSelectionStrategy objectSelection = null; ");
                    _builder.newLine();
                    _builder.append("if (object != null) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("objectSelection = new SpecificObjectSelection(resourcePackages, resources, object);");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
              } else {
                ObSelectionStrategy _object_43 = mut.getObject();
                if ((_object_43 instanceof CompleteTypeSelection)) {
                  _builder.append("RandomTypeSelection rts = new RandomTypeSelection(resourcePackages, resources, \"");
                  ObSelectionStrategy _object_44 = mut.getObject();
                  String _name_42 = ((CompleteTypeSelection) _object_44).getType().getName();
                  _builder.append(_name_42);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("EObject object = rts.getObject();");
                  _builder.newLine();
                  _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(resourcePackages, resources, object);");
                  _builder.newLine();
                } else {
                  ObSelectionStrategy _object_45 = mut.getObject();
                  if ((_object_45 instanceof SpecificObjectSelection)) {
                    _builder.append("ObSelectionStrategy objectSelection = null;");
                    _builder.newLine();
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _object_46 = mut.getObject();
                    String _name_43 = ((SpecificObjectSelection) _object_46).getObjSel().getName();
                    _builder.append(_name_43);
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _object_47 = mut.getObject();
                    String _name_44 = ((SpecificObjectSelection) _object_47).getObjSel().getName();
                    _builder.append(_name_44);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (entry_");
                    ObSelectionStrategy _object_48 = mut.getObject();
                    String _name_45 = ((SpecificObjectSelection) _object_48).getObjSel().getName();
                    _builder.append(_name_45);
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("resourcePackages = entry_");
                    ObSelectionStrategy _object_49 = mut.getObject();
                    String _name_46 = ((SpecificObjectSelection) _object_49).getObjSel().getName();
                    _builder.append(_name_46, "\t");
                    _builder.append(".getValue().getValue();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("resources = new ArrayList<Resource>();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("resources.add(entry_");
                    ObSelectionStrategy _object_50 = mut.getObject();
                    String _name_47 = ((SpecificObjectSelection) _object_50).getObjSel().getName();
                    _builder.append(_name_47, "\t");
                    _builder.append(".getValue().getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("objectSelection = new SpecificObjectSelection(entry_");
                    ObSelectionStrategy _object_51 = mut.getObject();
                    String _name_48 = ((SpecificObjectSelection) _object_51).getObjSel().getName();
                    _builder.append(_name_48, "\t");
                    _builder.append(".getValue().getValue(), entry_");
                    ObSelectionStrategy _object_52 = mut.getObject();
                    String _name_49 = ((SpecificObjectSelection) _object_52).getObjSel().getName();
                    _builder.append(_name_49, "\t");
                    _builder.append(".getValue().getKey(), entry_");
                    ObSelectionStrategy _object_53 = mut.getObject();
                    String _name_50 = ((SpecificObjectSelection) _object_53).getObjSel().getName();
                    _builder.append(_name_50, "\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("} else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                    ObSelectionStrategy _object_54 = mut.getObject();
                    String _name_51 = ((SpecificObjectSelection) _object_54).getObjSel().getName();
                    _builder.append(_name_51, "\t");
                    _builder.append(" = hmList.get(\"");
                    ObSelectionStrategy _object_55 = mut.getObject();
                    String _name_52 = ((SpecificObjectSelection) _object_55).getObjSel().getName();
                    _builder.append(_name_52, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("if (listEntry_");
                    ObSelectionStrategy _object_56 = mut.getObject();
                    String _name_53 = ((SpecificObjectSelection) _object_56).getObjSel().getName();
                    _builder.append(_name_53, "\t");
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("resourcePackages = listEntry_");
                    ObSelectionStrategy _object_57 = mut.getObject();
                    String _name_54 = ((SpecificObjectSelection) _object_57).getObjSel().getName();
                    _builder.append(_name_54, "\t\t");
                    _builder.append(".get(0).getValue().getValue();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("resources = new ArrayList<Resource>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("resources.add(listEntry_");
                    ObSelectionStrategy _object_58 = mut.getObject();
                    String _name_55 = ((SpecificObjectSelection) _object_58).getObjSel().getName();
                    _builder.append(_name_55, "\t\t");
                    _builder.append(".get(0).getValue().getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                    ObSelectionStrategy _object_59 = mut.getObject();
                    String _name_56 = ((SpecificObjectSelection) _object_59).getObjSel().getName();
                    _builder.append(_name_56, "\t\t");
                    _builder.append(") {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t\t");
                    _builder.append("EObject obj = ent.getKey();");
                    _builder.newLine();
                    _builder.append("\t\t\t");
                    _builder.append("objs.add(obj);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
                    ObSelectionStrategy _object_60 = mut.getObject();
                    String _name_57 = ((SpecificObjectSelection) _object_60).getObjSel().getName();
                    _builder.append(_name_57, "\t\t");
                    _builder.append(".get(0).getValue().getValue(), listEntry_");
                    ObSelectionStrategy _object_61 = mut.getObject();
                    String _name_58 = ((SpecificObjectSelection) _object_61).getObjSel().getName();
                    _builder.append(_name_58, "\t\t");
                    _builder.append(".get(0).getValue().getKey(), objs);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("return mutations;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("}");
                    _builder.newLine();
                  } else {
                    ObSelectionStrategy _object_62 = mut.getObject();
                    if ((_object_62 instanceof SpecificClosureSelection)) {
                      _builder.append("ObSelectionStrategy objectSelection = null;");
                      _builder.newLine();
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _object_63 = mut.getObject();
                      String _name_59 = ((SpecificClosureSelection) _object_63).getObjSel().getName();
                      _builder.append(_name_59);
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _object_64 = mut.getObject();
                      String _name_60 = ((SpecificClosureSelection) _object_64).getObjSel().getName();
                      _builder.append(_name_60);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("if (entry_");
                      ObSelectionStrategy _object_65 = mut.getObject();
                      String _name_61 = ((SpecificClosureSelection) _object_65).getObjSel().getName();
                      _builder.append(_name_61);
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("resourcePackages = entry_");
                      ObSelectionStrategy _object_66 = mut.getObject();
                      String _name_62 = ((SpecificObjectSelection) _object_66).getObjSel().getName();
                      _builder.append(_name_62, "\t");
                      _builder.append(".getValue().getValue();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("resources = new ArrayList<Resource>();");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("resources.add(entry_");
                      ObSelectionStrategy _object_67 = mut.getObject();
                      String _name_63 = ((SpecificObjectSelection) _object_67).getObjSel().getName();
                      _builder.append(_name_63, "\t");
                      _builder.append(".getValue().getKey());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("objectSelection = new SpecificClosureSelection(entry_");
                      ObSelectionStrategy _object_68 = mut.getObject();
                      String _name_64 = ((SpecificClosureSelection) _object_68).getObjSel().getName();
                      _builder.append(_name_64, "\t");
                      _builder.append(".getValue().getValue(), entry_");
                      ObSelectionStrategy _object_69 = mut.getObject();
                      String _name_65 = ((SpecificClosureSelection) _object_69).getObjSel().getName();
                      _builder.append(_name_65, "\t");
                      _builder.append(".getValue().getKey(), entry_");
                      ObSelectionStrategy _object_70 = mut.getObject();
                      String _name_66 = ((SpecificClosureSelection) _object_70).getObjSel().getName();
                      _builder.append(_name_66, "\t");
                      _builder.append(".getKey(), \"");
                      ObSelectionStrategy _object_71 = mut.getObject();
                      String _name_67 = ((SpecificClosureSelection) _object_71).getRefType().getName();
                      _builder.append(_name_67, "\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("return mutations;");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    } else {
                      _builder.append("List<EObject> objects = ModelManager.getParentObjects(packages, model, \"");
                      String _name_68 = mut.getType().getName();
                      _builder.append(_name_68);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("EObject container = containers.get(ModelManager.getRandomIndex(objects));");
                      _builder.newLine();
                      _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
            _builder.append("if (objectSelection != null) {");
            _builder.newLine();
            {
              EReference _refType_1 = mut.getObject().getRefType();
              boolean _tripleNotEquals_2 = (_refType_1 != null);
              if (_tripleNotEquals_2) {
                _builder.append("referenceSelection = new SpecificReferenceSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
                String _name_69 = mut.getObject().getRefType().getName();
                _builder.append(_name_69);
                _builder.append("\", objectSelection.getObject());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("referenceSelection = new SpecificReferenceSelection(objectSelection.getMetaModel(), model, null, null);");
                _builder.newLine();
              }
            }
            _builder.append("}");
            _builder.newLine();
            _builder.append("List<String> features = new ArrayList<String>();");
            _builder.newLine();
            {
              SampleClause _clause_2 = mut.getClause();
              boolean _equals_3 = Objects.equal(_clause_2, SampleClause.EQUALS);
              if (_equals_3) {
                _builder.append("boolean equals = true;");
                _builder.newLine();
              }
            }
            {
              SampleClause _clause_3 = mut.getClause();
              boolean _equals_4 = Objects.equal(_clause_3, SampleClause.DISTINCT);
              if (_equals_4) {
                _builder.append("boolean equals = false;");
                _builder.newLine();
              }
            }
            {
              int _size_1 = mut.getFeatures().size();
              boolean _greaterThan_1 = (_size_1 > 0);
              if (_greaterThan_1) {
                {
                  EList<EStructuralFeature> _features_1 = mut.getFeatures();
                  for(final EStructuralFeature feature_1 : _features_1) {
                    _builder.append("if (!features.contains(\"");
                    String _name_70 = feature_1.getName();
                    _builder.append(_name_70);
                    _builder.append("\")) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("features.add(\"");
                    String _name_71 = feature_1.getName();
                    _builder.append(_name_71, "\t");
                    _builder.append("\");\t");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
              } else {
                _builder.append("equals = false;");
                _builder.newLine();
              }
            }
            {
              Expression _expression_3 = mut.getObject().getExpression();
              boolean _tripleNotEquals_3 = (_expression_3 != null);
              if (_tripleNotEquals_3) {
                {
                  Evaluation _first_4 = mut.getObject().getExpression().getFirst();
                  if ((_first_4 instanceof ReferenceEvaluation)) {
                    _builder.append("//");
                    Evaluation _first_5 = mut.getObject().getExpression().getFirst();
                    ReferenceEvaluation ev_3 = ((ReferenceEvaluation) _first_5);
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (!features.contains(\"");
                    String _name_72 = ev_3.getName().getName();
                    _builder.append(_name_72);
                    _builder.append("\")) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("features.add(\"");
                    String _name_73 = ev_3.getName().getName();
                    _builder.append(_name_73, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  Evaluation _first_6 = mut.getObject().getExpression().getFirst();
                  if ((_first_6 instanceof AttributeEvaluation)) {
                    _builder.append("//");
                    Evaluation _first_7 = mut.getObject().getExpression().getFirst();
                    AttributeEvaluation ev_4 = ((AttributeEvaluation) _first_7);
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (!features.contains(\"");
                    String _name_74 = ev_4.getName().getName();
                    _builder.append(_name_74);
                    _builder.append("\")) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("features.add(\"");
                    String _name_75 = ev_4.getName().getName();
                    _builder.append(_name_75, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  if (((mut.getObject().getExpression().getSecond() != null) && (mut.getObject().getExpression().getSecond().size() > 0))) {
                    {
                      EList<Evaluation> _second_1 = mut.getObject().getExpression().getSecond();
                      for(final Evaluation ev_5 : _second_1) {
                        {
                          if ((ev_5 instanceof ReferenceEvaluation)) {
                            _builder.append("if (!features.contains(\"");
                            String _name_76 = ((ReferenceEvaluation)ev_5).getName().getName();
                            _builder.append(_name_76);
                            _builder.append("\")) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("features.add(\"");
                            String _name_77 = ((ReferenceEvaluation)ev_5).getName().getName();
                            _builder.append(_name_77, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("}");
                            _builder.newLine();
                          }
                        }
                        {
                          if ((ev_5 instanceof AttributeEvaluation)) {
                            _builder.append("if (!features.contains(\"");
                            String _name_78 = ((AttributeEvaluation)ev_5).getName().getName();
                            _builder.append(_name_78);
                            _builder.append("\")) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t");
                            _builder.append("features.add(\"");
                            String _name_79 = ((AttributeEvaluation)ev_5).getName().getName();
                            _builder.append(_name_79, "\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("}");
                            _builder.newLine();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("SelectSampleMutator mut = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut = new SelectSampleMutator(objectSelection.getModel(), objectSelection.getMetaModel(), referenceSelection, objectSelection, equals, features);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//INC COUNTER: ");
    int _plusPlus = this.nMutation++;
    _builder.append(_plusPlus);
    _builder.newLineIfNotEmpty();
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nRegistryMutation++;
    _builder.append(_plusPlus_1);
    _builder.newLineIfNotEmpty();
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END SELECT SAMPLE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence selectSampleMutatorExhaustive(final SelectSampleMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append(" \t\t");
    _builder.append("//SELECT SAMPLE OBJECT ");
    _builder.append(this.methodName, " \t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("//END SELECT SAMPLE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence cloneObjectMutator(final CloneObjectMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//CLONE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _object_1 = mut.getObject();
        String _name = ((RandomTypeSelection) _object_1).getType().getName();
        _builder.append(_name);
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("EObject object = rts.getObject();");
            _builder.newLine();
          } else {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t   \t\t\t\t");
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method, "\t   \t\t\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject object = null;");
            _builder.newLine();
            _builder.append("if (selectedObjects.size() > 0) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("ObSelectionStrategy objectSelection = null; ");
        _builder.newLine();
        _builder.append("if (object != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("objectSelection = new SpecificObjectSelection(packages, model, object);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
          ObSelectionStrategy _object_3 = mut.getObject();
          String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
          _builder.append(_name_1);
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("EObject object = rts.getObject();");
          _builder.newLine();
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
          _builder.newLine();
        } else {
          ObSelectionStrategy _object_4 = mut.getObject();
          if ((_object_4 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _object_5 = mut.getObject();
            String _name_2 = ((SpecificObjectSelection) _object_5).getObjSel().getName();
            _builder.append(_name_2);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _object_6 = mut.getObject();
            String _name_3 = ((SpecificObjectSelection) _object_6).getObjSel().getName();
            _builder.append(_name_3);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _object_7 = mut.getObject();
            String _name_4 = ((SpecificObjectSelection) _object_7).getObjSel().getName();
            _builder.append(_name_4);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _object_8 = mut.getObject();
            String _name_5 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
            _builder.append(_name_5, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _object_9 = mut.getObject();
            String _name_6 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
            _builder.append(_name_6, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _object_10 = mut.getObject();
            String _name_7 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
            _builder.append(_name_7, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _object_11 = mut.getObject();
            String _name_8 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
            _builder.append(_name_8, "\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _object_12 = mut.getObject();
            String _name_9 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
            _builder.append(_name_9, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (listEntry_");
            ObSelectionStrategy _object_13 = mut.getObject();
            String _name_10 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
            _builder.append(_name_10, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _object_14 = mut.getObject();
            String _name_11 = ((SpecificObjectSelection) _object_14).getObjSel().getName();
            _builder.append(_name_11, "\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ent.getKey();");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
            ObSelectionStrategy _object_15 = mut.getObject();
            String _name_12 = ((SpecificObjectSelection) _object_15).getObjSel().getName();
            _builder.append(_name_12, "\t\t");
            _builder.append(".get(0).getValue().getValue(), listEntry_");
            ObSelectionStrategy _object_16 = mut.getObject();
            String _name_13 = ((SpecificObjectSelection) _object_16).getObjSel().getName();
            _builder.append(_name_13, "\t\t");
            _builder.append(".get(0).getValue().getKey(), objs);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _object_17 = mut.getObject();
            if ((_object_17 instanceof SpecificClosureSelection)) {
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_18 = mut.getObject();
              String _name_14 = ((SpecificClosureSelection) _object_18).getObjSel().getName();
              _builder.append(_name_14);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_19 = mut.getObject();
              String _name_15 = ((SpecificClosureSelection) _object_19).getObjSel().getName();
              _builder.append(_name_15);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _object_20 = mut.getObject();
              String _name_16 = ((SpecificClosureSelection) _object_20).getObjSel().getName();
              _builder.append(_name_16);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificClosureSelection(entry_");
              ObSelectionStrategy _object_21 = mut.getObject();
              String _name_17 = ((SpecificClosureSelection) _object_21).getObjSel().getName();
              _builder.append(_name_17, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _object_22 = mut.getObject();
              String _name_18 = ((SpecificClosureSelection) _object_22).getObjSel().getName();
              _builder.append(_name_18, "\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _object_23 = mut.getObject();
              String _name_19 = ((SpecificClosureSelection) _object_23).getObjSel().getName();
              _builder.append(_name_19, "\t");
              _builder.append(".getKey(), \"");
              ObSelectionStrategy _object_24 = mut.getObject();
              String _name_20 = ((SpecificClosureSelection) _object_24).getRefType().getName();
              _builder.append(_name_20, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
    }
    _builder.append("EObject container = null;");
    _builder.newLine();
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null) {");
    _builder.newLine();
    {
      ObSelectionStrategy _container = mut.getContainer();
      boolean _tripleEquals_1 = (_container == null);
      if (_tripleEquals_1) {
        _builder.append("container = ModelManager.getContainer(objectSelection.getModel(), objectSelection.getObject());");
        _builder.newLine();
        _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_1 = mut.getContainer();
          if ((_container_1 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_21 = ((RandomTypeSelection) _container_2).getType().getName();
            _builder.append(_name_21);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rts.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_3 = mut.getContainer();
          if ((_container_3 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_22 = ((CompleteTypeSelection) _container_4).getType().getName();
            _builder.append(_name_22);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rts.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_5 = mut.getContainer();
          if ((_container_5 instanceof SpecificObjectSelection)) {
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_23 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_23);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_24 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_24);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_25 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_25);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("containerSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _container_9 = mut.getContainer();
            String _name_26 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
            _builder.append(_name_26, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_27 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
            _builder.append(_name_27, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _container_11 = mut.getContainer();
            String _name_28 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
            _builder.append(_name_28, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_12 = mut.getContainer();
          if ((_container_12 instanceof SpecificClosureSelection)) {
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_13 = mut.getContainer();
            String _name_29 = ((SpecificClosureSelection) _container_13).getObjSel().getName();
            _builder.append(_name_29);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_14 = mut.getContainer();
            String _name_30 = ((SpecificClosureSelection) _container_14).getObjSel().getName();
            _builder.append(_name_30);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_15 = mut.getContainer();
            String _name_31 = ((SpecificClosureSelection) _container_15).getObjSel().getName();
            _builder.append(_name_31);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("containerSelection = new SpecificClosureSelection(entry_");
            ObSelectionStrategy _container_16 = mut.getContainer();
            String _name_32 = ((SpecificClosureSelection) _container_16).getObjSel().getName();
            _builder.append(_name_32, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_17 = mut.getContainer();
            String _name_33 = ((SpecificClosureSelection) _container_17).getObjSel().getName();
            _builder.append(_name_33, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _container_18 = mut.getContainer();
            String _name_34 = ((SpecificClosureSelection) _container_18).getObjSel().getName();
            _builder.append(_name_34, "\t");
            _builder.append(".getKey(), \"");
            ObSelectionStrategy _container_19 = mut.getContainer();
            String _name_35 = ((SpecificClosureSelection) _container_19).getRefType().getName();
            _builder.append(_name_35, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("}");
    _builder.newLine();
    {
      if (((mut.getContainer() != null) && (mut.getContainer().getRefType() != null))) {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        {
          ObSelectionStrategy _container_20 = mut.getContainer();
          if ((_container_20 instanceof SpecificObjectSelection)) {
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_21 = mut.getContainer();
            String _name_36 = ((SpecificObjectSelection) _container_21).getObjSel().getName();
            _builder.append(_name_36);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_22 = mut.getContainer();
            String _name_37 = ((SpecificObjectSelection) _container_22).getObjSel().getName();
            _builder.append(_name_37);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_23 = mut.getContainer();
            String _name_38 = ((SpecificObjectSelection) _container_23).getObjSel().getName();
            _builder.append(_name_38);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
            ObSelectionStrategy _container_24 = mut.getContainer();
            String _name_39 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
            _builder.append(_name_39, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_25 = mut.getContainer();
            String _name_40 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
            _builder.append(_name_40, "\t");
            _builder.append(".getValue().getKey(), \"");
            String _name_41 = mut.getContainer().getRefType().getName();
            _builder.append(_name_41, "\t");
            _builder.append("\", entry_");
            ObSelectionStrategy _container_26 = mut.getContainer();
            String _name_42 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
            _builder.append(_name_42, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _container_27 = mut.getContainer();
            if ((_container_27 instanceof SpecificClosureSelection)) {
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_28 = mut.getContainer();
              String _name_43 = ((SpecificClosureSelection) _container_28).getObjSel().getName();
              _builder.append(_name_43);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_29 = mut.getContainer();
              String _name_44 = ((SpecificClosureSelection) _container_29).getObjSel().getName();
              _builder.append(_name_44);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _container_30 = mut.getContainer();
              String _name_45 = ((SpecificClosureSelection) _container_30).getObjSel().getName();
              _builder.append(_name_45);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
              ObSelectionStrategy _container_31 = mut.getContainer();
              String _name_46 = ((SpecificClosureSelection) _container_31).getObjSel().getName();
              _builder.append(_name_46, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_32 = mut.getContainer();
              String _name_47 = ((SpecificClosureSelection) _container_32).getObjSel().getName();
              _builder.append(_name_47, "\t");
              _builder.append(".getValue().getKey(), \"");
              String _name_48 = mut.getContainer().getRefType().getName();
              _builder.append(_name_48, "\t");
              _builder.append("\", entry_");
              ObSelectionStrategy _container_33 = mut.getContainer();
              String _name_49 = ((SpecificClosureSelection) _container_33).getObjSel().getName();
              _builder.append(_name_49, "\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("SpecificReferenceSelection referenceSelection = null;");
              _builder.newLine();
              _builder.append("if (containerSelection != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
              String _name_50 = mut.getContainer().getRefType().getName();
              _builder.append(_name_50, "\t");
              _builder.append("\", containerSelection);");
              _builder.newLineIfNotEmpty();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      } else {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        _builder.append("if (containerSelection != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), null, null);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method_1 = this.method(c, false, false, counter, false);
        _builder.append(_method_1);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_2 = this.method(c_1, false);
        _builder.append(_method_2);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("CloneObjectMutator mut = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
    _builder.newLine();
    {
      ObSelectionStrategy _object_25 = mut.getObject();
      if ((_object_25 instanceof SpecificObjectSelection)) {
        {
          ObSelectionStrategy _object_26 = mut.getObject();
          ObjectEmitter _objSel = ((SpecificObjectSelection) _object_26).getObjSel();
          if ((_objSel instanceof SelectObjectMutator)) {
            _builder.append("mut = new CloneObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection.getObject(), ");
            boolean _isContents = mut.isContents();
            _builder.append(_isContents);
            _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
            ObSelectionStrategy _object_27 = mut.getObject();
            ObjectEmitter _objSel_1 = ((SpecificObjectSelection) _object_27).getObjSel();
            String _name_51 = ((SelectObjectMutator) _objSel_1).getObject().getType().getName();
            _builder.append(_name_51);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          ObSelectionStrategy _object_28 = mut.getObject();
          ObjectEmitter _objSel_2 = ((SpecificObjectSelection) _object_28).getObjSel();
          if ((_objSel_2 instanceof CreateObjectMutator)) {
            _builder.append("mut = new CloneObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection.getObject(), ");
            boolean _isContents_1 = mut.isContents();
            _builder.append(_isContents_1);
            _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
            ObSelectionStrategy _object_29 = mut.getObject();
            ObjectEmitter _objSel_3 = ((SpecificObjectSelection) _object_29).getObjSel();
            String _name_52 = ((CreateObjectMutator) _objSel_3).getType().getName();
            _builder.append(_name_52);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          ObSelectionStrategy _object_30 = mut.getObject();
          ObjectEmitter _objSel_4 = ((SpecificObjectSelection) _object_30).getObjSel();
          if ((_objSel_4 instanceof CloneObjectMutator)) {
            _builder.append("mut = new CloneObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection.getObject(), ");
            boolean _isContents_2 = mut.isContents();
            _builder.append(_isContents_2);
            _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
            ObSelectionStrategy _object_31 = mut.getObject();
            ObjectEmitter _objSel_5 = ((SpecificObjectSelection) _object_31).getObjSel();
            String _name_53 = ((CloneObjectMutator) _objSel_5).getObject().getType().getName();
            _builder.append(_name_53);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    {
      ObSelectionStrategy _object_32 = mut.getObject();
      if ((_object_32 instanceof RandomTypeSelection)) {
        _builder.append("mut = new CloneObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection.getObject(), ");
        boolean _isContents_3 = mut.isContents();
        _builder.append(_isContents_3);
        _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
        ObSelectionStrategy _object_33 = mut.getObject();
        String _name_54 = ((RandomTypeSelection) _object_33).getType().getName();
        _builder.append(_name_54);
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("}");
    _builder.newLine();
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nMutation++;
    _builder.append(_plusPlus_1);
    _builder.newLineIfNotEmpty();
    _builder.append("  \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_2 = this.nRegistryMutation++;
    _builder.append(_plusPlus_2, "  \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END CLONE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence cloneObjectMutatorExhaustive(final CloneObjectMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("//CLONE OBJECT ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _object_1 = mut.getObject();
        String _name = ((RandomTypeSelection) _object_1).getType().getName();
        _builder.append(_name, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("\t");
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get, "\t");
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t   \t\t\t\t");
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method, "\t   \t\t\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("objects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1, "\t");
            _builder.append(");");
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("RandomTypeSelection cts = new RandomTypeSelection(packages, model, \"");
          ObSelectionStrategy _object_3 = mut.getObject();
          String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
          _builder.append(_name_1, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("List<EObject> objects = cts.getObjects();");
          _builder.newLine();
          {
            Expression _expression_1 = mut.getObject().getExpression();
            boolean _tripleEquals_1 = (_expression_1 == null);
            if (_tripleEquals_1) {
              _builder.append("\t");
              _builder.append("List<EObject> objects = cts.getObjects();");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("//EXPRESSION LIST: ");
              ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
              List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
              _builder.append(_expressionList_1, "\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("//EXPRESSION LEVEL: ");
              _builder.append(this.nExpression = 0, "\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("//EXPRESSION LEVEL: ");
              boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
              _builder.append(_add_1, "\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("Expression exp");
              Integer _get_2 = this.expressionList.get(0);
              _builder.append(_get_2, "\t");
              _builder.append(" = new Expression();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              Object _method_1 = this.method(mut.getObject().getExpression(), 0);
              _builder.append(_method_1, "\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("objects = evaluate(objects, exp");
              Integer _get_3 = this.expressionList.get(0);
              _builder.append(_get_3, "\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
            }
          }
        } else {
          ObSelectionStrategy _object_4 = mut.getObject();
          if ((_object_4 instanceof SpecificObjectSelection)) {
            _builder.append("\t\t\t    ");
            _builder.append("List<EObject> objects = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (hmObjects.get(\"");
            ObSelectionStrategy _object_5 = mut.getObject();
            String _name_2 = ((SpecificObjectSelection) _object_5).getObjSel().getName();
            _builder.append(_name_2, "\t");
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _object_6 = mut.getObject();
            String _name_3 = ((SpecificObjectSelection) _object_6).getObjSel().getName();
            _builder.append(_name_3, "\t\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _object_7 = mut.getObject();
            String _name_4 = ((SpecificObjectSelection) _object_7).getObjSel().getName();
            _builder.append(_name_4, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _object_8 = mut.getObject();
            String _name_5 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
            _builder.append(_name_5, "\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _object_9 = mut.getObject();
            String _name_6 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
            _builder.append(_name_6, "\t\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("if (hmList.get(\"");
            ObSelectionStrategy _object_10 = mut.getObject();
            String _name_7 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
            _builder.append(_name_7, "\t\t");
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _object_11 = mut.getObject();
            String _name_8 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
            _builder.append(_name_8, "\t\t\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _object_12 = mut.getObject();
            String _name_9 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
            _builder.append(_name_9, "\t\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _object_13 = mut.getObject();
            String _name_10 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
            _builder.append(_name_10, "\t\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, model, objs);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("return numMutantsGenerated;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (objectSelection != null) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("objects.add(objectSelection.getObject());");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType = mut.getObject().getRefType();
              boolean _tripleNotEquals = (_refType != null);
              if (_tripleNotEquals) {
                _builder.append("\t");
                _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                String _name_11 = mut.getObject().getRefType().getName();
                _builder.append(_name_11, "\t");
                _builder.append("\", objectSelections.get(0).getObject());");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("objects.add(object);");
                _builder.newLine();
              }
            }
          } else {
            ObSelectionStrategy _object_14 = mut.getObject();
            if ((_object_14 instanceof SpecificClosureSelection)) {
              {
                if (((((SpecificClosureSelection) mut.getObject()).getObjSel() != null) && (((SpecificClosureSelection) mut.getObject()).getRefType() != null))) {
                  _builder.append("\t");
                  _builder.append("List<EObject> objects = new ArrayList<EObject>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("ObSelectionStrategy objectSelection = null;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (hmObjects.get(\"");
                  ObSelectionStrategy _object_15 = mut.getObject();
                  String _name_12 = ((SpecificClosureSelection) _object_15).getObjSel().getName();
                  _builder.append(_name_12, "\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  ObSelectionStrategy _object_16 = mut.getObject();
                  String _name_13 = ((SpecificClosureSelection) _object_16).getObjSel().getName();
                  _builder.append(_name_13, "\t\t");
                  _builder.append(" = hmObjects.get(\"");
                  ObSelectionStrategy _object_17 = mut.getObject();
                  String _name_14 = ((SpecificClosureSelection) _object_17).getObjSel().getName();
                  _builder.append(_name_14, "\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                  ObSelectionStrategy _object_18 = mut.getObject();
                  String _name_15 = ((SpecificClosureSelection) _object_18).getObjSel().getName();
                  _builder.append(_name_15, "\t\t");
                  _builder.append(".getKey());");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("if (recovered == null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("recovered = entry_");
                  ObSelectionStrategy _object_19 = mut.getObject();
                  String _name_16 = ((SpecificClosureSelection) _object_19).getObjSel().getName();
                  _builder.append(_name_16, "\t\t\t");
                  _builder.append(".getKey();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("} else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("if (hmList.get(\"");
                  ObSelectionStrategy _object_20 = mut.getObject();
                  String _name_17 = ((SpecificClosureSelection) _object_20).getObjSel().getName();
                  _builder.append(_name_17, "\t\t");
                  _builder.append("\") != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                  ObSelectionStrategy _object_21 = mut.getObject();
                  String _name_18 = ((SpecificClosureSelection) _object_21).getObjSel().getName();
                  _builder.append(_name_18, "\t\t\t");
                  _builder.append(" = hmList.get(\"");
                  ObSelectionStrategy _object_22 = mut.getObject();
                  String _name_19 = ((SpecificClosureSelection) _object_22).getObjSel().getName();
                  _builder.append(_name_19, "\t\t\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("List<EObject> objs = new ArrayList<EObject>();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
                  ObSelectionStrategy _object_23 = mut.getObject();
                  String _name_20 = ((SpecificClosureSelection) _object_23).getObjSel().getName();
                  _builder.append(_name_20, "\t\t\t");
                  _builder.append(") {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t\t");
                  _builder.append("objs.add(obj);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("objectSelection = new SpecificObjectSelection(packages, model, objs);");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("else {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t\t");
                  _builder.append("return numMutantsGenerated;");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("if (objectSelection != null) {");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("objects.add(objectSelection.getObject());");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("}");
                  _builder.newLine();
                  {
                    EReference _refType_1 = mut.getObject().getRefType();
                    boolean _tripleNotEquals_1 = (_refType_1 != null);
                    if (_tripleNotEquals_1) {
                      _builder.append("\t");
                      _builder.append("List<EObject> o = ModelManager.getReferences(\"");
                      String _name_21 = mut.getObject().getRefType().getName();
                      _builder.append(_name_21, "\t");
                      _builder.append("\", objectSelection.getObject());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("EObject object = o.get(ModelManager.getRandomIndex(o));");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("objectSelection = new SpecificObjectSelection(model, packages, object);");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("objects.add(object);");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _container = mut.getContainer();
      boolean _tripleEquals_2 = (_container == null);
      if (_tripleEquals_2) {
        _builder.append("\t\t    ");
        _builder.append("for (int obn = 0; obn < objects.size(); obn++) {");
        _builder.newLine();
        _builder.append("Resource m = EMFCopier.copyResource(model);");
        _builder.newLine();
        {
          if (((mut.getObject() instanceof SpecificObjectSelection) || (mut.getObject() instanceof SpecificClosureSelection))) {
            _builder.append("List<EObject> mObjects = ModelManager.getObjects(m, objects);");
            _builder.newLine();
            _builder.append("objectSelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _object_24 = mut.getObject();
          if ((_object_24 instanceof RandomTypeSelection)) {
            _builder.append("rts = new RandomTypeSelection(packages, m, \"");
            ObSelectionStrategy _object_25 = mut.getObject();
            String _name_22 = ((RandomTypeSelection) _object_25).getType().getName();
            _builder.append(_name_22);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> mObjects = rts.getObjects();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _object_26 = mut.getObject();
          if ((_object_26 instanceof CompleteTypeSelection)) {
            _builder.append("cts = new RandomTypeSelection(packages, m, \"");
            ObSelectionStrategy _object_27 = mut.getObject();
            String _name_23 = ((CompleteTypeSelection) _object_27).getType().getName();
            _builder.append(_name_23);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> mObjects = rts.getObjects();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        _builder.append("EObject container = ModelManager.getContainer(m, objectSelection.getObject());");
        _builder.newLine();
        _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, m, container);");
        _builder.newLine();
        _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, m, null, null);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_1 = mut.getContainer();
          if ((_container_1 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_24 = ((RandomTypeSelection) _container_2).getType().getName();
            _builder.append(_name_24);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType_2 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_2 = (_refType_2 != null);
              if (_tripleNotEquals_2) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_25 = mut.getContainer().getRefType().getName();
                _builder.append(_name_25);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_3 = mut.getContainer();
          if ((_container_3 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_26 = ((CompleteTypeSelection) _container_4).getType().getName();
            _builder.append(_name_26);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject container = rts.getObject();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy containerSelection = new SpecificObjectSelection(packages, model, container);");
            _builder.newLine();
            {
              EReference _refType_3 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_3 = (_refType_3 != null);
              if (_tripleNotEquals_3) {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_27 = mut.getContainer().getRefType().getName();
                _builder.append(_name_27);
                _builder.append("\", containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("SpecificReferenceSelection referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_5 = mut.getContainer();
          if ((_container_5 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_28 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_28);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_29 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_29);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_30 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_30);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _container_9 = mut.getContainer();
            String _name_31 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
            _builder.append(_name_31, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_32 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
            _builder.append(_name_32, "\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType_4 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_4 = (_refType_4 != null);
              if (_tripleNotEquals_4) {
                _builder.append("containerSelection = new SpecificObjectSelection(packages, model, recovered);");
                _builder.newLine();
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                String _name_33 = mut.getContainer().getRefType().getName();
                _builder.append(_name_33);
                _builder.append("\", recovered);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
              }
            }
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return numMutantsGenerated;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_11 = mut.getContainer();
          if ((_container_11 instanceof SpecificClosureSelection)) {
            _builder.append("ObSelectionStrategy containerSelection = null;");
            _builder.newLine();
            _builder.append("SpecificReferenceSelection referenceSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_12 = mut.getContainer();
            String _name_34 = ((SpecificClosureSelection) _container_12).getObjSel().getName();
            _builder.append(_name_34);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_13 = mut.getContainer();
            String _name_35 = ((SpecificClosureSelection) _container_13).getObjSel().getName();
            _builder.append(_name_35);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_14 = mut.getContainer();
            String _name_36 = ((SpecificClosureSelection) _container_14).getObjSel().getName();
            _builder.append(_name_36);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
            ObSelectionStrategy _container_15 = mut.getContainer();
            String _name_37 = ((SpecificClosureSelection) _container_15).getObjSel().getName();
            _builder.append(_name_37, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (recovered == null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("recovered = entry_");
            ObSelectionStrategy _container_16 = mut.getContainer();
            String _name_38 = ((SpecificClosureSelection) _container_16).getObjSel().getName();
            _builder.append(_name_38, "\t\t");
            _builder.append(".getKey();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            {
              EReference _refType_5 = mut.getContainer().getRefType();
              boolean _tripleNotEquals_5 = (_refType_5 != null);
              if (_tripleNotEquals_5) {
                _builder.append("containerSelection = new SpecificClosureSelection(packages, model, recovered, \"");
                ObSelectionStrategy _container_17 = mut.getContainer();
                String _name_39 = ((SpecificClosureSelection) _container_17).getObjSel().getName();
                _builder.append(_name_39);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("referenceSelection = new SpecificReferenceSelection(pakages, model, \"");
                String _name_40 = mut.getContainer().getRefType().getName();
                _builder.append(_name_40);
                _builder.append("\", recovered);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                _builder.newLine();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return numMutantsGenerated;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method_2 = this.method(c, false, false, counter, true);
        _builder.append(_method_2);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_3 = this.method(c_1, true);
        _builder.append(_method_3);
        _builder.newLineIfNotEmpty();
      }
    }
    {
      ObSelectionStrategy _container_18 = mut.getContainer();
      boolean _tripleNotEquals_6 = (_container_18 != null);
      if (_tripleNotEquals_6) {
        {
          ObSelectionStrategy _object_28 = mut.getObject();
          if ((_object_28 instanceof RandomTypeSelection)) {
            _builder.append("CloneObjectMutator mut = new CloneObjectMutator(model, packages, objectSelection.getObject(), ");
            boolean _isContents = mut.isContents();
            _builder.append(_isContents);
            _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
            ObSelectionStrategy _object_29 = mut.getObject();
            String _name_41 = ((RandomTypeSelection) _object_29).getType().getName();
            _builder.append(_name_41);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          } else {
            ObSelectionStrategy _object_30 = mut.getObject();
            if ((_object_30 instanceof CompleteTypeSelection)) {
              _builder.append("CloneObjectMutator mut = new CloneObjectMutator(model, packages, objectSelection.getObject(), ");
              boolean _isContents_1 = mut.isContents();
              _builder.append(_isContents_1);
              _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
              ObSelectionStrategy _object_31 = mut.getObject();
              String _name_42 = ((CompleteTypeSelection) _object_31).getType().getName();
              _builder.append(_name_42);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
            } else {
              ObSelectionStrategy _object_32 = mut.getObject();
              if ((_object_32 instanceof SpecificObjectSelection)) {
                _builder.append("CloneObjectMutator mut = new CloneObjectMutator(model, packages, objectSelection.getObject(), ");
                boolean _isContents_2 = mut.isContents();
                _builder.append(_isContents_2);
                _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
                ObSelectionStrategy _object_33 = mut.getObject();
                ObjectEmitter _objSel = ((SpecificObjectSelection) _object_33).getObjSel();
                String _name_43 = ((SelectObjectMutator) _objSel).getObject().getType().getName();
                _builder.append(_name_43);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              } else {
                ObSelectionStrategy _object_34 = mut.getObject();
                if ((_object_34 instanceof SpecificClosureSelection)) {
                  _builder.append("CloneObjectMutator mut = new CloneObjectMutator(model, packages, objectSelection.getObject(), ");
                  boolean _isContents_3 = mut.isContents();
                  _builder.append(_isContents_3);
                  _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
                  ObSelectionStrategy _object_35 = mut.getObject();
                  ObjectEmitter _objSel_1 = ((SpecificClosureSelection) _object_35).getObjSel();
                  String _name_44 = ((SelectObjectMutator) _objSel_1).getObject().getType().getName();
                  _builder.append(_name_44);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _container_19 = mut.getContainer();
      boolean _tripleEquals_3 = (_container_19 == null);
      if (_tripleEquals_3) {
        {
          ObSelectionStrategy _object_36 = mut.getObject();
          if ((_object_36 instanceof RandomTypeSelection)) {
            _builder.append("CloneObjectMutator mut = new CloneObjectMutator(m, packages, objectSelection.getObject(), ");
            boolean _isContents_4 = mut.isContents();
            _builder.append(_isContents_4);
            _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
            ObSelectionStrategy _object_37 = mut.getObject();
            String _name_45 = ((RandomTypeSelection) _object_37).getType().getName();
            _builder.append(_name_45);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          } else {
            ObSelectionStrategy _object_38 = mut.getObject();
            if ((_object_38 instanceof CompleteTypeSelection)) {
              _builder.append("CloneObjectMutator mut = new CloneObjectMutator(m, packages, objectSelection.getObject(), ");
              boolean _isContents_5 = mut.isContents();
              _builder.append(_isContents_5);
              _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
              ObSelectionStrategy _object_39 = mut.getObject();
              String _name_46 = ((CompleteTypeSelection) _object_39).getType().getName();
              _builder.append(_name_46);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
            } else {
              ObSelectionStrategy _object_40 = mut.getObject();
              if ((_object_40 instanceof SpecificObjectSelection)) {
                _builder.append("CloneObjectMutator mut = new CloneObjectMutator(m, packages, objectSelection.getObject(), ");
                boolean _isContents_6 = mut.isContents();
                _builder.append(_isContents_6);
                _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
                ObSelectionStrategy _object_41 = mut.getObject();
                ObjectEmitter _objSel_2 = ((SpecificObjectSelection) _object_41).getObjSel();
                String _name_47 = ((SelectObjectMutator) _objSel_2).getObject().getType().getName();
                _builder.append(_name_47);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              } else {
                ObSelectionStrategy _object_42 = mut.getObject();
                if ((_object_42 instanceof SpecificClosureSelection)) {
                  _builder.append("CloneObjectMutator mut = new CloneObjectMutator(m, packages, objectSelection.getObject(), ");
                  boolean _isContents_7 = mut.isContents();
                  _builder.append(_isContents_7);
                  _builder.append(", referenceSelection, containerSelection, atts, refs, \"");
                  ObSelectionStrategy _object_43 = mut.getObject();
                  ObjectEmitter _objSel_3 = ((SpecificClosureSelection) _object_43).getObjSel();
                  String _name_48 = ((SelectObjectMutator) _objSel_3).getObject().getType().getName();
                  _builder.append(_name_48);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
        }
      }
    }
    _builder.append("Mutator mutator = null;");
    _builder.newLine();
    _builder.append("if (muts == null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
    String _plus = ("registry" + _string);
    String _registryMethodName = this.registryMethodName = _plus;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        {
          String _name_49 = mut.getName();
          boolean _tripleNotEquals_7 = (_name_49 != null);
          if (_tripleNotEquals_7) {
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("hmObjects.put(\"");
            String _name_50 = mut.getName();
            _builder.append(_name_50, "\t\t\t");
            _builder.append("\", entry);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("mutator = mut;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (mutator != null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//");
    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((last == false)) {
        {
          ObSelectionStrategy _container_20 = mut.getContainer();
          boolean _tripleNotEquals_8 = (_container_20 != null);
          if (_tripleNotEquals_8) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                _builder.newLine();
              } else {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, k, serialize, test, classes);");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("numMutantsGenerated = k[0];");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_21 = mut.getContainer();
          boolean _tripleEquals_4 = (_container_21 == null);
          if (_tripleEquals_4) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                _builder.newLine();
              } else {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("numMutantsGenerated = k[0];");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    {
      if ((last == true)) {
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("\t\t");
            _builder.append("if (rules.get(\"");
            String _name_51 = constraint.getType().getName();
            _builder.append(_name_51, "\t\t");
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_52 = constraint.getType().getName();
            _builder.append(_name_52, "\t\t\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_53 = constraint.getType().getName();
            _builder.append(_name_53, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_9 = (_expressions != null);
              if (_tripleNotEquals_9) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_10 = (_rules != null);
              if (_tripleNotEquals_10) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    _builder.append(rule, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("rules.put(\"");
            String _name_54 = constraint.getType().getName();
            _builder.append(_name_54, "\t\t");
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((b == null)) {
            _builder.append("\t\t");
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
            _builder.newLine();
          } else {
            {
              int _size = b.getFrom().size();
              boolean _equals = (_size == 0);
              if (_equals) {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_55 = b.getName();
                _builder.append(_name_55);
                _builder.append("/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_56 = b.getName();
                _builder.append(_name_56);
                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((b == null)) {
            {
              if ((this.standalone == false)) {
                _builder.append("   \t\t");
                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                _builder.newLine();
              } else {
                _builder.append("   \t\t");
                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName = this.getProjectName();
                _builder.append(_projectName, "   \t\t");
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className, "   \t\t");
                _builder.append(".class, true);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              if ((this.standalone == false)) {
                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_57 = b.getName();
                _builder.append(_name_57);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_58 = b.getName();
                _builder.append(_name_58);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName_1 = this.getProjectName();
                _builder.append(_projectName_1);
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className);
                _builder.append(".class, true, false);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("muts = null;");
        _builder.newLine();
        {
          ObSelectionStrategy _container_22 = mut.getContainer();
          boolean _tripleEquals_5 = (_container_22 == null);
          if (_tripleEquals_5) {
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//END CLONE OBJECT ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence retypeObjectMutator(final RetypeObjectMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//RETYPE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("List<String> mutTypes = new ArrayList<String>();");
    _builder.newLine();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("//");
        ObSelectionStrategy _object_1 = mut.getObject();
        RandomTypeSelection selection = ((RandomTypeSelection) _object_1);
        _builder.newLineIfNotEmpty();
        {
          if (((selection.getTypes() != null) && (selection.getTypes().size() > 0))) {
            {
              EList<EClass> _types = selection.getTypes();
              for(final EClass type : _types) {
                _builder.append("mutTypes.add(\"");
                String _name = type.getName();
                _builder.append(_name);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            EClass _type = selection.getType();
            boolean _tripleNotEquals = (_type != null);
            if (_tripleNotEquals) {
              _builder.append("mutTypes.add(\"");
              String _name_1 = selection.getType().getName();
              _builder.append(_name_1);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("//");
          ObSelectionStrategy _object_3 = mut.getObject();
          CompleteTypeSelection selection_1 = ((CompleteTypeSelection) _object_3);
          _builder.newLineIfNotEmpty();
          {
            if (((selection_1.getTypes() != null) && (selection_1.getTypes().size() > 0))) {
              {
                EList<EClass> _types_1 = selection_1.getTypes();
                for(final EClass type_1 : _types_1) {
                  _builder.append("mutTypes.add(\"");
                  String _name_2 = type_1.getName();
                  _builder.append(_name_2);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
            } else {
              EClass _type_1 = selection_1.getType();
              boolean _tripleNotEquals_1 = (_type_1 != null);
              if (_tripleNotEquals_1) {
                _builder.append("mutTypes.add(\"");
                String _name_3 = selection_1.getType().getName();
                _builder.append(_name_3);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
      }
    }
    _builder.append("List<String> targetTypes = new ArrayList<String>();");
    _builder.newLine();
    {
      if (((mut.getTypes() != null) && (mut.getTypes().size() > 0))) {
        {
          EList<EClass> _types_2 = mut.getTypes();
          for(final EClass type_2 : _types_2) {
            _builder.append("targetTypes.add(\"");
            String _name_4 = type_2.getName();
            _builder.append(_name_4);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        EClass _type_2 = mut.getType();
        boolean _tripleNotEquals_2 = (_type_2 != null);
        if (_tripleNotEquals_2) {
          _builder.append("targetTypes.add(\"");
          String _name_5 = mut.getType().getName();
          _builder.append(_name_5);
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
        }
      }
    }
    {
      ObSelectionStrategy _object_4 = mut.getObject();
      if ((_object_4 instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes);");
        _builder.newLine();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("EObject object = rts.getObject();");
            _builder.newLine();
          } else {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t   \t\t\t\t");
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method, "\t   \t\t\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject object = null;");
            _builder.newLine();
            _builder.append("if (selectedObjects.size() > 0) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("ObSelectionStrategy objectSelection = null; ");
        _builder.newLine();
        _builder.append("if (object != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("objectSelection = new SpecificObjectSelection(packages, model, object);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        ObSelectionStrategy _object_5 = mut.getObject();
        if ((_object_5 instanceof CompleteTypeSelection)) {
          _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes);");
          _builder.newLine();
          _builder.append("EObject object = rts.getObject();");
          _builder.newLine();
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, object);");
          _builder.newLine();
        } else {
          ObSelectionStrategy _object_6 = mut.getObject();
          if ((_object_6 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container = mut.getContainer();
            String _name_6 = ((SpecificObjectSelection) _container).getObjSel().getName();
            _builder.append(_name_6);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_1 = mut.getContainer();
            String _name_7 = ((SpecificObjectSelection) _container_1).getObjSel().getName();
            _builder.append(_name_7);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_8 = ((SpecificObjectSelection) _container_2).getObjSel().getName();
            _builder.append(_name_8);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _container_3 = mut.getContainer();
            String _name_9 = ((SpecificObjectSelection) _container_3).getObjSel().getName();
            _builder.append(_name_9, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_10 = ((SpecificObjectSelection) _container_4).getObjSel().getName();
            _builder.append(_name_10, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _container_5 = mut.getContainer();
            String _name_11 = ((SpecificObjectSelection) _container_5).getObjSel().getName();
            _builder.append(_name_11, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_12 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_12, "\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_13 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_13, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (listEntry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_14 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_14, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _container_9 = mut.getContainer();
            String _name_15 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
            _builder.append(_name_15, "\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ent.getKey();");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_16 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
            _builder.append(_name_16, "\t\t");
            _builder.append(".get(0).getValue().getValue(), listEntry_");
            ObSelectionStrategy _container_11 = mut.getContainer();
            String _name_17 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
            _builder.append(_name_17, "\t\t");
            _builder.append(".get(0).getValue().getKey(), objs);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _object_7 = mut.getObject();
            if ((_object_7 instanceof SpecificClosureSelection)) {
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_12 = mut.getContainer();
              String _name_18 = ((SpecificClosureSelection) _container_12).getObjSel().getName();
              _builder.append(_name_18);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_13 = mut.getContainer();
              String _name_19 = ((SpecificClosureSelection) _container_13).getObjSel().getName();
              _builder.append(_name_19);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _container_14 = mut.getContainer();
              String _name_20 = ((SpecificClosureSelection) _container_14).getObjSel().getName();
              _builder.append(_name_20);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificClosureSelection(entry_");
              ObSelectionStrategy _container_15 = mut.getContainer();
              String _name_21 = ((SpecificClosureSelection) _container_15).getObjSel().getName();
              _builder.append(_name_21, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_16 = mut.getContainer();
              String _name_22 = ((SpecificClosureSelection) _container_16).getObjSel().getName();
              _builder.append(_name_22, "\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _container_17 = mut.getContainer();
              String _name_23 = ((SpecificClosureSelection) _container_17).getObjSel().getName();
              _builder.append(_name_23, "\t");
              _builder.append(".getKey(), \"");
              ObSelectionStrategy _object_8 = mut.getObject();
              String _name_24 = ((SpecificClosureSelection) _object_8).getRefType().getName();
              _builder.append(_name_24, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
    }
    _builder.append("EObject container = null;");
    _builder.newLine();
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null) {");
    _builder.newLine();
    {
      ObSelectionStrategy _container_18 = mut.getContainer();
      boolean _tripleEquals_1 = (_container_18 == null);
      if (_tripleEquals_1) {
        _builder.append("container = ModelManager.getContainer(objectSelection.getModel(), objectSelection.getObject());");
        _builder.newLine();
        _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_19 = mut.getContainer();
          if ((_container_19 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rtsContainer = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_20 = mut.getContainer();
            String _name_25 = ((RandomTypeSelection) _container_20).getType().getName();
            _builder.append(_name_25);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rtsContainer.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_21 = mut.getContainer();
          if ((_container_21 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rtsContainer = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_22 = mut.getContainer();
            String _name_26 = ((CompleteTypeSelection) _container_22).getType().getName();
            _builder.append(_name_26);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rtsContainer.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_23 = mut.getContainer();
          if ((_container_23 instanceof SpecificObjectSelection)) {
            {
              EReference _refType = mut.getRefType();
              boolean _tripleNotEquals_3 = (_refType != null);
              if (_tripleNotEquals_3) {
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _container_24 = mut.getContainer();
                String _name_27 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
                _builder.append(_name_27);
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _container_25 = mut.getContainer();
                String _name_28 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
                _builder.append(_name_28);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (entry_");
                ObSelectionStrategy _container_26 = mut.getContainer();
                String _name_29 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
                _builder.append(_name_29);
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                ObSelectionStrategy _container_27 = mut.getContainer();
                String _name_30 = ((SpecificObjectSelection) _container_27).getObjSel().getName();
                _builder.append(_name_30, "\t");
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_28 = mut.getContainer();
                String _name_31 = ((SpecificObjectSelection) _container_28).getObjSel().getName();
                _builder.append(_name_31, "\t");
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_29 = mut.getContainer();
                String _name_32 = ((SpecificObjectSelection) _container_29).getObjSel().getName();
                _builder.append(_name_32, "\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_30 = mut.getContainer();
          if ((_container_30 instanceof SpecificClosureSelection)) {
            {
              EReference _refType_1 = mut.getRefType();
              boolean _tripleNotEquals_4 = (_refType_1 != null);
              if (_tripleNotEquals_4) {
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _container_31 = mut.getContainer();
                String _name_33 = ((SpecificClosureSelection) _container_31).getObjSel().getName();
                _builder.append(_name_33);
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _container_32 = mut.getContainer();
                String _name_34 = ((SpecificClosureSelection) _container_32).getObjSel().getName();
                _builder.append(_name_34);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (entry_");
                ObSelectionStrategy _container_33 = mut.getContainer();
                String _name_35 = ((SpecificClosureSelection) _container_33).getObjSel().getName();
                _builder.append(_name_35);
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                ObSelectionStrategy _container_34 = mut.getContainer();
                String _name_36 = ((SpecificClosureSelection) _container_34).getObjSel().getName();
                _builder.append(_name_36, "\t");
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_35 = mut.getContainer();
                String _name_37 = ((SpecificClosureSelection) _container_35).getObjSel().getName();
                _builder.append(_name_37, "\t");
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_36 = mut.getContainer();
                String _name_38 = ((SpecificClosureSelection) _container_36).getObjSel().getName();
                _builder.append(_name_38, "\t");
                _builder.append(".getKey(), \"");
                ObSelectionStrategy _container_37 = mut.getContainer();
                String _name_39 = ((SpecificClosureSelection) _container_37).getRefType().getName();
                _builder.append(_name_39, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("}");
    _builder.newLine();
    {
      EReference _refType_2 = mut.getRefType();
      boolean _tripleNotEquals_5 = (_refType_2 != null);
      if (_tripleNotEquals_5) {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        {
          ObSelectionStrategy _container_38 = mut.getContainer();
          if ((_container_38 instanceof SpecificObjectSelection)) {
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_39 = mut.getContainer();
            String _name_40 = ((SpecificClosureSelection) _container_39).getObjSel().getName();
            _builder.append(_name_40);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_40 = mut.getContainer();
            String _name_41 = ((SpecificClosureSelection) _container_40).getObjSel().getName();
            _builder.append(_name_41);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_41 = mut.getContainer();
            String _name_42 = ((SpecificClosureSelection) _container_41).getObjSel().getName();
            _builder.append(_name_42);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
            ObSelectionStrategy _container_42 = mut.getContainer();
            String _name_43 = ((SpecificClosureSelection) _container_42).getObjSel().getName();
            _builder.append(_name_43, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_43 = mut.getContainer();
            String _name_44 = ((SpecificClosureSelection) _container_43).getObjSel().getName();
            _builder.append(_name_44, "\t");
            _builder.append(".getValue().getKey(), \"");
            String _name_45 = mut.getRefType().getName();
            _builder.append(_name_45, "\t");
            _builder.append("\", entry_");
            ObSelectionStrategy _container_44 = mut.getContainer();
            String _name_46 = ((SpecificClosureSelection) _container_44).getObjSel().getName();
            _builder.append(_name_46, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _container_45 = mut.getContainer();
            if ((_container_45 instanceof SpecificClosureSelection)) {
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_46 = mut.getContainer();
              String _name_47 = ((SpecificClosureSelection) _container_46).getObjSel().getName();
              _builder.append(_name_47);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_47 = mut.getContainer();
              String _name_48 = ((SpecificClosureSelection) _container_47).getObjSel().getName();
              _builder.append(_name_48);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _container_48 = mut.getContainer();
              String _name_49 = ((SpecificClosureSelection) _container_48).getObjSel().getName();
              _builder.append(_name_49);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
              ObSelectionStrategy _container_49 = mut.getContainer();
              String _name_50 = ((SpecificClosureSelection) _container_49).getObjSel().getName();
              _builder.append(_name_50, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_50 = mut.getContainer();
              String _name_51 = ((SpecificClosureSelection) _container_50).getObjSel().getName();
              _builder.append(_name_51, "\t");
              _builder.append(".getValue().getKey(), \"");
              String _name_52 = mut.getRefType().getName();
              _builder.append(_name_52, "\t");
              _builder.append("\", entry_");
              ObSelectionStrategy _container_51 = mut.getContainer();
              String _name_53 = ((SpecificClosureSelection) _container_51).getObjSel().getName();
              _builder.append(_name_53, "\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("SpecificReferenceSelection referenceSelection = null;");
              _builder.newLine();
              _builder.append("if (containerSelection != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
              String _name_54 = mut.getRefType().getName();
              _builder.append(_name_54, "\t");
              _builder.append("\", containerSelection);");
              _builder.newLineIfNotEmpty();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      } else {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        _builder.append("if (containerSelection != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), null, null);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method_1 = this.method(c, false, false, counter, false);
        _builder.append(_method_1);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_2 = this.method(c_1, false);
        _builder.append(_method_2);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("RetypeObjectMutator mut = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null && objectSelection.getObject() != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut = new RetypeObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection.getObject(), referenceSelection, containerSelection, atts, refs, targetTypes);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nMutation++;
    _builder.append(_plusPlus_1);
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_2 = this.nRegistryMutation++;
    _builder.append(_plusPlus_2, "   \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence retypeObjectMutatorExhaustive(final RetypeObjectMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//RETYPE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("List<String> mutTypes = new ArrayList<String>();");
    _builder.newLine();
    _builder.append("//");
    boolean definedObjects = false;
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("//");
        ObSelectionStrategy _object_1 = mut.getObject();
        RandomTypeSelection selection = ((RandomTypeSelection) _object_1);
        _builder.newLineIfNotEmpty();
        {
          if (((selection.getTypes() != null) && (selection.getTypes().size() > 0))) {
            {
              EList<EClass> _types = selection.getTypes();
              for(final EClass type : _types) {
                _builder.append("mutTypes.add(\"");
                String _name = type.getName();
                _builder.append(_name);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            EClass _type = selection.getType();
            boolean _tripleNotEquals = (_type != null);
            if (_tripleNotEquals) {
              _builder.append("mutTypes.add(\"");
              String _name_1 = selection.getType().getName();
              _builder.append(_name_1);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("//");
          ObSelectionStrategy _object_3 = mut.getObject();
          CompleteTypeSelection selection_1 = ((CompleteTypeSelection) _object_3);
          _builder.newLineIfNotEmpty();
          {
            if (((selection_1.getTypes() != null) && (selection_1.getTypes().size() > 0))) {
              {
                EList<EClass> _types_1 = selection_1.getTypes();
                for(final EClass type_1 : _types_1) {
                  _builder.append("mutTypes.add(\"");
                  String _name_2 = type_1.getName();
                  _builder.append(_name_2);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
            } else {
              EClass _type_1 = selection_1.getType();
              boolean _tripleNotEquals_1 = (_type_1 != null);
              if (_tripleNotEquals_1) {
                _builder.append("mutTypes.add(\"");
                String _name_3 = selection_1.getType().getName();
                _builder.append(_name_3);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
      }
    }
    _builder.append("List<String> targetTypes = new ArrayList<String>();");
    _builder.newLine();
    {
      if (((mut.getTypes() != null) && (mut.getTypes().size() > 0))) {
        {
          EList<EClass> _types_2 = mut.getTypes();
          for(final EClass type_2 : _types_2) {
            _builder.append("targetTypes.add(\"");
            String _name_4 = type_2.getName();
            _builder.append(_name_4);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        EClass _type_2 = mut.getType();
        boolean _tripleNotEquals_2 = (_type_2 != null);
        if (_tripleNotEquals_2) {
          _builder.append("targetTypes.add(\"");
          String _name_5 = mut.getType().getName();
          _builder.append(_name_5);
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
        }
      }
    }
    {
      ObSelectionStrategy _object_4 = mut.getObject();
      if ((_object_4 instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes);");
        _builder.newLine();
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleEquals = (_expression == null);
          if (_tripleEquals) {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//");
            _builder.append(definedObjects = true);
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
            _builder.append("//");
            _builder.append(definedObjects = true);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LIST: ");
            ArrayList<Integer> _arrayList = new ArrayList<Integer>();
            List<Integer> _expressionList = this.expressionList = _arrayList;
            _builder.append(_expressionList);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            _builder.append(this.nExpression = 0);
            _builder.newLineIfNotEmpty();
            _builder.append("//EXPRESSION LEVEL: ");
            boolean _add = this.expressionList.add(Integer.valueOf(0));
            _builder.append(_add);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(0);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            Object _method = this.method(mut.getObject().getExpression(), 0);
            _builder.append(_method);
            _builder.newLineIfNotEmpty();
            _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
            Integer _get_1 = this.expressionList.get(0);
            _builder.append(_get_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            {
              if ((definedObjects == false)) {
                _builder.append("List<EObject> objects = null;");
                _builder.newLine();
                _builder.append("//");
                _builder.append(definedObjects = true);
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("if (selectedObjects.size() > 0) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("objects = selectedObjects;");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("ObSelectionStrategy objectSelection = null; ");
        _builder.newLine();
        _builder.append("if (objects != null && objects.size() > 0) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("objectSelection = new SpecificObjectSelection(packages, model, objects.get(0));");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        ObSelectionStrategy _object_5 = mut.getObject();
        if ((_object_5 instanceof CompleteTypeSelection)) {
          _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes);");
          _builder.newLine();
          _builder.append("EObject object = rts.getObject();");
          _builder.newLine();
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, objects.get(0));");
          _builder.newLine();
        } else {
          ObSelectionStrategy _object_6 = mut.getObject();
          if ((_object_6 instanceof SpecificObjectSelection)) {
            _builder.append("ObSelectionStrategy objectSelection = null;");
            _builder.newLine();
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container = mut.getContainer();
            String _name_6 = ((SpecificObjectSelection) _container).getObjSel().getName();
            _builder.append(_name_6);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_1 = mut.getContainer();
            String _name_7 = ((SpecificObjectSelection) _container_1).getObjSel().getName();
            _builder.append(_name_7);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("if (entry_");
            ObSelectionStrategy _container_2 = mut.getContainer();
            String _name_8 = ((SpecificObjectSelection) _container_2).getObjSel().getName();
            _builder.append(_name_8);
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _container_3 = mut.getContainer();
            String _name_9 = ((SpecificObjectSelection) _container_3).getObjSel().getName();
            _builder.append(_name_9, "\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_4 = mut.getContainer();
            String _name_10 = ((SpecificObjectSelection) _container_4).getObjSel().getName();
            _builder.append(_name_10, "\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _container_5 = mut.getContainer();
            String _name_11 = ((SpecificObjectSelection) _container_5).getObjSel().getName();
            _builder.append(_name_11, "\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
            ObSelectionStrategy _container_6 = mut.getContainer();
            String _name_12 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
            _builder.append(_name_12, "\t");
            _builder.append(" = hmList.get(\"");
            ObSelectionStrategy _container_7 = mut.getContainer();
            String _name_13 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
            _builder.append(_name_13, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (listEntry_");
            ObSelectionStrategy _container_8 = mut.getContainer();
            String _name_14 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
            _builder.append(_name_14, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("List<EObject> objs = new ArrayList<EObject>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
            ObSelectionStrategy _container_9 = mut.getContainer();
            String _name_15 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
            _builder.append(_name_15, "\t\t");
            _builder.append(") {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t");
            _builder.append("EObject obj = ent.getKey();");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("objs.add(obj);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("objectSelection = new SpecificObjectSelection(listEntry_");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_16 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
            _builder.append(_name_16, "\t\t");
            _builder.append(".get(0).getValue().getValue(), listEntry_");
            ObSelectionStrategy _container_11 = mut.getContainer();
            String _name_17 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
            _builder.append(_name_17, "\t\t");
            _builder.append(".get(0).getValue().getKey(), objs);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _object_7 = mut.getObject();
            if ((_object_7 instanceof SpecificClosureSelection)) {
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_12 = mut.getContainer();
              String _name_18 = ((SpecificClosureSelection) _container_12).getObjSel().getName();
              _builder.append(_name_18);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_13 = mut.getContainer();
              String _name_19 = ((SpecificClosureSelection) _container_13).getObjSel().getName();
              _builder.append(_name_19);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _container_14 = mut.getContainer();
              String _name_20 = ((SpecificClosureSelection) _container_14).getObjSel().getName();
              _builder.append(_name_20);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificClosureSelection(entry_");
              ObSelectionStrategy _container_15 = mut.getContainer();
              String _name_21 = ((SpecificClosureSelection) _container_15).getObjSel().getName();
              _builder.append(_name_21, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_16 = mut.getContainer();
              String _name_22 = ((SpecificClosureSelection) _container_16).getObjSel().getName();
              _builder.append(_name_22, "\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _container_17 = mut.getContainer();
              String _name_23 = ((SpecificClosureSelection) _container_17).getObjSel().getName();
              _builder.append(_name_23, "\t");
              _builder.append(".getKey(), \"");
              ObSelectionStrategy _object_8 = mut.getObject();
              String _name_24 = ((SpecificClosureSelection) _object_8).getRefType().getName();
              _builder.append(_name_24, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
    }
    _builder.append("EObject container = null;");
    _builder.newLine();
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("if (objectSelection != null) {");
    _builder.newLine();
    {
      ObSelectionStrategy _container_18 = mut.getContainer();
      boolean _tripleEquals_1 = (_container_18 == null);
      if (_tripleEquals_1) {
        _builder.append("container = ModelManager.getContainer(objectSelection.getModel(), objectSelection.getObject());");
        _builder.newLine();
        _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
        _builder.newLine();
      } else {
        {
          ObSelectionStrategy _container_19 = mut.getContainer();
          if ((_container_19 instanceof RandomTypeSelection)) {
            _builder.append("RandomTypeSelection rtsContainer = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_20 = mut.getContainer();
            String _name_25 = ((RandomTypeSelection) _container_20).getType().getName();
            _builder.append(_name_25);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rtsContainer.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_21 = mut.getContainer();
          if ((_container_21 instanceof CompleteTypeSelection)) {
            _builder.newLine();
            _builder.append("RandomTypeSelection rtsContainer = new RandomTypeSelection(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
            ObSelectionStrategy _container_22 = mut.getContainer();
            String _name_26 = ((CompleteTypeSelection) _container_22).getType().getName();
            _builder.append(_name_26);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("container = rtsContainer.getObject();");
            _builder.newLine();
            _builder.append("containerSelection = new SpecificObjectSelection(objectSelection.getMetaModel(), objectSelection.getModel(), container);");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_23 = mut.getContainer();
          if ((_container_23 instanceof SpecificObjectSelection)) {
            {
              EReference _refType = mut.getRefType();
              boolean _tripleNotEquals_3 = (_refType != null);
              if (_tripleNotEquals_3) {
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _container_24 = mut.getContainer();
                String _name_27 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
                _builder.append(_name_27);
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _container_25 = mut.getContainer();
                String _name_28 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
                _builder.append(_name_28);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (entry_");
                ObSelectionStrategy _container_26 = mut.getContainer();
                String _name_29 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
                _builder.append(_name_29);
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                ObSelectionStrategy _container_27 = mut.getContainer();
                String _name_30 = ((SpecificObjectSelection) _container_27).getObjSel().getName();
                _builder.append(_name_30, "\t");
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_28 = mut.getContainer();
                String _name_31 = ((SpecificObjectSelection) _container_28).getObjSel().getName();
                _builder.append(_name_31, "\t");
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_29 = mut.getContainer();
                String _name_32 = ((SpecificObjectSelection) _container_29).getObjSel().getName();
                _builder.append(_name_32, "\t");
                _builder.append(".getKey());");
                _builder.newLineIfNotEmpty();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          ObSelectionStrategy _container_30 = mut.getContainer();
          if ((_container_30 instanceof SpecificClosureSelection)) {
            {
              EReference _refType_1 = mut.getRefType();
              boolean _tripleNotEquals_4 = (_refType_1 != null);
              if (_tripleNotEquals_4) {
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                ObSelectionStrategy _container_31 = mut.getContainer();
                String _name_33 = ((SpecificClosureSelection) _container_31).getObjSel().getName();
                _builder.append(_name_33);
                _builder.append(" = hmObjects.get(\"");
                ObSelectionStrategy _container_32 = mut.getContainer();
                String _name_34 = ((SpecificClosureSelection) _container_32).getObjSel().getName();
                _builder.append(_name_34);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (entry_");
                ObSelectionStrategy _container_33 = mut.getContainer();
                String _name_35 = ((SpecificClosureSelection) _container_33).getObjSel().getName();
                _builder.append(_name_35);
                _builder.append(" != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                ObSelectionStrategy _container_34 = mut.getContainer();
                String _name_36 = ((SpecificClosureSelection) _container_34).getObjSel().getName();
                _builder.append(_name_36, "\t");
                _builder.append(".getValue().getValue(), entry_");
                ObSelectionStrategy _container_35 = mut.getContainer();
                String _name_37 = ((SpecificClosureSelection) _container_35).getObjSel().getName();
                _builder.append(_name_37, "\t");
                _builder.append(".getValue().getKey(), entry_");
                ObSelectionStrategy _container_36 = mut.getContainer();
                String _name_38 = ((SpecificClosureSelection) _container_36).getObjSel().getName();
                _builder.append(_name_38, "\t");
                _builder.append(".getKey(), \"");
                ObSelectionStrategy _container_37 = mut.getContainer();
                String _name_39 = ((SpecificClosureSelection) _container_37).getRefType().getName();
                _builder.append(_name_39, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("} else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("return mutations;");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    _builder.append("}");
    _builder.newLine();
    {
      EReference _refType_2 = mut.getRefType();
      boolean _tripleNotEquals_5 = (_refType_2 != null);
      if (_tripleNotEquals_5) {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        {
          ObSelectionStrategy _container_38 = mut.getContainer();
          if ((_container_38 instanceof SpecificObjectSelection)) {
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _container_39 = mut.getContainer();
            String _name_40 = ((SpecificClosureSelection) _container_39).getObjSel().getName();
            _builder.append(_name_40);
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _container_40 = mut.getContainer();
            String _name_41 = ((SpecificClosureSelection) _container_40).getObjSel().getName();
            _builder.append(_name_41);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _container_41 = mut.getContainer();
            String _name_42 = ((SpecificClosureSelection) _container_41).getObjSel().getName();
            _builder.append(_name_42, "\t\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
            ObSelectionStrategy _container_42 = mut.getContainer();
            String _name_43 = ((SpecificClosureSelection) _container_42).getObjSel().getName();
            _builder.append(_name_43);
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _container_43 = mut.getContainer();
            String _name_44 = ((SpecificClosureSelection) _container_43).getObjSel().getName();
            _builder.append(_name_44);
            _builder.append(".getValue().getKey(), \"");
            String _name_45 = mut.getRefType().getName();
            _builder.append(_name_45);
            _builder.append("\", entry_");
            ObSelectionStrategy _container_44 = mut.getContainer();
            String _name_46 = ((SpecificClosureSelection) _container_44).getObjSel().getName();
            _builder.append(_name_46);
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            ObSelectionStrategy _container_45 = mut.getContainer();
            if ((_container_45 instanceof SpecificClosureSelection)) {
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _container_46 = mut.getContainer();
              String _name_47 = ((SpecificClosureSelection) _container_46).getObjSel().getName();
              _builder.append(_name_47);
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _container_47 = mut.getContainer();
              String _name_48 = ((SpecificClosureSelection) _container_47).getObjSel().getName();
              _builder.append(_name_48);
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("if (entry_");
              ObSelectionStrategy _container_48 = mut.getContainer();
              String _name_49 = ((SpecificClosureSelection) _container_48).getObjSel().getName();
              _builder.append(_name_49);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
              ObSelectionStrategy _container_49 = mut.getContainer();
              String _name_50 = ((SpecificClosureSelection) _container_49).getObjSel().getName();
              _builder.append(_name_50, "\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _container_50 = mut.getContainer();
              String _name_51 = ((SpecificClosureSelection) _container_50).getObjSel().getName();
              _builder.append(_name_51, "\t");
              _builder.append(".getValue().getKey(), \"");
              String _name_52 = mut.getRefType().getName();
              _builder.append(_name_52, "\t");
              _builder.append("\", entry_");
              ObSelectionStrategy _container_51 = mut.getContainer();
              String _name_53 = ((SpecificClosureSelection) _container_51).getObjSel().getName();
              _builder.append(_name_53, "\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("SpecificReferenceSelection referenceSelection = null;");
              _builder.newLine();
              _builder.append("if (containerSelection != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
              String _name_54 = mut.getRefType().getName();
              _builder.append(_name_54, "\t");
              _builder.append("\", containerSelection);");
              _builder.newLineIfNotEmpty();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      } else {
        _builder.append("SpecificReferenceSelection referenceSelection = null;");
        _builder.newLine();
        _builder.append("if (containerSelection != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("referenceSelection = new SpecificReferenceSelection(containerSelection.getMetaModel(), containerSelection.getModel(), null, null);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    {
      ObSelectionStrategy _container_52 = mut.getContainer();
      boolean _tripleEquals_2 = (_container_52 == null);
      if (_tripleEquals_2) {
        _builder.append("\t\t    ");
        _builder.append("for (int obn = 0; obn < objects.size(); obn++) {");
        _builder.newLine();
        _builder.append("Resource m = EMFCopier.copyResource(model);");
        _builder.newLine();
        {
          if (((mut.getObject() instanceof SpecificObjectSelection) || (mut.getObject() instanceof SpecificClosureSelection))) {
            _builder.append("List<EObject> mObjects = ModelManager.getObjects(m, objects);");
            _builder.newLine();
            _builder.append("ObSelectionStrategy obSelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _object_9 = mut.getObject();
          if ((_object_9 instanceof RandomTypeSelection)) {
            _builder.append("rts = new RandomTypeSelection(packages, m, mutTypes);");
            _builder.newLine();
            _builder.append("List<EObject> mObjects = rts.getObjects();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy obSelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _object_10 = mut.getObject();
          if ((_object_10 instanceof CompleteTypeSelection)) {
            _builder.append("cts = new RandomTypeSelection(packages, m, mutTypes);");
            _builder.newLine();
            _builder.append("List<EObject> mObjects = rts.getObjects();");
            _builder.newLine();
            _builder.append("ObSelectionStrategy obSeelection = new SpecificObjectSelection(packages, m, mObjects.get(obn));");
            _builder.newLine();
          }
        }
        _builder.append("EObject c = ModelManager.getContainer(m, obSelection.getObject());");
        _builder.newLine();
        _builder.append("ObSelectionStrategy cSelection = new SpecificObjectSelection(packages, m, c);");
        _builder.newLine();
        _builder.append("SpecificReferenceSelection rSelection = new SpecificReferenceSelection(packages, m, null, null);");
        _builder.newLine();
      }
    }
    _builder.append("Map<String, AttributeConfigurationStrategy> atts = new HashMap<String, AttributeConfigurationStrategy>();");
    _builder.newLine();
    _builder.append("//");
    int counter = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<AttributeSet> _attributes = mut.getAttributes();
      for(final AttributeSet c : _attributes) {
        _builder.append("//");
        int _plusPlus = counter++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        CharSequence _method_1 = this.method(c, false, false, counter, true);
        _builder.append(_method_1);
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("Map<String, ObSelectionStrategy> refs = new HashMap<String, ObSelectionStrategy>();");
    _builder.newLine();
    {
      EList<ReferenceSet> _references = mut.getReferences();
      for(final ReferenceSet c_1 : _references) {
        CharSequence _method_2 = this.method(c_1, true);
        _builder.append(_method_2);
        _builder.newLineIfNotEmpty();
      }
    }
    {
      ObSelectionStrategy _container_53 = mut.getContainer();
      boolean _tripleNotEquals_6 = (_container_53 != null);
      if (_tripleNotEquals_6) {
        {
          if (((((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection)) || (mut.getObject() instanceof SpecificObjectSelection)) || (mut.getObject() instanceof SpecificClosureSelection))) {
            _builder.append("RetypeObjectMutator mut = new RetypeObjectMutator(model, packages, objectSelection.getObject(), referenceSelection, containerSelection, atts, refs, targetTypes);");
            _builder.newLine();
          }
        }
      }
    }
    {
      ObSelectionStrategy _container_54 = mut.getContainer();
      boolean _tripleEquals_3 = (_container_54 == null);
      if (_tripleEquals_3) {
        {
          if (((((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection)) || (mut.getObject() instanceof SpecificObjectSelection)) || (mut.getObject() instanceof SpecificClosureSelection))) {
            _builder.append("RetypeObjectMutator mut = new RetypeObjectMutator(m, packages, obSelection.getObject(), rSelection, cSelection, atts, refs, targetTypes);");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("Mutator mutator = null;");
    _builder.newLine();
    _builder.append("if (muts == null) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
    String _plus = ("registry" + _string);
    String _registryMethodName = this.registryMethodName = _plus;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        {
          String _name_55 = mut.getName();
          boolean _tripleNotEquals_7 = (_name_55 != null);
          if (_tripleNotEquals_7) {
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("hmObjects.put(\"");
            String _name_56 = mut.getName();
            _builder.append(_name_56, "\t\t\t");
            _builder.append("\", entry);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("mutator = mut;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (mutator != null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//");
    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((last == false)) {
        {
          ObSelectionStrategy _container_55 = mut.getContainer();
          boolean _tripleNotEquals_8 = (_container_55 != null);
          if (_tripleNotEquals_8) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                _builder.newLine();
              } else {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("numMutantsGenerated = k[0];");
            _builder.newLine();
          }
        }
        {
          ObSelectionStrategy _container_56 = mut.getContainer();
          boolean _tripleEquals_4 = (_container_56 == null);
          if (_tripleEquals_4) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
                _builder.newLine();
              } else {
                _builder.append("\t\t");
                _builder.append("mutation");
                _builder.append(this.nMethodCall, "\t\t");
                _builder.append("(packages, model, hmObjects, hmList, hashmapModelFilenames,");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t\t\t");
                _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("numMutantsGenerated = k[0];");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    {
      if ((last == true)) {
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("\t\t");
            _builder.append("if (rules.get(\"");
            String _name_57 = constraint.getType().getName();
            _builder.append(_name_57, "\t\t");
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_58 = constraint.getType().getName();
            _builder.append(_name_58, "\t\t\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_59 = constraint.getType().getName();
            _builder.append(_name_59, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_9 = (_expressions != null);
              if (_tripleNotEquals_9) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_10 = (_rules != null);
              if (_tripleNotEquals_10) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    _builder.append(rule, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("rules.put(\"");
            String _name_60 = constraint.getType().getName();
            _builder.append(_name_60, "\t\t");
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((b == null)) {
            _builder.append("\t\t");
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
            _builder.newLine();
          } else {
            {
              int _size = b.getFrom().size();
              boolean _equals = (_size == 0);
              if (_equals) {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_61 = b.getName();
                _builder.append(_name_61);
                _builder.append("/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_62 = b.getName();
                _builder.append(_name_62);
                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((b == null)) {
            {
              if ((this.standalone == false)) {
                _builder.append("   \t\t");
                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
                _builder.newLine();
              } else {
                _builder.append("   \t\t");
                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName = this.getProjectName();
                _builder.append(_projectName, "   \t\t");
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className, "   \t\t");
                _builder.append(".class, true);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              if ((this.standalone == false)) {
                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_63 = b.getName();
                _builder.append(_name_63);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_64 = b.getName();
                _builder.append(_name_64);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName_1 = this.getProjectName();
                _builder.append(_projectName_1);
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className);
                _builder.append(".class, true, false);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("muts = null;");
        _builder.newLine();
        {
          ObSelectionStrategy _container_57 = mut.getContainer();
          boolean _tripleEquals_5 = (_container_57 == null);
          if (_tripleEquals_5) {
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//END RETYPE OBJECT ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence modifySourceReferenceMutator(final ModifySourceReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//MODIFY SOURCE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _source = mut.getSource();
      if ((_source instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("RandomTypeSelection sourceSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _source_1 = mut.getSource();
        String _name = ((RandomTypeSelection) _source_1).getType().getName();
        _builder.append(_name, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _source_2 = mut.getSource();
        if ((_source_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
          ObSelectionStrategy _source_3 = mut.getSource();
          String _name_1 = ((CompleteTypeSelection) _source_3).getType().getName();
          _builder.append(_name_1, "\t");
          _builder.append(" = hmList.get(\"");
          ObSelectionStrategy _source_4 = mut.getSource();
          String _name_2 = ((CompleteTypeSelection) _source_4).getType().getName();
          _builder.append(_name_2, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("List<EObject> objects = new ArrayList<EObject>();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
          ObSelectionStrategy _source_5 = mut.getSource();
          String _name_3 = ((CompleteTypeSelection) _source_5).getType().getName();
          _builder.append(_name_3, "\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("EObject obj = ent.getKey();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("objects.add(obj);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("List<ObSelectionStrategy> listSourceSelection = new ArrayList<ObSelectionStrategy>();");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("for (EObject obj : objects) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, obj);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("listSourceSelection.add(objectSelection);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        } else {
          ObSelectionStrategy _source_6 = mut.getSource();
          if ((_source_6 instanceof SpecificObjectSelection)) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy sourceSelection = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _source_7 = mut.getSource();
            String _name_4 = ((SpecificObjectSelection) _source_7).getObjSel().getName();
            _builder.append(_name_4, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _source_8 = mut.getSource();
            String _name_5 = ((SpecificObjectSelection) _source_8).getObjSel().getName();
            _builder.append(_name_5, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _source_9 = mut.getSource();
            String _name_6 = ((SpecificObjectSelection) _source_9).getObjSel().getName();
            _builder.append(_name_6, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("sourceSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _source_10 = mut.getSource();
            String _name_7 = ((SpecificObjectSelection) _source_10).getObjSel().getName();
            _builder.append(_name_7, "\t\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _source_11 = mut.getSource();
            String _name_8 = ((SpecificObjectSelection) _source_11).getObjSel().getName();
            _builder.append(_name_8, "\t\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _source_12 = mut.getSource();
            String _name_9 = ((SpecificObjectSelection) _source_12).getObjSel().getName();
            _builder.append(_name_9, "\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy sourceSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
            _builder.newLine();
          }
        }
      }
    }
    {
      ObSelectionStrategy _newSource = mut.getNewSource();
      if ((_newSource instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("RandomTypeSelection newSourceSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _newSource_1 = mut.getNewSource();
        String _name_10 = ((RandomTypeSelection) _newSource_1).getType().getName();
        _builder.append(_name_10, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _newSource_2 = mut.getNewSource();
        if ((_newSource_2 instanceof OtherTypeSelection)) {
          _builder.append("\t");
          _builder.append("EObject otherSourceSelection = null; ");
          _builder.newLine();
          {
            ObSelectionStrategy _source_13 = mut.getSource();
            if ((_source_13 instanceof CompleteTypeSelection)) {
              _builder.append("\t");
              _builder.append("otherSourceSelection = sourceSelection.get(0).getObject();");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("otherSourceSelection = sourceSelection.getObject();");
              _builder.newLine();
            }
          }
          _builder.append("\t");
          _builder.append("Object otherRef = null;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("if (otherSourceSelection != null) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("for (EReference ref : otherSourceSelection.eClass().getEAllReferences()) {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("if (ref.getName().equals(\"");
          String _name_11 = mut.getRefType().getName();
          _builder.append(_name_11, "\t\t\t");
          _builder.append("\")) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("otherRef = otherSourceSelection.eGet(ref);");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t\t");
          _builder.append("break;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("OtherTypeSelection newSourceSelection = new OtherTypeSelection(packages, model, \"");
          ObSelectionStrategy _newSource_3 = mut.getNewSource();
          String _name_12 = ((OtherTypeSelection) _newSource_3).getType().getName();
          _builder.append(_name_12, "\t");
          _builder.append("\", otherRef);");
          _builder.newLineIfNotEmpty();
        } else {
          ObSelectionStrategy _newSource_4 = mut.getNewSource();
          if ((_newSource_4 instanceof CompleteTypeSelection)) {
            _builder.append("\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("RandomTypeSelection newSourceSelection = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _newSource_5 = mut.getNewSource();
            String _name_13 = ((CompleteTypeSelection) _newSource_5).getType().getName();
            _builder.append(_name_13, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          } else {
            ObSelectionStrategy _newSource_6 = mut.getNewSource();
            if ((_newSource_6 instanceof SpecificObjectSelection)) {
              _builder.append("\t");
              _builder.append("ObSelectionStrategy newSourceSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _newSource_7 = mut.getNewSource();
              String _name_14 = ((SpecificObjectSelection) _newSource_7).getObjSel().getName();
              _builder.append(_name_14, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _newSource_8 = mut.getNewSource();
              String _name_15 = ((SpecificObjectSelection) _newSource_8).getObjSel().getName();
              _builder.append(_name_15, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _newSource_9 = mut.getNewSource();
              String _name_16 = ((SpecificObjectSelection) _newSource_9).getObjSel().getName();
              _builder.append(_name_16, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("newSourceSelection = new SpecificObjectSelection(entry_");
              ObSelectionStrategy _newSource_10 = mut.getNewSource();
              String _name_17 = ((SpecificObjectSelection) _newSource_10).getObjSel().getName();
              _builder.append(_name_17, "\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _newSource_11 = mut.getNewSource();
              String _name_18 = ((SpecificObjectSelection) _newSource_11).getObjSel().getName();
              _builder.append(_name_18, "\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _newSource_12 = mut.getNewSource();
              String _name_19 = ((SpecificObjectSelection) _newSource_12).getObjSel().getName();
              _builder.append(_name_19, "\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("ObSelectionStrategy newSourceSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
              _builder.newLine();
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _source_14 = mut.getSource();
      if ((_source_14 instanceof CompleteTypeSelection)) {
        _builder.append("\t");
        _builder.append("for (ObSelectionStrategy sourceSelection : listSourceSelection) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("ModifySourceReferenceMutator mut = new ModifySourceReferenceMutator(sourceSelection.getModel(), sourceSelection.getMetaModel(), sourceSelection, newSourceSelection, \"");
        String _name_20 = mut.getRefType().getName();
        _builder.append(_name_20, "\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("   \t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus = this.nMutation++;
        _builder.append(_plusPlus, "\t   \t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_1 = this.nRegistryMutation++;
        _builder.append(_plusPlus_1, "\t\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("   \t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("   \t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t   \t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("ModifySourceReferenceMutator mut = new ModifySourceReferenceMutator(sourceSelection.getModel(), sourceSelection.getMetaModel(), sourceSelection, newSourceSelection, \"");
        String _name_21 = mut.getRefType().getName();
        _builder.append(_name_21, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_2 = this.nMutation++;
        _builder.append(_plusPlus_2, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_3 = this.nRegistryMutation++;
        _builder.append(_plusPlus_3, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("//END MODIFY SOURCE REFERENCE ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence modifySourceReferenceMutatorExhaustive(final ModifySourceReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//MODIFY SOURCE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END MODIFY SOURCE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence modifyTargetReferenceMutator(final ModifyTargetReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("//MODIFY TARGET REFERENCE ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _source = mut.getSource();
      if ((_source instanceof RandomTypeSelection)) {
        _builder.append("\t\t");
        _builder.append("RandomTypeSelection sourceSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _source_1 = mut.getSource();
        String _name = ((RandomTypeSelection) _source_1).getType().getName();
        _builder.append(_name, "\t\t");
        _builder.append("\");\t\t\t");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _source_2 = mut.getSource();
        if ((_source_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t\t");
          _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
          ObSelectionStrategy _source_3 = mut.getSource();
          String _name_1 = ((CompleteTypeSelection) _source_3).getType().getName();
          _builder.append(_name_1, "\t\t");
          _builder.append(" = hmList.get(\"");
          ObSelectionStrategy _source_4 = mut.getSource();
          String _name_2 = ((CompleteTypeSelection) _source_4).getType().getName();
          _builder.append(_name_2, "\t\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("List<EObject> objects = new ArrayList<EObject>();");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
          ObSelectionStrategy _source_5 = mut.getSource();
          String _name_3 = ((CompleteTypeSelection) _source_5).getType().getName();
          _builder.append(_name_3, "\t\t");
          _builder.append(") {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("EObject obj = ent.getKey();");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("objects.add(obj);");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("List<ObSelectionStrategy> listSourceSelection = new ArrayList<ObSelectionStrategy>();");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("for (EObject obj : objects) {");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("ObSelectionStrategy objectSelection = new SpecificObjectSelection(packages, model, obj);");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("listSourceSelection.add(objectSelection);");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
        } else {
          ObSelectionStrategy _source_6 = mut.getSource();
          if ((_source_6 instanceof SpecificObjectSelection)) {
            _builder.append("\t\t");
            _builder.append("ObSelectionStrategy sourceSelection = null;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _source_7 = mut.getSource();
            String _name_4 = ((SpecificObjectSelection) _source_7).getObjSel().getName();
            _builder.append(_name_4, "\t\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _source_8 = mut.getSource();
            String _name_5 = ((SpecificObjectSelection) _source_8).getObjSel().getName();
            _builder.append(_name_5, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _source_9 = mut.getSource();
            String _name_6 = ((SpecificObjectSelection) _source_9).getObjSel().getName();
            _builder.append(_name_6, "\t\t");
            _builder.append(" != null) { ");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("sourceSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _source_10 = mut.getSource();
            String _name_7 = ((SpecificObjectSelection) _source_10).getObjSel().getName();
            _builder.append(_name_7, "\t\t\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _source_11 = mut.getSource();
            String _name_8 = ((SpecificObjectSelection) _source_11).getObjSel().getName();
            _builder.append(_name_8, "\t\t\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _source_12 = mut.getSource();
            String _name_9 = ((SpecificObjectSelection) _source_12).getObjSel().getName();
            _builder.append(_name_9, "\t\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("ObSelectionStrategy sourceSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
            _builder.newLine();
          }
        }
      }
    }
    {
      ObSelectionStrategy _newTarget = mut.getNewTarget();
      if ((_newTarget instanceof RandomTypeSelection)) {
        _builder.append("\t\t");
        _builder.append("RandomTypeSelection newTargetSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _newTarget_1 = mut.getNewTarget();
        String _name_10 = ((RandomTypeSelection) _newTarget_1).getType().getName();
        _builder.append(_name_10, "\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _newTarget_2 = mut.getNewTarget();
        if ((_newTarget_2 instanceof OtherTypeSelection)) {
          _builder.append("\t\t");
          _builder.append("EObject otherSourceSelection = null; ");
          _builder.newLine();
          {
            ObSelectionStrategy _source_13 = mut.getSource();
            if ((_source_13 instanceof CompleteTypeSelection)) {
              _builder.append("\t\t");
              _builder.append("otherSourceSelection = sourceSelection.get(0).getObject();");
              _builder.newLine();
            } else {
              _builder.append("\t\t");
              _builder.append("otherSourceSelection = sourceSelection.getObject();");
              _builder.newLine();
            }
          }
          _builder.append("\t\t");
          _builder.append("Object otherRef = null;");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("if (otherSourceSelection != null) {");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("for (EReference ref : otherSourceSelection.eClass().getEAllReferences()) {");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t\t");
          _builder.append("if (ref.getName().equals(\"");
          String _name_11 = mut.getRefType().getName();
          _builder.append(_name_11, "\t\t\t\t");
          _builder.append("\")) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t\t");
          _builder.append("\t\t\t");
          _builder.append("otherRef = otherSourceSelection.eGet(ref);");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t\t\t");
          _builder.append("break;");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t\t");
          _builder.append("OtherTypeSelection newTargetSelection = new OtherTypeSelection(packages, model, \"");
          ObSelectionStrategy _newTarget_3 = mut.getNewTarget();
          String _name_12 = ((OtherTypeSelection) _newTarget_3).getType().getName();
          _builder.append(_name_12, "\t\t");
          _builder.append("\", otherRef);");
          _builder.newLineIfNotEmpty();
        } else {
          ObSelectionStrategy _newTarget_4 = mut.getNewTarget();
          if ((_newTarget_4 instanceof CompleteTypeSelection)) {
            _builder.append("\t\t");
            _builder.append("RandomTypeSelection newTargetSelection = new RandomTypeSelection(packages, model, \"");
            ObSelectionStrategy _newTarget_5 = mut.getNewTarget();
            String _name_13 = ((CompleteTypeSelection) _newTarget_5).getType().getName();
            _builder.append(_name_13, "\t\t");
            _builder.append("\");\t\t\t");
            _builder.newLineIfNotEmpty();
          } else {
            ObSelectionStrategy _newTarget_6 = mut.getNewTarget();
            if ((_newTarget_6 instanceof SpecificObjectSelection)) {
              _builder.append("\t\t");
              _builder.append("ObSelectionStrategy newTargetSelection = null;");
              _builder.newLine();
              _builder.append("\t\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _newTarget_7 = mut.getNewTarget();
              String _name_14 = ((SpecificObjectSelection) _newTarget_7).getObjSel().getName();
              _builder.append(_name_14, "\t\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _newTarget_8 = mut.getNewTarget();
              String _name_15 = ((SpecificObjectSelection) _newTarget_8).getObjSel().getName();
              _builder.append(_name_15, "\t\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _newTarget_9 = mut.getNewTarget();
              String _name_16 = ((SpecificObjectSelection) _newTarget_9).getObjSel().getName();
              _builder.append(_name_16, "\t\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("newTargetSelection = new SpecificObjectSelection(entry_");
              ObSelectionStrategy _newTarget_10 = mut.getNewTarget();
              String _name_17 = ((SpecificObjectSelection) _newTarget_10).getObjSel().getName();
              _builder.append(_name_17, "\t\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _newTarget_11 = mut.getNewTarget();
              String _name_18 = ((SpecificObjectSelection) _newTarget_11).getObjSel().getName();
              _builder.append(_name_18, "\t\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _newTarget_12 = mut.getNewTarget();
              String _name_19 = ((SpecificObjectSelection) _newTarget_12).getObjSel().getName();
              _builder.append(_name_19, "\t\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t\t");
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("\t\t");
              _builder.append("ObSelectionStrategy newTargetSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
              _builder.newLine();
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _source_14 = mut.getSource();
      if ((_source_14 instanceof CompleteTypeSelection)) {
        _builder.append("\t\t");
        _builder.append("for (ObSelectionStrategy sourceSelection : listSourceSelection) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mutations.add(ModifyTargetReferenceMutator(sourceSelection.getModel(), sourceSelection.getMetaModel(), sourceSelection, newTargetSelection, \"");
        String _name_20 = mut.getRefType().getName();
        _builder.append(_name_20, "\t\t\t");
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      } else {
        _builder.append("\t\t");
        _builder.append("ModifyTargetReferenceMutator mut = new ModifyTargetReferenceMutator(sourceSelection.getModel(), sourceSelection.getMetaModel(), sourceSelection, newTargetSelection, \"");
        String _name_21 = mut.getRefType().getName();
        _builder.append(_name_21, "\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus = this.nMutation++;
        _builder.append(_plusPlus, "\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_1 = this.nRegistryMutation++;
        _builder.append(_plusPlus_1, "\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("//END MODIFY TARGET REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence modifyTargetReferenceMutatorExhaustive(final ModifyTargetReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//MODIFY TARGET REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END MODIFY TARGET REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence createReferenceMutator(final CreateReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//CREATE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    {
      ObSelectionStrategy _source = mut.getSource();
      if ((_source instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("RandomTypeSelection sourceSelection = new RandomTypeSelection(sourceSelection.getMetaModel(), sourceSelection.getModel(), \"");
        ObSelectionStrategy _source_1 = mut.getSource();
        String _name = ((RandomTypeSelection) _source_1).getType().getName();
        _builder.append(_name, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _source_2 = mut.getSource();
        if ((_source_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("RandomTypeSelection sourceSelection = new RandomTypeSelection(sourceSelection.getMetaModel(), sourceSelection.getModel(), \"");
          ObSelectionStrategy _source_3 = mut.getSource();
          String _name_1 = ((CompleteTypeSelection) _source_3).getType().getName();
          _builder.append(_name_1, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
        } else {
          ObSelectionStrategy _source_4 = mut.getSource();
          if ((_source_4 instanceof SpecificObjectSelection)) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy sourceSelection = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _source_5 = mut.getSource();
            String _name_2 = ((SpecificObjectSelection) _source_5).getObjSel().getName();
            _builder.append(_name_2, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _source_6 = mut.getSource();
            String _name_3 = ((SpecificObjectSelection) _source_6).getObjSel().getName();
            _builder.append(_name_3, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _source_7 = mut.getSource();
            String _name_4 = ((SpecificObjectSelection) _source_7).getObjSel().getName();
            _builder.append(_name_4, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("sourceSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _source_8 = mut.getSource();
            String _name_5 = ((SpecificObjectSelection) _source_8).getObjSel().getName();
            _builder.append(_name_5, "\t\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _source_9 = mut.getSource();
            String _name_6 = ((SpecificObjectSelection) _source_9).getObjSel().getName();
            _builder.append(_name_6, "\t\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _source_10 = mut.getSource();
            String _name_7 = ((SpecificObjectSelection) _source_10).getObjSel().getName();
            _builder.append(_name_7, "\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy sourceSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
            _builder.newLine();
          }
        }
      }
    }
    {
      ObSelectionStrategy _target = mut.getTarget();
      if ((_target instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("RandomTypeSelection targetSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _target_1 = mut.getTarget();
        String _name_8 = ((RandomTypeSelection) _target_1).getType().getName();
        _builder.append(_name_8, "\t");
        _builder.append("\");\t\t\t");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _target_2 = mut.getTarget();
        if ((_target_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("RandomTypeSelection targetSelection = new RandomTypeSelection(packages, model, \"");
          ObSelectionStrategy _target_3 = mut.getTarget();
          String _name_9 = ((CompleteTypeSelection) _target_3).getType().getName();
          _builder.append(_name_9, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
        } else {
          ObSelectionStrategy _target_4 = mut.getTarget();
          if ((_target_4 instanceof SpecificObjectSelection)) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy targetSelection = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
            ObSelectionStrategy _target_5 = mut.getTarget();
            String _name_10 = ((SpecificObjectSelection) _target_5).getObjSel().getName();
            _builder.append(_name_10, "\t");
            _builder.append(" = hmObjects.get(\"");
            ObSelectionStrategy _target_6 = mut.getTarget();
            String _name_11 = ((SpecificObjectSelection) _target_6).getObjSel().getName();
            _builder.append(_name_11, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (entry_");
            ObSelectionStrategy _target_7 = mut.getTarget();
            String _name_12 = ((SpecificObjectSelection) _target_7).getObjSel().getName();
            _builder.append(_name_12, "\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("targetSelection = new SpecificObjectSelection(entry_");
            ObSelectionStrategy _target_8 = mut.getTarget();
            String _name_13 = ((SpecificObjectSelection) _target_8).getObjSel().getName();
            _builder.append(_name_13, "\t\t");
            _builder.append(".getValue().getValue(), entry_");
            ObSelectionStrategy _target_9 = mut.getTarget();
            String _name_14 = ((SpecificObjectSelection) _target_9).getObjSel().getName();
            _builder.append(_name_14, "\t\t");
            _builder.append(".getValue().getKey(), entry_");
            ObSelectionStrategy _target_10 = mut.getTarget();
            String _name_15 = ((SpecificObjectSelection) _target_10).getObjSel().getName();
            _builder.append(_name_15, "\t\t");
            _builder.append(".getKey());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("} else {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("return mutations;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy targetSelection = new SpecificObjectSelection(packages, model, (EObject) null);");
            _builder.newLine();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("CreateReferenceMutator mut = new CreateReferenceMutator(sourceSelection.getModel(), sourceSelection.getMetaModel(), sourceSelection, targetSelection, \"");
    String _name_16 = mut.getRefType().getName();
    _builder.append(_name_16, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus = this.nMutation++;
    _builder.append(_plusPlus, "   \t");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nRegistryMutation++;
    _builder.append(_plusPlus_1, "   \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t");
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "   \t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//END CREATE REFERENCE ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence createReferenceMutatorExhaustive(final CreateReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//CREATE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END CREATE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeObjectMutator(final RemoveObjectMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("// REMOVE OBJECT ");
    _builder.append(this.methodName, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("SpecificReferenceSelection referenceSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("List<String> mutTypes = new ArrayList<String>();");
    _builder.newLine();
    {
      ObSelectionStrategy _object = mut.getObject();
      if ((_object instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("//");
        ObSelectionStrategy _object_1 = mut.getObject();
        RandomTypeSelection selection = ((RandomTypeSelection) _object_1);
        _builder.newLineIfNotEmpty();
        {
          if (((selection.getTypes() != null) && (selection.getTypes().size() > 0))) {
            {
              EList<EClass> _types = selection.getTypes();
              for(final EClass type : _types) {
                _builder.append("\t");
                _builder.append("mutTypes.add(\"");
                String _name = type.getName();
                _builder.append(_name, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            EClass _type = selection.getType();
            boolean _tripleNotEquals = (_type != null);
            if (_tripleNotEquals) {
              _builder.append("\t");
              _builder.append("mutTypes.add(\"");
              String _name_1 = selection.getType().getName();
              _builder.append(_name_1, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      } else {
        ObSelectionStrategy _object_2 = mut.getObject();
        if ((_object_2 instanceof CompleteTypeSelection)) {
          _builder.append("\t");
          _builder.append("//");
          ObSelectionStrategy _object_3 = mut.getObject();
          CompleteTypeSelection selection_1 = ((CompleteTypeSelection) _object_3);
          _builder.newLineIfNotEmpty();
          {
            if (((selection_1.getTypes() != null) && (selection_1.getTypes().size() > 0))) {
              {
                EList<EClass> _types_1 = selection_1.getTypes();
                for(final EClass type_1 : _types_1) {
                  _builder.append("\t");
                  _builder.append("mutTypes.add(\"");
                  String _name_2 = type_1.getName();
                  _builder.append(_name_2, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
            } else {
              EClass _type_1 = selection_1.getType();
              boolean _tripleNotEquals_1 = (_type_1 != null);
              if (_tripleNotEquals_1) {
                _builder.append("\t");
                _builder.append("mutTypes.add(\"");
                String _name_3 = selection_1.getType().getName();
                _builder.append(_name_3, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("//");
    boolean rts = false;
    _builder.newLineIfNotEmpty();
    {
      if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
        {
          ObSelectionStrategy _container = mut.getContainer();
          boolean _tripleEquals = (_container == null);
          if (_tripleEquals) {
            {
              ObSelectionStrategy _object_4 = mut.getObject();
              if ((_object_4 instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes, mutatedObjects);");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_5 = mut.getObject();
              if ((_object_5 instanceof CompleteTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, mutTypes, mutatedObjects);");
                _builder.newLine();
              }
            }
          } else {
            {
              ObSelectionStrategy _container_1 = mut.getContainer();
              if ((_container_1 instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _container_2 = mut.getContainer();
                String _name_4 = ((RandomTypeSelection) _container_2).getType().getName();
                _builder.append(_name_4, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("EObject container = rts.getObject();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                _builder.newLine();
                {
                  EReference _refType = mut.getContainer().getRefType();
                  boolean _tripleNotEquals_2 = (_refType != null);
                  if (_tripleNotEquals_2) {
                    _builder.append("\t");
                    _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                    String _name_5 = mut.getContainer().getRefType().getName();
                    _builder.append(_name_5, "\t");
                    _builder.append("\", containerSelection);");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                    _builder.newLine();
                  }
                }
              } else {
                ObSelectionStrategy _container_3 = mut.getContainer();
                if ((_container_3 instanceof CompleteTypeSelection)) {
                  _builder.append("\t");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("//");
                  _builder.append(rts = true, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                  ObSelectionStrategy _container_4 = mut.getContainer();
                  String _name_6 = ((CompleteTypeSelection) _container_4).getType().getName();
                  _builder.append(_name_6, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("EObject container = rts.getObject();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                  _builder.newLine();
                  {
                    EReference _refType_1 = mut.getContainer().getRefType();
                    boolean _tripleNotEquals_3 = (_refType_1 != null);
                    if (_tripleNotEquals_3) {
                      _builder.append("\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                      String _name_7 = mut.getContainer().getRefType().getName();
                      _builder.append(_name_7, "\t");
                      _builder.append("\", containerSelection);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                      _builder.newLine();
                    }
                  }
                } else {
                  ObSelectionStrategy _container_5 = mut.getContainer();
                  if ((_container_5 instanceof SpecificObjectSelection)) {
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _container_6 = mut.getContainer();
                    String _name_8 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
                    _builder.append(_name_8, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _container_7 = mut.getContainer();
                    String _name_9 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
                    _builder.append(_name_9, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("if (entry_");
                    ObSelectionStrategy _container_8 = mut.getContainer();
                    String _name_10 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
                    _builder.append(_name_10, "\t");
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                    ObSelectionStrategy _container_9 = mut.getContainer();
                    String _name_11 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
                    _builder.append(_name_11, "\t\t");
                    _builder.append(".getValue().getValue(), entry_");
                    ObSelectionStrategy _container_10 = mut.getContainer();
                    String _name_12 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
                    _builder.append(_name_12, "\t\t");
                    _builder.append(".getValue().getKey(), entry_");
                    ObSelectionStrategy _container_11 = mut.getContainer();
                    String _name_13 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
                    _builder.append(_name_13, "\t\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("} else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("return mutations;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    {
                      EReference _refType_2 = mut.getContainer().getRefType();
                      boolean _tripleNotEquals_4 = (_refType_2 != null);
                      if (_tripleNotEquals_4) {
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_12 = mut.getContainer();
                        String _name_14 = ((SpecificObjectSelection) _container_12).getObjSel().getName();
                        _builder.append(_name_14, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                        ObSelectionStrategy _container_13 = mut.getContainer();
                        String _name_15 = ((SpecificObjectSelection) _container_13).getObjSel().getName();
                        _builder.append(_name_15, "\t\t");
                        _builder.append(".getValue().getValue(), entry_");
                        ObSelectionStrategy _container_14 = mut.getContainer();
                        String _name_16 = ((SpecificObjectSelection) _container_14).getObjSel().getName();
                        _builder.append(_name_16, "\t\t");
                        _builder.append(".getValue().getKey(), \"");
                        String _name_17 = mut.getContainer().getRefType().getName();
                        _builder.append(_name_17, "\t\t");
                        _builder.append("\", entry_");
                        ObSelectionStrategy _container_15 = mut.getContainer();
                        String _name_18 = ((SpecificObjectSelection) _container_15).getObjSel().getName();
                        _builder.append(_name_18, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("return mutations;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                      } else {
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
            {
              if ((rts == true)) {
                _builder.append("\t");
                _builder.append("rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), mutTypes, referenceSelection, containerSelection);");
                _builder.newLine();
              } else {
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), mutTypes, referenceSelection, containerSelection);");
                _builder.newLine();
              }
            }
            {
              if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                _builder.append("\t");
                _builder.append("EObject object = rts.getObject();");
                _builder.newLine();
              }
            }
          }
        }
        {
          if (((mut.getObject().getExpression() == null) && (mut.getContainer() == null))) {
            {
              ObSelectionStrategy _object_6 = mut.getObject();
              if ((_object_6 instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("EObject object = rts.getObject();");
                _builder.newLine();
              }
            }
            {
              ObSelectionStrategy _object_7 = mut.getObject();
              if ((_object_7 instanceof CompleteTypeSelection)) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
              }
            }
          }
        }
        {
          EReference _refType_3 = mut.getObject().getRefType();
          boolean _tripleNotEquals_5 = (_refType_3 != null);
          if (_tripleNotEquals_5) {
            _builder.append("\t");
            _builder.append("Object o = object.eGet(\"");
            EReference _refType_4 = mut.getObject().getRefType();
            _builder.append(_refType_4, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("if (o instanceof EObject) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("object = (EObject) o;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (o instanceof List<?>) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("object = ((List<EObject) o).get(ModelManager.getRandomIndex((List<EObject) o));");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleNotEquals_6 = (_expression != null);
          if (_tripleNotEquals_6) {
            {
              ObSelectionStrategy _container_16 = mut.getContainer();
              boolean _tripleEquals_1 = (_container_16 == null);
              if (_tripleEquals_1) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList = new ArrayList<Integer>();
                List<Integer> _expressionList = this.expressionList = _arrayList;
                _builder.append(_expressionList, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get = this.expressionList.get(0);
                _builder.append(_get, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("   \t\t\t\t\t");
                Object _method = this.method(mut.getObject().getExpression(), 0);
                _builder.append(_method, "   \t\t\t\t\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                Integer _get_1 = this.expressionList.get(0);
                _builder.append(_get_1, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_8 = mut.getObject();
                  if ((_object_8 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("EObject object = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (selectedObjects.size() > 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  ObSelectionStrategy _object_9 = mut.getObject();
                  if ((_object_9 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("objects = selectedObjects;");
                    _builder.newLine();
                  }
                }
              } else {
                Expression _expression_1 = mut.getContainer().getExpression();
                boolean _tripleEquals_2 = (_expression_1 == null);
                if (_tripleEquals_2) {
                  _builder.append("\t");
                  _builder.append("List<EObject> objects = rts.getObjects();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LIST: ");
                  ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
                  List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
                  _builder.append(_expressionList_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  _builder.append(this.nExpression = 0, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
                  _builder.append(_add_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("Expression exp");
                  Integer _get_2 = this.expressionList.get(0);
                  _builder.append(_get_2, "\t");
                  _builder.append(" = new Expression();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  Object _method_1 = this.method(mut.getObject().getExpression(), 0);
                  _builder.append(_method_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                  Integer _get_3 = this.expressionList.get(0);
                  _builder.append(_get_3, "\t");
                  _builder.append(");");
                  _builder.newLineIfNotEmpty();
                  {
                    ObSelectionStrategy _object_10 = mut.getObject();
                    if ((_object_10 instanceof RandomTypeSelection)) {
                      _builder.append("\t");
                      _builder.append("EObject object = null;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("if (selectedObjects.size() > 0) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                  {
                    ObSelectionStrategy _object_11 = mut.getObject();
                    if ((_object_11 instanceof CompleteTypeSelection)) {
                      _builder.append("\t");
                      _builder.append("objects = selectedObjects;");
                      _builder.newLine();
                    }
                  }
                }
              }
            }
          }
        }
        {
          Expression _expression_2 = mut.getObject().getExpression();
          boolean _tripleEquals_3 = (_expression_2 == null);
          if (_tripleEquals_3) {
            {
              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() != null))) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList_2 = new ArrayList<Integer>();
                List<Integer> _expressionList_2 = this.expressionList = _arrayList_2;
                _builder.append(_expressionList_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add_2 = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get_4 = this.expressionList.get(0);
                _builder.append(_get_4, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Object _method_2 = this.method(mut.getContainer().getExpression(), 0);
                _builder.append(_method_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> selectedObjects = evaluate(objects, exp");
                Integer _get_5 = this.expressionList.get(0);
                _builder.append(_get_5, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                {
                  ObSelectionStrategy _object_12 = mut.getObject();
                  if ((_object_12 instanceof RandomTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("EObject object = null;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("if (selectedObjects.size() > 0) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("object = selectedObjects.get(ModelManager.getRandomIndex(selectedObjects));");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
                {
                  ObSelectionStrategy _object_13 = mut.getObject();
                  if ((_object_13 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.append("objects = selectedObjects;");
                    _builder.newLine();
                  }
                }
              }
            }
          }
        }
        {
          ObSelectionStrategy _object_14 = mut.getObject();
          if ((_object_14 instanceof RandomTypeSelection)) {
            _builder.append("\t");
            _builder.append("ObSelectionStrategy objectSelection = null; ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("if (object != null) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("objectSelection = new SpecificObjectSelection(packages, model, object);");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      } else {
        ObSelectionStrategy _object_15 = mut.getObject();
        if ((_object_15 instanceof SpecificObjectSelection)) {
          {
            ObSelectionStrategy _container_17 = mut.getContainer();
            boolean _tripleEquals_4 = (_container_17 == null);
            if (_tripleEquals_4) {
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_16 = mut.getObject();
              String _name_19 = ((SpecificObjectSelection) _object_16).getObjSel().getName();
              _builder.append(_name_19, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_17 = mut.getObject();
              String _name_20 = ((SpecificObjectSelection) _object_17).getObjSel().getName();
              _builder.append(_name_20, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_18 = mut.getObject();
              String _name_21 = ((SpecificObjectSelection) _object_18).getObjSel().getName();
              _builder.append(_name_21, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificObjectSelection(entry_");
              ObSelectionStrategy _object_19 = mut.getObject();
              String _name_22 = ((SpecificObjectSelection) _object_19).getObjSel().getName();
              _builder.append(_name_22, "\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _object_20 = mut.getObject();
              String _name_23 = ((SpecificObjectSelection) _object_20).getObjSel().getName();
              _builder.append(_name_23, "\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _object_21 = mut.getObject();
              String _name_24 = ((SpecificObjectSelection) _object_21).getObjSel().getName();
              _builder.append(_name_24, "\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            } else {
              {
                ObSelectionStrategy _container_18 = mut.getContainer();
                if ((_container_18 instanceof RandomTypeSelection)) {
                  _builder.append("\t");
                  _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                  ObSelectionStrategy _container_19 = mut.getContainer();
                  String _name_25 = ((RandomTypeSelection) _container_19).getType().getName();
                  _builder.append(_name_25, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("EObject container = rts.getObject();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                  _builder.newLine();
                  {
                    EReference _refType_5 = mut.getContainer().getRefType();
                    boolean _tripleNotEquals_7 = (_refType_5 != null);
                    if (_tripleNotEquals_7) {
                      _builder.append("\t\t\t\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                      String _name_26 = mut.getContainer().getRefType().getName();
                      _builder.append(_name_26, "\t\t\t\t");
                      _builder.append("\", containerSelection);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t\t\t\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                      _builder.newLine();
                    }
                  }
                } else {
                  ObSelectionStrategy _container_20 = mut.getContainer();
                  if ((_container_20 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _container_21 = mut.getContainer();
                    String _name_27 = ((CompleteTypeSelection) _container_21).getType().getName();
                    _builder.append(_name_27, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("EObject container = rts.getObject();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                    _builder.newLine();
                    {
                      EReference _refType_6 = mut.getContainer().getRefType();
                      boolean _tripleNotEquals_8 = (_refType_6 != null);
                      if (_tripleNotEquals_8) {
                        _builder.append("\t\t\t\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                        String _name_28 = mut.getContainer().getRefType().getName();
                        _builder.append(_name_28, "\t\t\t\t");
                        _builder.append("\", containerSelection);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t\t\t\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  } else {
                    ObSelectionStrategy _container_22 = mut.getContainer();
                    if ((_container_22 instanceof SpecificObjectSelection)) {
                      _builder.append("\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _container_23 = mut.getContainer();
                      String _name_29 = ((SpecificObjectSelection) _container_23).getObjSel().getName();
                      _builder.append(_name_29, "\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _container_24 = mut.getContainer();
                      String _name_30 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
                      _builder.append(_name_30, "\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("if (entry_");
                      ObSelectionStrategy _container_25 = mut.getContainer();
                      String _name_31 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
                      _builder.append(_name_31, "\t");
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("containerSelection = new SpecificObjectSelection(entry_");
                      ObSelectionStrategy _container_26 = mut.getContainer();
                      String _name_32 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
                      _builder.append(_name_32, "\t\t");
                      _builder.append(".getValue().getValue(), entry_");
                      ObSelectionStrategy _container_27 = mut.getContainer();
                      String _name_33 = ((SpecificObjectSelection) _container_27).getObjSel().getName();
                      _builder.append(_name_33, "\t\t");
                      _builder.append(".getValue().getKey(), entry_");
                      ObSelectionStrategy _container_28 = mut.getContainer();
                      String _name_34 = ((SpecificObjectSelection) _container_28).getObjSel().getName();
                      _builder.append(_name_34, "\t\t");
                      _builder.append(".getKey());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("return mutations;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      {
                        EReference _refType_7 = mut.getContainer().getRefType();
                        boolean _tripleNotEquals_9 = (_refType_7 != null);
                        if (_tripleNotEquals_9) {
                          _builder.append("\t\t\t\t");
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                          ObSelectionStrategy _container_29 = mut.getContainer();
                          String _name_35 = ((SpecificObjectSelection) _container_29).getObjSel().getName();
                          _builder.append(_name_35, "\t\t\t\t");
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _container_30 = mut.getContainer();
                          String _name_36 = ((SpecificObjectSelection) _container_30).getObjSel().getName();
                          _builder.append(_name_36, "\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("if (entry_");
                          ObSelectionStrategy _container_31 = mut.getContainer();
                          String _name_37 = ((SpecificObjectSelection) _container_31).getObjSel().getName();
                          _builder.append(_name_37, "\t\t\t\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                          ObSelectionStrategy _container_32 = mut.getContainer();
                          String _name_38 = ((SpecificObjectSelection) _container_32).getObjSel().getName();
                          _builder.append(_name_38, "\t\t\t\t\t");
                          _builder.append(".getValue().getValue(), entry_");
                          ObSelectionStrategy _container_33 = mut.getContainer();
                          String _name_39 = ((SpecificObjectSelection) _container_33).getObjSel().getName();
                          _builder.append(_name_39, "\t\t\t\t\t");
                          _builder.append(".getValue().getKey(), \"");
                          String _name_40 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_40, "\t\t\t\t\t");
                          _builder.append("\", entry_");
                          ObSelectionStrategy _container_34 = mut.getContainer();
                          String _name_41 = ((SpecificObjectSelection) _container_34).getObjSel().getName();
                          _builder.append(_name_41, "\t\t\t\t\t");
                          _builder.append(".getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("} else {");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("return mutations;");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                        } else {
                          _builder.append("\t\t\t\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                          _builder.newLine();
                        }
                      }
                    } else {
                      ObSelectionStrategy _container_35 = mut.getContainer();
                      if ((_container_35 instanceof SpecificClosureSelection)) {
                        _builder.append("\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _container_36 = mut.getContainer();
                        String _name_42 = ((SpecificClosureSelection) _container_36).getObjSel().getName();
                        _builder.append(_name_42, "\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _container_37 = mut.getContainer();
                        String _name_43 = ((SpecificClosureSelection) _container_37).getObjSel().getName();
                        _builder.append(_name_43, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_38 = mut.getContainer();
                        String _name_44 = ((SpecificClosureSelection) _container_38).getObjSel().getName();
                        _builder.append(_name_44, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificClosureSelection(entry_");
                        ObSelectionStrategy _container_39 = mut.getContainer();
                        String _name_45 = ((SpecificClosureSelection) _container_39).getObjSel().getName();
                        _builder.append(_name_45, "\t\t");
                        _builder.append(".getValue().getValue(), entry_");
                        ObSelectionStrategy _container_40 = mut.getContainer();
                        String _name_46 = ((SpecificClosureSelection) _container_40).getObjSel().getName();
                        _builder.append(_name_46, "\t\t");
                        _builder.append(".getValue().getKey(), entry_");
                        ObSelectionStrategy _container_41 = mut.getContainer();
                        String _name_47 = ((SpecificClosureSelection) _container_41).getObjSel().getName();
                        _builder.append(_name_47, "\t\t");
                        _builder.append(".getKey(), \"");
                        ObSelectionStrategy _container_42 = mut.getContainer();
                        String _name_48 = ((SpecificClosureSelection) _container_42).getRefType().getName();
                        _builder.append(_name_48, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("return mutations;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        {
                          EReference _refType_8 = mut.getContainer().getRefType();
                          boolean _tripleNotEquals_10 = (_refType_8 != null);
                          if (_tripleNotEquals_10) {
                            _builder.append("\t\t\t\t");
                            _builder.append("if (entry_");
                            ObSelectionStrategy _container_43 = mut.getContainer();
                            String _name_49 = ((SpecificClosureSelection) _container_43).getObjSel().getName();
                            _builder.append(_name_49, "\t\t\t\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(entry_");
                            ObSelectionStrategy _container_44 = mut.getContainer();
                            String _name_50 = ((SpecificClosureSelection) _container_44).getObjSel().getName();
                            _builder.append(_name_50, "\t\t\t\t\t");
                            _builder.append(".getValue().getValue(), entry_");
                            ObSelectionStrategy _container_45 = mut.getContainer();
                            String _name_51 = ((SpecificClosureSelection) _container_45).getObjSel().getName();
                            _builder.append(_name_51, "\t\t\t\t\t");
                            _builder.append(".getValue().getKey(), \"");
                            String _name_52 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_52, "\t\t\t\t\t");
                            _builder.append("\", entry_");
                            ObSelectionStrategy _container_46 = mut.getContainer();
                            String _name_53 = ((SpecificClosureSelection) _container_46).getObjSel().getName();
                            _builder.append(_name_53, "\t\t\t\t\t");
                            _builder.append(".getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("} else {");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("return mutations;");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            _builder.append("\t\t\t\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                            _builder.newLine();
                          }
                        }
                      }
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_22 = mut.getObject();
              String _name_54 = ((SpecificObjectSelection) _object_22).getObjSel().getName();
              _builder.append(_name_54, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_23 = mut.getObject();
              String _name_55 = ((SpecificObjectSelection) _object_23).getObjSel().getName();
              _builder.append(_name_55, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_24 = mut.getObject();
              String _name_56 = ((SpecificObjectSelection) _object_24).getObjSel().getName();
              _builder.append(_name_56, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificObjectSelection(entry_");
              ObSelectionStrategy _object_25 = mut.getObject();
              String _name_57 = ((SpecificObjectSelection) _object_25).getObjSel().getName();
              _builder.append(_name_57, "\t\t");
              _builder.append(".getValue().getValue(), entry_");
              ObSelectionStrategy _object_26 = mut.getObject();
              String _name_58 = ((SpecificObjectSelection) _object_26).getObjSel().getName();
              _builder.append(_name_58, "\t\t");
              _builder.append(".getValue().getKey(), entry_");
              ObSelectionStrategy _object_27 = mut.getObject();
              String _name_59 = ((SpecificObjectSelection) _object_27).getObjSel().getName();
              _builder.append(_name_59, "\t\t");
              _builder.append(".getKey(), referenceSelection, containerSelection);");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return mutations;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
        } else {
          ObSelectionStrategy _object_28 = mut.getObject();
          if ((_object_28 instanceof CompleteTypeSelection)) {
            {
              Expression _expression_3 = mut.getObject().getExpression();
              boolean _tripleEquals_5 = (_expression_3 == null);
              if (_tripleEquals_5) {
                _builder.append("\t");
                _builder.append("CompleteTypeSelection objectsSelection = new CompleteTypeSelection(packages, model, \"");
                ObSelectionStrategy _object_29 = mut.getObject();
                String _name_60 = ((CompleteTypeSelection) _object_29).getType().getName();
                _builder.append(_name_60, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("List<EObject> objects = objectsSelection.getObjects();");
                _builder.newLine();
              } else {
                _builder.append("\t");
                _builder.append("List<EObject> objects = selectedObjects;");
                _builder.newLine();
              }
            }
          }
        }
      }
    }
    {
      ObSelectionStrategy _object_30 = mut.getObject();
      if ((_object_30 instanceof CompleteTypeSelection)) {
        _builder.append("\t\t");
        _builder.append("if (objects != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("for (EObject obj : objects) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("if (mutatedObjects != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t\t");
        _builder.append("mutatedObjects.add(obj);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("RemoveObjectMutator mut = new RemoveObjectMutator(model, packages, obj, referenceSelection, containerSelection);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("   \t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus = this.nMutation++;
        _builder.append(_plusPlus, "\t\t   \t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_1 = this.nRegistryMutation++;
        _builder.append(_plusPlus_1, "\t\t\t\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("   \t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("   \t\t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t   \t\t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t\t\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      } else {
        _builder.append("\t\t");
        _builder.append("RemoveObjectMutator mut = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (objectSelection != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("if (mutatedObjects != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("mutatedObjects.add(objectSelection.getObject());");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mut = new RemoveObjectMutator(objectSelection.getModel(), objectSelection.getMetaModel(), objectSelection, referenceSelection, containerSelection);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_2 = this.nMutation++;
        _builder.append(_plusPlus_2, "\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t   \t\t\t");
        _builder.append("//INC COUNTER: ");
        int _plusPlus_3 = this.nRegistryMutation++;
        _builder.append(_plusPlus_3, "\t\t   \t\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t   \t\t");
        _builder.append("mut.setId(\"m");
        _builder.append(this.nMutation, "\t\t\t\t   \t\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mutations.add(mut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("//END REMOVE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeObjectMutatorExhaustive(final RemoveObjectMutator mut, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("SpecificReferenceSelection referenceSelection = null;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//");
    boolean rts = false;
    _builder.newLineIfNotEmpty();
    {
      if (((mut.getObject() instanceof RandomTypeSelection) || (mut.getObject() instanceof CompleteTypeSelection))) {
        {
          ObSelectionStrategy _container = mut.getContainer();
          boolean _tripleEquals = (_container == null);
          if (_tripleEquals) {
            {
              ObSelectionStrategy _object = mut.getObject();
              if ((_object instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _object_1 = mut.getObject();
                String _name = ((RandomTypeSelection) _object_1).getType().getName();
                _builder.append(_name, "\t");
                _builder.append("\", mutatedObjects);");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              ObSelectionStrategy _object_2 = mut.getObject();
              if ((_object_2 instanceof CompleteTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _object_3 = mut.getObject();
                String _name_1 = ((CompleteTypeSelection) _object_3).getType().getName();
                _builder.append(_name_1, "\t");
                _builder.append("\", mutatedObjects);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              ObSelectionStrategy _container_1 = mut.getContainer();
              if ((_container_1 instanceof RandomTypeSelection)) {
                _builder.append("\t");
                _builder.append("//");
                _builder.append(rts = true, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                ObSelectionStrategy _container_2 = mut.getContainer();
                String _name_2 = ((RandomTypeSelection) _container_2).getType().getName();
                _builder.append(_name_2, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("EObject container = rts.getObject();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                _builder.newLine();
                {
                  EReference _refType = mut.getContainer().getRefType();
                  boolean _tripleNotEquals = (_refType != null);
                  if (_tripleNotEquals) {
                    _builder.append("\t");
                    _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                    String _name_3 = mut.getContainer().getRefType().getName();
                    _builder.append(_name_3, "\t");
                    _builder.append("\", containerSelection);");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                    _builder.newLine();
                  }
                }
              } else {
                ObSelectionStrategy _container_3 = mut.getContainer();
                if ((_container_3 instanceof CompleteTypeSelection)) {
                  _builder.append("\t");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("//");
                  _builder.append(rts = true, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                  ObSelectionStrategy _container_4 = mut.getContainer();
                  String _name_4 = ((CompleteTypeSelection) _container_4).getType().getName();
                  _builder.append(_name_4, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("EObject container = rts.getObject();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                  _builder.newLine();
                  {
                    EReference _refType_1 = mut.getContainer().getRefType();
                    boolean _tripleNotEquals_1 = (_refType_1 != null);
                    if (_tripleNotEquals_1) {
                      _builder.append("\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                      String _name_5 = mut.getContainer().getRefType().getName();
                      _builder.append(_name_5, "\t");
                      _builder.append("\", containerSelection);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                      _builder.newLine();
                    }
                  }
                } else {
                  ObSelectionStrategy _container_5 = mut.getContainer();
                  if ((_container_5 instanceof SpecificObjectSelection)) {
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                    ObSelectionStrategy _container_6 = mut.getContainer();
                    String _name_6 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
                    _builder.append(_name_6, "\t");
                    _builder.append(" = hmObjects.get(\"");
                    ObSelectionStrategy _container_7 = mut.getContainer();
                    String _name_7 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
                    _builder.append(_name_7, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("if (entry_");
                    ObSelectionStrategy _container_8 = mut.getContainer();
                    String _name_8 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
                    _builder.append(_name_8, "\t");
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                    ObSelectionStrategy _container_9 = mut.getContainer();
                    String _name_9 = ((SpecificObjectSelection) _container_9).getObjSel().getName();
                    _builder.append(_name_9, "\t\t");
                    _builder.append(".getKey());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("if (recovered == null) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t\t");
                    _builder.append("recovered = entry_");
                    ObSelectionStrategy _container_10 = mut.getContainer();
                    String _name_10 = ((SpecificObjectSelection) _container_10).getObjSel().getName();
                    _builder.append(_name_10, "\t\t\t");
                    _builder.append(".getKey();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("containerSelection = new SpecificObjectSelection(packages, model, recovered);");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("} else {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("return numMutantsGenerated;");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    {
                      EReference _refType_2 = mut.getContainer().getRefType();
                      boolean _tripleNotEquals_2 = (_refType_2 != null);
                      if (_tripleNotEquals_2) {
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_11 = mut.getContainer();
                        String _name_11 = ((SpecificObjectSelection) _container_11).getObjSel().getName();
                        _builder.append(_name_11, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                        ObSelectionStrategy _container_12 = mut.getContainer();
                        String _name_12 = ((SpecificObjectSelection) _container_12).getObjSel().getName();
                        _builder.append(_name_12, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("recovered = entry_");
                        ObSelectionStrategy _container_13 = mut.getContainer();
                        String _name_13 = ((SpecificObjectSelection) _container_13).getObjSel().getName();
                        _builder.append(_name_13, "\t\t\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                        String _name_14 = mut.getContainer().getRefType().getName();
                        _builder.append(_name_14, "\t\t");
                        _builder.append("\", recovered);");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("return numMutantsGenerated;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                      } else {
                        _builder.append("\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  }
                }
              }
            }
            {
              if ((rts == true)) {
                _builder.append("\t");
                _builder.append("rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
                ObSelectionStrategy _object_4 = mut.getObject();
                String _name_15 = ((RandomTypeSelection) _object_4).getType().getName();
                _builder.append(_name_15, "\t");
                _builder.append("\", referenceSelection, containerSelection);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("RandomTypeSelection rts = new RandomTypeSelection(containerSelection.getMetaModel(), containerSelection.getModel(), \"");
                ObSelectionStrategy _object_5 = mut.getObject();
                String _name_16 = ((RandomTypeSelection) _object_5).getType().getName();
                _builder.append(_name_16, "\t");
                _builder.append("\", referenceSelection, containerSelection);");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if (((mut.getObject().getExpression() == null) && (mut.getContainer().getExpression() == null))) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
              }
            }
          }
        }
        {
          if (((mut.getObject().getExpression() == null) && (mut.getContainer() == null))) {
            _builder.append("\t");
            _builder.append("List<EObject> objects = rts.getObjects();");
            _builder.newLine();
          }
        }
        {
          Expression _expression = mut.getObject().getExpression();
          boolean _tripleNotEquals_3 = (_expression != null);
          if (_tripleNotEquals_3) {
            {
              ObSelectionStrategy _container_14 = mut.getContainer();
              boolean _tripleEquals_1 = (_container_14 == null);
              if (_tripleEquals_1) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList = new ArrayList<Integer>();
                List<Integer> _expressionList = this.expressionList = _arrayList;
                _builder.append(_expressionList, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get = this.expressionList.get(0);
                _builder.append(_get, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("   \t\t\t\t\t");
                Object _method = this.method(mut.getObject().getExpression(), 0);
                _builder.append(_method, "   \t\t\t\t\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("objects = evaluate(objects, exp");
                Integer _get_1 = this.expressionList.get(0);
                _builder.append(_get_1, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
              } else {
                Expression _expression_1 = mut.getContainer().getExpression();
                boolean _tripleEquals_2 = (_expression_1 == null);
                if (_tripleEquals_2) {
                  _builder.append("\t");
                  _builder.append("List<EObject> objects = rts.getObjects();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LIST: ");
                  ArrayList<Integer> _arrayList_1 = new ArrayList<Integer>();
                  List<Integer> _expressionList_1 = this.expressionList = _arrayList_1;
                  _builder.append(_expressionList_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  _builder.append(this.nExpression = 0, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("//EXPRESSION LEVEL: ");
                  boolean _add_1 = this.expressionList.add(Integer.valueOf(0));
                  _builder.append(_add_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("Expression exp");
                  Integer _get_2 = this.expressionList.get(0);
                  _builder.append(_get_2, "\t");
                  _builder.append(" = new Expression();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  Object _method_1 = this.method(mut.getObject().getExpression(), 0);
                  _builder.append(_method_1, "\t");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("objects = evaluate(objects, exp");
                  Integer _get_3 = this.expressionList.get(0);
                  _builder.append(_get_3, "\t");
                  _builder.append(");");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          }
        }
        {
          Expression _expression_2 = mut.getObject().getExpression();
          boolean _tripleEquals_3 = (_expression_2 == null);
          if (_tripleEquals_3) {
            {
              if (((mut.getContainer() != null) && (mut.getContainer().getExpression() != null))) {
                _builder.append("\t");
                _builder.append("List<EObject> objects = rts.getObjects();");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("//EXPRESSION LIST: ");
                ArrayList<Integer> _arrayList_2 = new ArrayList<Integer>();
                List<Integer> _expressionList_2 = this.expressionList = _arrayList_2;
                _builder.append(_expressionList_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                _builder.append(this.nExpression = 0, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("//EXPRESSION LEVEL: ");
                boolean _add_2 = this.expressionList.add(Integer.valueOf(0));
                _builder.append(_add_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("Expression exp");
                Integer _get_4 = this.expressionList.get(0);
                _builder.append(_get_4, "\t");
                _builder.append(" = new Expression();");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Object _method_2 = this.method(mut.getContainer().getExpression(), 0);
                _builder.append(_method_2, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("objects = evaluate(objects, exp");
                Integer _get_5 = this.expressionList.get(0);
                _builder.append(_get_5, "\t");
                _builder.append(");");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
      } else {
        ObSelectionStrategy _object_6 = mut.getObject();
        if ((_object_6 instanceof SpecificObjectSelection)) {
          _builder.append("\t");
          _builder.append("List<EObject> objects = new ArrayList<EObject>();");
          _builder.newLine();
          {
            ObSelectionStrategy _container_15 = mut.getContainer();
            boolean _tripleEquals_4 = (_container_15 == null);
            if (_tripleEquals_4) {
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_7 = mut.getObject();
              String _name_17 = ((SpecificObjectSelection) _object_7).getObjSel().getName();
              _builder.append(_name_17, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_8 = mut.getObject();
              String _name_18 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
              _builder.append(_name_18, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_9 = mut.getObject();
              String _name_19 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
              _builder.append(_name_19, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
              ObSelectionStrategy _object_10 = mut.getObject();
              String _name_20 = ((SpecificObjectSelection) _object_10).getObjSel().getName();
              _builder.append(_name_20, "\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("if (recovered == null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("recovered = entry_");
              ObSelectionStrategy _object_11 = mut.getObject();
              String _name_21 = ((SpecificObjectSelection) _object_11).getObjSel().getName();
              _builder.append(_name_21, "\t\t\t");
              _builder.append(".getKey();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objects.add(objectSelection.getObject());");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return numMutantsGenerated;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            } else {
              {
                ObSelectionStrategy _container_16 = mut.getContainer();
                if ((_container_16 instanceof RandomTypeSelection)) {
                  _builder.append("\t");
                  _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                  ObSelectionStrategy _container_17 = mut.getContainer();
                  String _name_22 = ((RandomTypeSelection) _container_17).getType().getName();
                  _builder.append(_name_22, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("EObject container = rts.getObject();");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                  _builder.newLine();
                  {
                    EReference _refType_3 = mut.getContainer().getRefType();
                    boolean _tripleNotEquals_4 = (_refType_3 != null);
                    if (_tripleNotEquals_4) {
                      _builder.append("\t\t\t\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                      String _name_23 = mut.getContainer().getRefType().getName();
                      _builder.append(_name_23, "\t\t\t\t");
                      _builder.append("\", containerSelection);");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t\t\t\t");
                      _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                      _builder.newLine();
                    }
                  }
                } else {
                  ObSelectionStrategy _container_18 = mut.getContainer();
                  if ((_container_18 instanceof CompleteTypeSelection)) {
                    _builder.append("\t");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("RandomTypeSelection rts = new RandomTypeSelection(packages, model, \"");
                    ObSelectionStrategy _container_19 = mut.getContainer();
                    String _name_24 = ((CompleteTypeSelection) _container_19).getType().getName();
                    _builder.append(_name_24, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("EObject container = rts.getObject();");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("containerSelection = new SpecificObjectSelection(packages, model, container);");
                    _builder.newLine();
                    {
                      EReference _refType_4 = mut.getContainer().getRefType();
                      boolean _tripleNotEquals_5 = (_refType_4 != null);
                      if (_tripleNotEquals_5) {
                        _builder.append("\t\t\t\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                        String _name_25 = mut.getContainer().getRefType().getName();
                        _builder.append(_name_25, "\t\t\t\t");
                        _builder.append("\", containerSelection);");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t\t\t\t");
                        _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                        _builder.newLine();
                      }
                    }
                  } else {
                    ObSelectionStrategy _container_20 = mut.getContainer();
                    if ((_container_20 instanceof SpecificObjectSelection)) {
                      _builder.append("\t");
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      ObSelectionStrategy _container_21 = mut.getContainer();
                      String _name_26 = ((SpecificObjectSelection) _container_21).getObjSel().getName();
                      _builder.append(_name_26, "\t");
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _container_22 = mut.getContainer();
                      String _name_27 = ((SpecificObjectSelection) _container_22).getObjSel().getName();
                      _builder.append(_name_27, "\t");
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("if (entry_");
                      ObSelectionStrategy _container_23 = mut.getContainer();
                      String _name_28 = ((SpecificObjectSelection) _container_23).getObjSel().getName();
                      _builder.append(_name_28, "\t");
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                      ObSelectionStrategy _container_24 = mut.getContainer();
                      String _name_29 = ((SpecificObjectSelection) _container_24).getObjSel().getName();
                      _builder.append(_name_29, "\t\t");
                      _builder.append(".getKey());");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("if (recovered == null) {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t\t");
                      _builder.append("recovered = entry_");
                      ObSelectionStrategy _container_25 = mut.getContainer();
                      String _name_30 = ((SpecificObjectSelection) _container_25).getObjSel().getName();
                      _builder.append(_name_30, "\t\t\t");
                      _builder.append(".getKey();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("containerSelection = new SpecificObjectSelection(packages, model, recovered);");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("} else {");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("return numMutantsGenerated;");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      {
                        EReference _refType_5 = mut.getContainer().getRefType();
                        boolean _tripleNotEquals_6 = (_refType_5 != null);
                        if (_tripleNotEquals_6) {
                          _builder.append("\t\t\t\t");
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                          ObSelectionStrategy _container_26 = mut.getContainer();
                          String _name_31 = ((SpecificObjectSelection) _container_26).getObjSel().getName();
                          _builder.append(_name_31, "\t\t\t\t");
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _container_27 = mut.getContainer();
                          String _name_32 = ((SpecificObjectSelection) _container_27).getObjSel().getName();
                          _builder.append(_name_32, "\t\t\t\t");
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("if (entry_");
                          ObSelectionStrategy _container_28 = mut.getContainer();
                          String _name_33 = ((SpecificObjectSelection) _container_28).getObjSel().getName();
                          _builder.append(_name_33, "\t\t\t\t");
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                          ObSelectionStrategy _container_29 = mut.getContainer();
                          String _name_34 = ((SpecificObjectSelection) _container_29).getObjSel().getName();
                          _builder.append(_name_34, "\t\t\t\t\t");
                          _builder.append(".getKey());");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("if (recovered == null) {");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t\t");
                          _builder.append("recovered = entry_");
                          ObSelectionStrategy _container_30 = mut.getContainer();
                          String _name_35 = ((SpecificObjectSelection) _container_30).getObjSel().getName();
                          _builder.append(_name_35, "\t\t\t\t\t\t");
                          _builder.append(".getKey();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                          String _name_36 = mut.getContainer().getRefType().getName();
                          _builder.append(_name_36, "\t\t\t\t\t");
                          _builder.append("\", recovered);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t\t\t");
                          _builder.append("} else {");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("\t");
                          _builder.append("return numMutantsGenerated;");
                          _builder.newLine();
                          _builder.append("\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                        } else {
                          _builder.append("\t\t\t\t");
                          _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                          _builder.newLine();
                        }
                      }
                    } else {
                      ObSelectionStrategy _container_31 = mut.getContainer();
                      if ((_container_31 instanceof SpecificClosureSelection)) {
                        _builder.append("\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                        ObSelectionStrategy _container_32 = mut.getContainer();
                        String _name_37 = ((SpecificClosureSelection) _container_32).getObjSel().getName();
                        _builder.append(_name_37, "\t");
                        _builder.append(" = hmObjects.get(\"");
                        ObSelectionStrategy _container_33 = mut.getContainer();
                        String _name_38 = ((SpecificClosureSelection) _container_33).getObjSel().getName();
                        _builder.append(_name_38, "\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("if (entry_");
                        ObSelectionStrategy _container_34 = mut.getContainer();
                        String _name_39 = ((SpecificClosureSelection) _container_34).getObjSel().getName();
                        _builder.append(_name_39, "\t");
                        _builder.append(" != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                        ObSelectionStrategy _container_35 = mut.getContainer();
                        String _name_40 = ((SpecificClosureSelection) _container_35).getObjSel().getName();
                        _builder.append(_name_40, "\t\t");
                        _builder.append(".getKey());");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("if (recovered == null) {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t\t");
                        _builder.append("recovered = entry_");
                        ObSelectionStrategy _container_36 = mut.getContainer();
                        String _name_41 = ((SpecificClosureSelection) _container_36).getObjSel().getName();
                        _builder.append(_name_41, "\t\t\t");
                        _builder.append(".getKey();");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("containerSelection = new SpecificClosureSelection(packages, model, recovered, \"");
                        ObSelectionStrategy _container_37 = mut.getContainer();
                        String _name_42 = ((SpecificClosureSelection) _container_37).getRefType().getName();
                        _builder.append(_name_42, "\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("} else {");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("\t");
                        _builder.append("return numMutantsGenerated;");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append("}");
                        _builder.newLine();
                        {
                          EReference _refType_6 = mut.getContainer().getRefType();
                          boolean _tripleNotEquals_7 = (_refType_6 != null);
                          if (_tripleNotEquals_7) {
                            _builder.append("\t\t\t\t");
                            _builder.append("if (entry_");
                            ObSelectionStrategy _container_38 = mut.getContainer();
                            String _name_43 = ((SpecificClosureSelection) _container_38).getObjSel().getName();
                            _builder.append(_name_43, "\t\t\t\t");
                            _builder.append(" != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
                            ObSelectionStrategy _container_39 = mut.getContainer();
                            String _name_44 = ((SpecificClosureSelection) _container_39).getObjSel().getName();
                            _builder.append(_name_44, "\t\t\t\t\t");
                            _builder.append(".getKey());");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("if (recovered == null) {");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t\t");
                            _builder.append("recovered = entry_");
                            ObSelectionStrategy _container_40 = mut.getContainer();
                            String _name_45 = ((SpecificClosureSelection) _container_40).getObjSel().getName();
                            _builder.append(_name_45, "\t\t\t\t\t\t");
                            _builder.append(".getKey();");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, \"");
                            String _name_46 = mut.getContainer().getRefType().getName();
                            _builder.append(_name_46, "\t\t\t\t\t");
                            _builder.append("\", recovered);");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t\t\t");
                            _builder.append("} else {");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("\t");
                            _builder.append("return numMutantsGenerated;");
                            _builder.newLine();
                            _builder.append("\t\t\t\t");
                            _builder.append("}");
                            _builder.newLine();
                          } else {
                            _builder.append("\t\t\t\t");
                            _builder.append("referenceSelection = new SpecificReferenceSelection(packages, model, null, null);");
                            _builder.newLine();
                          }
                        }
                      }
                    }
                  }
                }
              }
              _builder.append("\t");
              _builder.append("ObSelectionStrategy objectSelection = null;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
              ObSelectionStrategy _object_12 = mut.getObject();
              String _name_47 = ((SpecificObjectSelection) _object_12).getObjSel().getName();
              _builder.append(_name_47, "\t");
              _builder.append(" = hmObjects.get(\"");
              ObSelectionStrategy _object_13 = mut.getObject();
              String _name_48 = ((SpecificObjectSelection) _object_13).getObjSel().getName();
              _builder.append(_name_48, "\t");
              _builder.append("\");");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("if (entry_");
              ObSelectionStrategy _object_14 = mut.getObject();
              String _name_49 = ((SpecificObjectSelection) _object_14).getObjSel().getName();
              _builder.append(_name_49, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("EObject recovered = ModelManager.getObject(model, entry_");
              ObSelectionStrategy _container_41 = mut.getContainer();
              String _name_50 = ((SpecificObjectSelection) _container_41).getObjSel().getName();
              _builder.append(_name_50, "\t\t");
              _builder.append(".getKey());");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("if (recovered == null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("recovered = entry_");
              ObSelectionStrategy _container_42 = mut.getContainer();
              String _name_51 = ((SpecificObjectSelection) _container_42).getObjSel().getName();
              _builder.append(_name_51, "\t\t\t");
              _builder.append(".getKey();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objectSelection = new SpecificObjectSelection(packages, model, recovered, referenceSelection, containerSelection);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("objects.add(objectSelection.getObject());");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("} else {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("return numMutantsGenerated;");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("for (EObject object : objects) {");
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("\t\t");
        _builder.append("String modelsFolder = ModelManager.getModelsFolder(this.getClass());");
        _builder.newLine();
      } else {
        _builder.append("\t\t");
        _builder.append("String modelsFolder = ModelManager.getModelsFolder(");
        _builder.append(this.className, "\t\t");
        _builder.append(".class);");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t\t");
    _builder.append("String tempModelsFolder = modelsFolder.replace(modelsFolder.indexOf(\"/\") > 0 ? modelsFolder.substring(modelsFolder.indexOf(\"/\") + 1, modelsFolder.length()) : modelsFolder, \"temp\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("modelsFolder = modelsFolder.replace(\"/\", \"\\\\\"); ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tempModelsFolder = tempModelsFolder.replace(\"/\", \"\\\\\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Resource resource = ModelManager.cloneModel(model, model.getURI().toFileString().replace(modelsFolder + \"\\\\\", tempModelsFolder + \"\\\\\").replace(\".model\", \".");
    _builder.append(this.methodName, "\t\t");
    _builder.append(".\" + numMutantsGenerated +\".model\"));");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("ObSelectionStrategy obSelection = null;");
    _builder.newLine();
    {
      EReference _refType_7 = mut.getObject().getRefType();
      boolean _tripleNotEquals_8 = (_refType_7 != null);
      if (_tripleNotEquals_8) {
        _builder.append("\t\t");
        _builder.append("List<EObject> o = ModelManager.getReferences(\"");
        String _name_52 = mut.getObject().getRefType().getName();
        _builder.append(_name_52, "\t\t");
        _builder.append("\", object);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("object = o.get(ModelManager.getRandomIndex(o));");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("object = ModelManager.getObjectByURIEnding(resource, EcoreUtil.getURI(object));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (object != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("obSelection = new SpecificObjectSelection(packages, resource, object);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("RemoveObjectMutator mut = new RemoveObjectMutator(obSelection.getModel(), obSelection.getMetaModel(), object, referenceSelection, containerSelection);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("Mutator mutator = null;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("if (muts == null) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMethodCall = (this.nRegistryMethodCall + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string = Integer.valueOf(this.nRegistryMethodCall).toString();
    String _plus = ("registry" + _string);
    String _registryMethodName = this.registryMethodName = _plus;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("mutator = mut;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("if (mutator != null) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("//");
    _builder.append(this.nMethodCall = (this.nMethodCall + 1), "\t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((last == false)) {
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("mutation");
            _builder.append(this.nMethodCall, "\t\t");
            _builder.append("(packages, obSelection.getModel(), hmObjects, hmList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated = k[0];");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    {
      if ((last == true)) {
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("\t\t");
            _builder.append("if (rules.get(\"");
            String _name_53 = constraint.getType().getName();
            _builder.append(_name_53, "\t\t");
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_54 = constraint.getType().getName();
            _builder.append(_name_54, "\t\t\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_55 = constraint.getType().getName();
            _builder.append(_name_55, "\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_9 = (_expressions != null);
              if (_tripleNotEquals_9) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_10 = (_rules != null);
              if (_tripleNotEquals_10) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("\t\t");
                    _builder.append("newrules.add(\"");
                    _builder.append(rule, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("rules.put(\"");
            String _name_56 = constraint.getType().getName();
            _builder.append(_name_56, "\t\t");
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((b == null)) {
            _builder.append("\t\t");
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + k[0] + \".model\";");
            _builder.newLine();
          } else {
            {
              int _size = b.getFrom().size();
              boolean _equals = (_size == 0);
              if (_equals) {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_57 = b.getName();
                _builder.append(_name_57);
                _builder.append("/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
                String _name_58 = b.getName();
                _builder.append(_name_58);
                _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + k[0] + \".model\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          if ((b == null)) {
            {
              if ((this.standalone == false)) {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, true);");
                _builder.newLine();
              } else {
                _builder.append("\t\t   \t\t");
                _builder.append("boolean isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName = this.getProjectName();
                _builder.append(_projectName, "\t\t   \t\t");
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className, "\t\t   \t\t");
                _builder.append(".class, true, true);");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            {
              if ((this.standalone == false)) {
                _builder.append("boolean isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_59 = b.getName();
                _builder.append(_name_59);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("boolean isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, mutator.getModel(), rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
                String _name_60 = b.getName();
                _builder.append(_name_60);
                _builder.append("\", fromNames, k, mutPaths, hashmapMutVersions, \"");
                String _projectName_1 = this.getProjectName();
                _builder.append(_projectName_1);
                _builder.append("\", serialize, test, classes, ");
                _builder.append(this.className);
                _builder.append(".class, true, false);");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("muts = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END REMOVE OBJECT ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeRandomReferenceMutator(final RemoveRandomReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE RANDOM REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("RandomTypeSelection containerSelection = new RandomTypeSelection(packages, model, \"");
    String _name = mut.getType().getName();
    _builder.append(_name, "\t");
    _builder.append("\");\t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("RemoveReferenceMutator mut = new RemoveReferenceMutator(model, packages, containerSelection, \"");
    String _name_1 = mut.getRefType().getName();
    _builder.append(_name_1, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("  \t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus = this.nMutation++;
    _builder.append(_plusPlus, "  \t");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nRegistryMutation++;
    _builder.append(_plusPlus_1, "   \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("  \t");
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "  \t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END REMOVE RANDOM REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeRandomReferenceMutatorExhaustive(final RemoveRandomReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE RANDOM REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END REMOVE RANDOM REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeSpecificReferenceMutator(final RemoveSpecificReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE SPECIFIC REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("ObSelectionStrategy containerSelection = null;");
    _builder.newLine();
    {
      ObSelectionStrategy _container = mut.getContainer();
      if ((_container instanceof RandomTypeSelection)) {
        _builder.append("\t");
        _builder.append("containerSelection = new RandomTypeSelection(packages, model, \"");
        ObSelectionStrategy _container_1 = mut.getContainer();
        String _name = ((RandomTypeSelection) _container_1).getType().getName();
        _builder.append(_name, "\t");
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
      } else {
        ObSelectionStrategy _container_2 = mut.getContainer();
        if ((_container_2 instanceof SpecificObjectSelection)) {
          _builder.append("\t");
          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
          ObSelectionStrategy _container_3 = mut.getContainer();
          String _name_1 = ((SpecificObjectSelection) _container_3).getObjSel().getName();
          _builder.append(_name_1, "\t");
          _builder.append(" = hmObjects.get(\"");
          ObSelectionStrategy _container_4 = mut.getContainer();
          String _name_2 = ((SpecificObjectSelection) _container_4).getObjSel().getName();
          _builder.append(_name_2, "\t");
          _builder.append("\");");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("if (entry_");
          ObSelectionStrategy _container_5 = mut.getContainer();
          String _name_3 = ((SpecificObjectSelection) _container_5).getObjSel().getName();
          _builder.append(_name_3, "\t");
          _builder.append(" != null) {");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("containerSelection = new SpecificObjectSelection(entry_");
          ObSelectionStrategy _container_6 = mut.getContainer();
          String _name_4 = ((SpecificObjectSelection) _container_6).getObjSel().getName();
          _builder.append(_name_4, "\t\t");
          _builder.append(".getValue().getValue(), entry_");
          ObSelectionStrategy _container_7 = mut.getContainer();
          String _name_5 = ((SpecificObjectSelection) _container_7).getObjSel().getName();
          _builder.append(_name_5, "\t\t");
          _builder.append(".getValue().getKey(), entry_");
          ObSelectionStrategy _container_8 = mut.getContainer();
          String _name_6 = ((SpecificObjectSelection) _container_8).getObjSel().getName();
          _builder.append(_name_6, "\t\t");
          _builder.append(".getKey());");
          _builder.newLineIfNotEmpty();
          _builder.append("\t");
          _builder.append("} else {");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("\t");
          _builder.append("return mutations;");
          _builder.newLine();
          _builder.append("\t");
          _builder.append("}");
          _builder.newLine();
        } else {
          ObSelectionStrategy _container_9 = mut.getContainer();
          if ((_container_9 instanceof CompleteTypeSelection)) {
            _builder.append("\t");
            _builder.append("containerSelection = new CompleteTypeSelection(packages, model, \"");
            ObSelectionStrategy _container_10 = mut.getContainer();
            String _name_7 = ((CompleteTypeSelection) _container_10).getType().getName();
            _builder.append(_name_7, "\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("RemoveReferenceMutator mut = new RemoveReferenceMutator(model, packages, containerSelection, \"");
    String _name_8 = mut.getRefType().getName();
    _builder.append(_name_8, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus = this.nMutation++;
    _builder.append(_plusPlus, "   \t");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nRegistryMutation++;
    _builder.append(_plusPlus_1, "   \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t");
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("   \t\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "   \t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END REMOVE SPECIFIC REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeSpecificReferenceMutatorExhaustive(final RemoveSpecificReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE SPECIFIC REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END REMOVE SPECIFIC REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeCompleteReferenceMutator(final RemoveCompleteReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE COMPLETE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("CompleteTypeSelection containersSelection = new CompleteTypeSelection(packages, model, \"");
    String _name = mut.getType().getName();
    _builder.append(_name, "\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("List<EObject> objects = containersSelection.getObjects();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("for (EObject obj : objects) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("RemoveReferenceMutator mut = new RemoveReferenceMutator(model, packages, obj, \"");
    String _name_1 = mut.getRefType().getName();
    _builder.append(_name_1, "\t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t   \t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus = this.nMutation++;
    _builder.append(_plusPlus, "\t   \t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t   \t\t\t");
    _builder.append("//INC COUNTER: ");
    int _plusPlus_1 = this.nRegistryMutation++;
    _builder.append(_plusPlus_1, "\t   \t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t   \t");
    _builder.append("if (mut != null) {");
    _builder.newLine();
    _builder.append("\t   \t\t");
    _builder.append("mut.setId(\"m");
    _builder.append(this.nMutation, "\t   \t\t");
    _builder.append("\");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t");
    _builder.append("mutations.add(mut);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("//END REMOVE COMPLETE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence removeCompleteReferenceMutatorExhaustive(final RemoveCompleteReferenceMutator mut) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("// REMOVE COMPLETE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    _builder.append("//END REMOVE COMPLETE REFERENCE ");
    _builder.append(this.methodName);
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence method(final Mutator mut, final boolean exhaustive, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((exhaustive == false)) {
        {
          if ((this.standalone == false)) {
            _builder.append("private List<Mutator> ");
            _builder.append(this.methodName);
            _builder.append("(List<EPackage> packages, Resource model, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects, Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, MetaModelNotFoundException, ModelNotFoundException {");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("private static List<Mutator> ");
            _builder.append(this.methodName);
            _builder.append("(List<EPackage> packages, Resource model, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects, Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, MetaModelNotFoundException, ModelNotFoundException {");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("List<Mutator> mutations = new ArrayList<Mutator>();");
        _builder.newLine();
        {
          if ((mut instanceof ModifyInformationMutator)) {
            CharSequence _modifyInformationMutator = this.modifyInformationMutator(((ModifyInformationMutator) mut));
            _builder.append(_modifyInformationMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CreateObjectMutator)) {
            CharSequence _createObjectMutator = this.createObjectMutator(((CreateObjectMutator) mut));
            _builder.append(_createObjectMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof SelectObjectMutator)) {
            CharSequence _selectObjectMutator = this.selectObjectMutator(((SelectObjectMutator) mut));
            _builder.append(_selectObjectMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof SelectSampleMutator)) {
            CharSequence _selectSampleMutator = this.selectSampleMutator(((SelectSampleMutator) mut));
            _builder.append(_selectSampleMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CloneObjectMutator)) {
            CharSequence _cloneObjectMutator = this.cloneObjectMutator(((CloneObjectMutator) mut));
            _builder.append(_cloneObjectMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RetypeObjectMutator)) {
            CharSequence _retypeObjectMutator = this.retypeObjectMutator(((RetypeObjectMutator) mut));
            _builder.append(_retypeObjectMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof ModifySourceReferenceMutator)) {
            CharSequence _modifySourceReferenceMutator = this.modifySourceReferenceMutator(((ModifySourceReferenceMutator) mut));
            _builder.append(_modifySourceReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof ModifyTargetReferenceMutator)) {
            CharSequence _modifyTargetReferenceMutator = this.modifyTargetReferenceMutator(((ModifyTargetReferenceMutator) mut));
            _builder.append(_modifyTargetReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CreateReferenceMutator)) {
            CharSequence _createReferenceMutator = this.createReferenceMutator(((CreateReferenceMutator) mut));
            _builder.append(_createReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveObjectMutator)) {
            CharSequence _removeObjectMutator = this.removeObjectMutator(((RemoveObjectMutator) mut));
            _builder.append(_removeObjectMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveRandomReferenceMutator)) {
            CharSequence _removeRandomReferenceMutator = this.removeRandomReferenceMutator(((RemoveRandomReferenceMutator) mut));
            _builder.append(_removeRandomReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveSpecificReferenceMutator)) {
            CharSequence _removeSpecificReferenceMutator = this.removeSpecificReferenceMutator(((RemoveSpecificReferenceMutator) mut));
            _builder.append(_removeSpecificReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveCompleteReferenceMutator)) {
            CharSequence _removeCompleteReferenceMutator = this.removeCompleteReferenceMutator(((RemoveCompleteReferenceMutator) mut));
            _builder.append(_removeCompleteReferenceMutator);
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("return mutations;\t");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      } else {
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("private int ");
            _builder.append(this.methodName, "\t");
            _builder.append("(List<EPackage> packages, Resource model,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, String> hashmapModelFilenames, String modelFilename, List<String> mutPaths,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, EObject> hmMutator, Resource seed, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, String> hashmapModelFolders, String ecoreURI, boolean registry,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Set<String> hashsetMutantsBlock, List<String> fromNames, Map<String,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("List<String>> hashmapMutVersions, Mutations muts, IProject project, IProgressMonitor monitor, int[] k, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes)");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("throws ReferenceNonExistingException, MetaModelNotFoundException, ModelNotFoundException,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("ObjectNotContainedException, ObjectNoTargetableException, AbstractCreationException, WrongAttributeTypeException, IOException {");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("private int ");
            _builder.append(this.methodName, "\t");
            _builder.append("(List<EPackage> packages, Resource model,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, String> hashmapModelFilenames, String modelFilename, List<String> mutPaths,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, EObject> hmMutator, Resource seed, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Map<String, String> hashmapModelFolders, String ecoreURI, boolean registry,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("Set<String> hashsetMutantsBlock, List<String> fromNames, Map<String,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("List<String>> hashmapMutVersions, Mutations muts, IProgressMonitor monitor, int[] k, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes)");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("throws ReferenceNonExistingException, MetaModelNotFoundException, ModelNotFoundException,");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("ObjectNotContainedException, ObjectNoTargetableException, AbstractCreationException, WrongAttributeTypeException, IOException {");
            _builder.newLine();
          }
        }
        _builder.append("\t");
        _builder.append("int numMutantsGenerated = 0;");
        _builder.newLine();
        {
          if ((mut instanceof ModifyInformationMutator)) {
            _builder.append("\t");
            CharSequence _modifyInformationMutatorExhaustive = this.modifyInformationMutatorExhaustive(((ModifyInformationMutator) mut), e, b, last);
            _builder.append(_modifyInformationMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CreateObjectMutator)) {
            _builder.append("\t");
            CharSequence _createObjectMutatorExhaustive = this.createObjectMutatorExhaustive(((CreateObjectMutator) mut), e, b, last);
            _builder.append(_createObjectMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof SelectObjectMutator)) {
            _builder.append("\t");
            CharSequence _selectObjectMutatorExhaustive = this.selectObjectMutatorExhaustive(((SelectObjectMutator) mut), e, b, last);
            _builder.append(_selectObjectMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof SelectSampleMutator)) {
            _builder.append("\t");
            CharSequence _selectSampleMutatorExhaustive = this.selectSampleMutatorExhaustive(((SelectSampleMutator) mut));
            _builder.append(_selectSampleMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CloneObjectMutator)) {
            _builder.append("\t");
            CharSequence _cloneObjectMutatorExhaustive = this.cloneObjectMutatorExhaustive(((CloneObjectMutator) mut), e, b, last);
            _builder.append(_cloneObjectMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RetypeObjectMutator)) {
            _builder.append("\t");
            CharSequence _retypeObjectMutatorExhaustive = this.retypeObjectMutatorExhaustive(((RetypeObjectMutator) mut), e, b, last);
            _builder.append(_retypeObjectMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof ModifySourceReferenceMutator)) {
            _builder.append("\t");
            CharSequence _modifySourceReferenceMutatorExhaustive = this.modifySourceReferenceMutatorExhaustive(((ModifySourceReferenceMutator) mut));
            _builder.append(_modifySourceReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof ModifyTargetReferenceMutator)) {
            _builder.append("\t");
            CharSequence _modifyTargetReferenceMutatorExhaustive = this.modifyTargetReferenceMutatorExhaustive(((ModifyTargetReferenceMutator) mut));
            _builder.append(_modifyTargetReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof CreateReferenceMutator)) {
            _builder.append("\t");
            CharSequence _createReferenceMutatorExhaustive = this.createReferenceMutatorExhaustive(((CreateReferenceMutator) mut));
            _builder.append(_createReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveObjectMutator)) {
            _builder.append("\t");
            CharSequence _removeObjectMutatorExhaustive = this.removeObjectMutatorExhaustive(((RemoveObjectMutator) mut), e, b, last);
            _builder.append(_removeObjectMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveRandomReferenceMutator)) {
            _builder.append("\t");
            CharSequence _removeRandomReferenceMutatorExhaustive = this.removeRandomReferenceMutatorExhaustive(((RemoveRandomReferenceMutator) mut));
            _builder.append(_removeRandomReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveSpecificReferenceMutator)) {
            _builder.append("\t");
            CharSequence _removeSpecificReferenceMutatorExhaustive = this.removeSpecificReferenceMutatorExhaustive(((RemoveSpecificReferenceMutator) mut));
            _builder.append(_removeSpecificReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((mut instanceof RemoveCompleteReferenceMutator)) {
            _builder.append("\t");
            CharSequence _removeCompleteReferenceMutatorExhaustive = this.removeCompleteReferenceMutatorExhaustive(((RemoveCompleteReferenceMutator) mut));
            _builder.append(_removeCompleteReferenceMutatorExhaustive, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("return numMutantsGenerated;");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public CharSequence compositeMethod(final CompositeMutator mut, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      EObject _eContainer = mut.eContainer();
      if ((_eContainer instanceof MutatorEnvironment)) {
        _builder.append("//INC COUNTER: ");
        int _plusPlus = this.nMutation++;
        _builder.append(_plusPlus);
        _builder.newLineIfNotEmpty();
        _builder.append("//INC COUNTER: ");
        int _plusPlus_1 = this.nRegistryMutation++;
        _builder.append(_plusPlus_1);
        _builder.newLineIfNotEmpty();
      }
    }
    {
      if ((this.standalone == false)) {
        _builder.append("private List<Mutator> ");
        _builder.append(this.compositeMethodName);
        _builder.append("(List<EPackage> packages, Resource model, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects, Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException {");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("private static List<Mutator> ");
        _builder.append(this.compositeMethodName);
        _builder.append("(List<EPackage> packages, Resource model, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmObjects, Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hmList, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException {");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("List<Mutator> mutations = new ArrayList<Mutator>();");
    _builder.newLine();
    _builder.append("\t");
    int localNCompositeMethod = (this.nCompositeMethod + 1);
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    int localNMethod = (this.nMethod + 1);
    _builder.newLineIfNotEmpty();
    {
      EList<Mutator> _commands = mut.getCommands();
      for(final Mutator c : _commands) {
        {
          if ((c instanceof CompositeMutator)) {
            _builder.append("\t");
            _builder.append("//COMMAND: ");
            _builder.append(this.nCompositeCommands = (this.nCompositeCommands + 1), "\t");
            _builder.newLineIfNotEmpty();
            {
              int _fixed = ((CompositeMutator)c).getFixed();
              boolean _equals = (_fixed == 0);
              if (_equals) {
                {
                  int _max = ((CompositeMutator)c).getMax();
                  int _min = ((CompositeMutator)c).getMin();
                  int _minus = (_max - _min);
                  boolean _greaterThan = (_minus > 0);
                  if (_greaterThan) {
                    _builder.append("\t");
                    _builder.append("int cmax");
                    _builder.append(this.nCompositeCommands, "\t");
                    _builder.append(" = getRandom(");
                    int _max_1 = ((CompositeMutator)c).getMax();
                    int _min_1 = ((CompositeMutator)c).getMin();
                    int _minus_1 = (_max_1 - _min_1);
                    _builder.append(_minus_1, "\t");
                    _builder.append(") + ");
                    int _min_2 = ((CompositeMutator)c).getMin();
                    _builder.append(_min_2, "\t");
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if (((((CompositeMutator)c).getMin() == 0) && (((CompositeMutator)c).getMax() == 0))) {
                    _builder.append("\t");
                    _builder.append("int cmax");
                    _builder.append(this.nCompositeCommands, "\t");
                    _builder.append(" = 1;");
                    _builder.newLineIfNotEmpty();
                  } else {
                    int _min_3 = ((CompositeMutator)c).getMin();
                    int _max_2 = ((CompositeMutator)c).getMax();
                    boolean _equals_1 = (_min_3 == _max_2);
                    if (_equals_1) {
                      _builder.append("\t");
                      _builder.append("int cmax");
                      _builder.append(this.nCompositeCommands, "\t");
                      _builder.append(" = ");
                      int _min_4 = ((CompositeMutator)c).getMin();
                      _builder.append(_min_4, "\t");
                      _builder.append(";");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              } else {
                _builder.append("\t");
                _builder.append("int cmax");
                _builder.append(this.nCompositeCommands, "\t");
                _builder.append(" = ");
                int _fixed_1 = ((CompositeMutator)c).getFixed();
                _builder.append(_fixed_1, "\t");
                _builder.append(";");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t");
            _builder.append("for (int j");
            _builder.append(this.nCompositeCommands, "\t");
            _builder.append(" = 0; j");
            _builder.append(this.nCompositeCommands, "\t");
            _builder.append(" < cmax");
            _builder.append(this.nCompositeCommands, "\t");
            _builder.append("; j");
            _builder.append(this.nCompositeCommands, "\t");
            _builder.append("++) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("//COMPOSITE METHOD NAME:");
            String _string = Integer.valueOf(localNCompositeMethod).toString();
            String _plus = ("compositeMutation" + _string);
            String _compositeMethodName = this.compositeMethodName = _plus;
            _builder.append(_compositeMethodName, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("List<Mutator> l");
            _builder.append(this.compositeMethodName, "\t\t");
            _builder.append(" = ");
            _builder.append(this.compositeMethodName, "\t\t");
            _builder.append("(packages, model, hmObjects, hmList);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("//COMPOSITE METHOD INC: ");
            int _plusPlus_2 = localNCompositeMethod++;
            _builder.append(_plusPlus_2, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("if (l");
            _builder.append(this.compositeMethodName, "\t\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("if (l");
            _builder.append(this.compositeMethodName, "\t\t\t");
            _builder.append(".size() > 0) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("mutations.addAll(l");
            _builder.append(this.compositeMethodName, "\t\t\t\t");
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("//COMPOSITE METHOD INC: ");
            int _localNCompositeMethod = localNCompositeMethod;
            int _compositeMutatorSize = MutatorUtils.compositeMutatorSize(((CompositeMutator)c));
            int _minus_2 = (_compositeMutatorSize - 1);
            int _plus_1 = localNCompositeMethod = (_localNCompositeMethod + _minus_2);
            _builder.append(_plus_1, "\t");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t");
            _builder.append("//COMMAND: ");
            _builder.append(this.nCommands = (this.nCommands + 1), "\t");
            _builder.newLineIfNotEmpty();
            {
              int _fixed_2 = c.getFixed();
              boolean _equals_2 = (_fixed_2 == 0);
              if (_equals_2) {
                {
                  int _max_3 = c.getMax();
                  int _min_5 = c.getMin();
                  int _minus_3 = (_max_3 - _min_5);
                  boolean _greaterThan_1 = (_minus_3 > 0);
                  if (_greaterThan_1) {
                    _builder.append("\t");
                    _builder.append("int max");
                    _builder.append(this.nCommands, "\t");
                    _builder.append(" = getRandom(");
                    int _max_4 = c.getMax();
                    int _min_6 = c.getMin();
                    int _minus_4 = (_max_4 - _min_6);
                    _builder.append(_minus_4, "\t");
                    _builder.append(") + ");
                    int _min_7 = c.getMin();
                    _builder.append(_min_7, "\t");
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if (((c.getMax() == 0) && (c.getMin() == 0))) {
                    _builder.append("\t");
                    _builder.append("int max");
                    _builder.append(this.nCommands, "\t");
                    _builder.append(" = 1;");
                    _builder.newLineIfNotEmpty();
                  } else {
                    int _min_8 = c.getMin();
                    int _max_5 = c.getMax();
                    boolean _equals_3 = (_min_8 == _max_5);
                    if (_equals_3) {
                      _builder.append("\t");
                      _builder.append("int max");
                      _builder.append(this.nCommands, "\t");
                      _builder.append(" = ");
                      int _min_9 = c.getMin();
                      _builder.append(_min_9, "\t");
                      _builder.append(";");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              } else {
                _builder.append("\t");
                _builder.append("int max");
                _builder.append(this.nCommands, "\t");
                _builder.append(" = ");
                int _fixed_3 = c.getFixed();
                _builder.append(_fixed_3, "\t");
                _builder.append(";");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t");
            _builder.append("for (int j = 0; j < max");
            _builder.append(this.nCommands, "\t");
            _builder.append("; j++) {");
            _builder.newLineIfNotEmpty();
            {
              String _name = c.getName();
              boolean _tripleNotEquals = (_name != null);
              if (_tripleNotEquals) {
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("//NAME:");
                String _name_1 = c.getName();
                String _string_1 = Integer.valueOf(this.nCommands).toString();
                String _plus_2 = (_name_1 + _string_1);
                String _commandName = this.commandName = _plus_2;
                _builder.append(_commandName, "\t\t");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("\t");
                _builder.append("//NAME:");
                _builder.append(this.commandName = Integer.valueOf(this.nCommands).toString(), "\t\t");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("//METHOD NAME:");
            String _string_2 = Integer.valueOf(localNMethod).toString();
            String _plus_3 = ("mutation" + _string_2);
            String _methodName = this.methodName = _plus_3;
            _builder.append(_methodName, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("List<Mutator> l");
            _builder.append(this.commandName, "\t\t");
            _builder.append(" = ");
            _builder.append(this.methodName, "\t\t");
            _builder.append("(packages, model, hmObjects, hmList, serialize, test, classes);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("if (l");
            _builder.append(this.commandName, "\t\t");
            _builder.append(" != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("if (l");
            _builder.append(this.commandName, "\t\t\t");
            _builder.append(".size() > 0) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t\t");
            _builder.append("mutations.addAll(l");
            _builder.append(this.commandName, "\t\t\t\t");
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("//METHOD INC: ");
            int _plusPlus_3 = localNMethod++;
            _builder.append(_plusPlus_3, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("\t");
    _builder.append("return mutations;\t");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public Object generateMethods(final Mutator mut, final boolean exhaustive, final MutatorEnvironment e, final Block b, final boolean last) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((mut instanceof CompositeMutator)) {
        _builder.append("//COUNTER COMPOSITE: ");
        _builder.append(this.nCompositeMethod = (this.nCompositeMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//COMPOSITE METHOD NAME:");
        String _string = Integer.valueOf(this.nCompositeMethod).toString();
        String _plus = ("compositeMutation" + _string);
        String _compositeMethodName = this.compositeMethodName = _plus;
        _builder.append(_compositeMethodName);
        _builder.newLineIfNotEmpty();
        {
          if ((this.compositeCommands == null)) {
            _builder.append("//CREATION ARRAYLIST NUM COMMANDS: ");
            ArrayList<String> _arrayList = new ArrayList<String>();
            List<String> _compositeCommands = this.compositeCommands = _arrayList;
            _builder.append(_compositeCommands);
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("//ADDING NUM COMMANDS: ");
        boolean _add = this.compositeCommands.add(this.compositeMethodName);
        _builder.append(_add);
        _builder.newLineIfNotEmpty();
        CharSequence _compositeMethod = this.compositeMethod(((CompositeMutator)mut), exhaustive);
        _builder.append(_compositeMethod);
        _builder.newLineIfNotEmpty();
        {
          EList<Mutator> _commands = ((CompositeMutator)mut).getCommands();
          for(final Mutator c : _commands) {
            Object _generateMethods = this.generateMethods(((Mutator) c), exhaustive, e, b, last);
            _builder.append(_generateMethods);
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        _builder.append("//COUNTER: ");
        _builder.append(this.nMethod = (this.nMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//METHOD CALL: ");
        _builder.append(this.nMethodCall = this.nMethod);
        _builder.newLineIfNotEmpty();
        _builder.append("//METHOD NAME:");
        String _string_1 = Integer.valueOf(this.nMethod).toString();
        String _plus_1 = ("mutation" + _string_1);
        String _methodName = this.methodName = _plus_1;
        _builder.append(_methodName);
        _builder.newLineIfNotEmpty();
        CharSequence _method = this.method(((Mutator) mut), exhaustive, e, b, last);
        _builder.append(_method);
        _builder.append("\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    return _builder;
  }
  
  public CharSequence registryMethod(final Mutator mut, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((this.standalone == false)) {
        _builder.append("private AppMutation ");
        _builder.append(this.registryMethodName);
        _builder.append("(Mutator mut, Map<String, EObject> hmMutator, Resource seed, List<String> mutPaths, List<EPackage> packages) {");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("private static AppMutation ");
        _builder.append(this.registryMethodName);
        _builder.append("(Mutator mut, Map<String, EObject> hmMutator, Resource seed, List<String> mutPaths, List<EPackage> packages) {");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("AppMutation appMut = null;");
    _builder.newLine();
    {
      if ((mut instanceof CreateObjectMutator)) {
        _builder.append("ObjectCreated cMut = AppliedMutationsFactory.eINSTANCE.createObjectCreated();");
        _builder.newLine();
        _builder.append("if ((mutPaths != null) && (packages != null)) {");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("try {");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("Resource mutant = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("EObject object = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("for (String mutatorPath : mutPaths) {");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t\t");
            _builder.append("mutant = ModelManager.loadModel(packages, mutatorPath);");
            _builder.newLine();
          } else {
            _builder.append("\t\t\t");
            _builder.append("mutant = ModelManager.loadModelNoException(packages, mutatorPath);");
            _builder.newLine();
          }
        }
        _builder.append("\t\t\t");
        _builder.append("object = ModelManager.getObject(mutant, mut.getObject());");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("if (object != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("break;");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("//Reload input");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("try {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("mutant.unload();");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("mutant.load(null); ");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("} catch (Exception e) {}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (object != null) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("cMut.getObject().add(object);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("else {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("if (mut.getModel() != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("mutant = mut.getModel();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("else {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("mutant = mut.getModels().get(0);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("cMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("} catch (ModelNotFoundException e) {");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("// TODO Auto-generated catch block");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t");
            _builder.append("e.printStackTrace();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("}");
        _builder.newLine();
        _builder.append("cMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = cMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof CloneObjectMutator)) {
        _builder.append("ObjectCloned cMut = AppliedMutationsFactory.eINSTANCE.createObjectCloned();");
        _builder.newLine();
        _builder.append("if (mut.getObject() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("cMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("cMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = cMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof RetypeObjectMutator)) {
        _builder.append("ObjectRetyped rMut = AppliedMutationsFactory.eINSTANCE.createObjectRetyped();");
        _builder.newLine();
        _builder.append("if (mut.getObject() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("EObject foundObject = findEObjectForRegistry(seed, mut.getRemovedObject(), mut.getObjectByID(), mut.getObjectByURI(), mutPaths, packages);");
        _builder.newLine();
        _builder.append("if (foundObject != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getRemovedObject().add(foundObject);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setType(mut.getEType());");
        _builder.newLine();
        _builder.append("rMut.setNewType(mut.getNewEType());");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof RemoveObjectMutator)) {
        _builder.append("ObjectRemoved rMut = AppliedMutationsFactory.eINSTANCE.createObjectRemoved();");
        _builder.newLine();
        _builder.append("EObject foundObject = findEObjectForRegistry(seed, mut.getObject(), mut.getObjectByID(), mut.getObjectByURI(), mutPaths, packages);");
        _builder.newLine();
        _builder.append("if (foundObject != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getObject().add(foundObject);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setType(mut.getEType());");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof CreateReferenceMutator)) {
        _builder.append("ReferenceCreated rMut = AppliedMutationsFactory.eINSTANCE.createReferenceCreated();");
        _builder.newLine();
        _builder.append("if (mut.getObject() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("if (((CreateReferenceMutator) mut).getReference() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getRef().add(((CreateReferenceMutator) mut).getReference());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.setRefName(((CreateReferenceMutator) mut).getRefName());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof RemoveRandomReferenceMutator)) {
        _builder.append("ReferenceRemoved rMut = AppliedMutationsFactory.eINSTANCE.createReferenceRemoved();");
        _builder.newLine();
        _builder.append("List<EObject> objects = new ArrayList<EObject>();");
        _builder.newLine();
        _builder.append("objects.addAll(findEObjectsForRegistry(seed, mut, mutPaths, packages));");
        _builder.newLine();
        _builder.append("rMut.getObject().addAll(objects);");
        _builder.newLine();
        _builder.append("if (((RemoveReferenceMutator) mut).getReference() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getRef().add(((RemoveReferenceMutator) mut).getReference());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.setRefName(((RemoveReferenceMutator) mut).getRefName());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof RemoveSpecificReferenceMutator)) {
        _builder.append("ReferenceRemoved rMut = AppliedMutationsFactory.eINSTANCE.createReferenceRemoved();");
        _builder.newLine();
        _builder.append("List<EObject> objects = new ArrayList<EObject>();");
        _builder.newLine();
        _builder.append("objects.addAll(findEObjectsForRegistry(seed, mut, mutPaths, packages));");
        _builder.newLine();
        _builder.append("rMut.getObject().addAll(objects);");
        _builder.newLine();
        _builder.append("if (((RemoveReferenceMutator) mut).getReference() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getRef().add(((RemoveReferenceMutator) mut).getReference());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.setRefName(((RemoveReferenceMutator) mut).getRefName());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof RemoveCompleteReferenceMutator)) {
        _builder.append("ReferenceRemoved rMut = AppliedMutationsFactory.eINSTANCE.createReferenceRemoved();");
        _builder.newLine();
        _builder.append("List<EObject> objects = new ArrayList<EObject>();");
        _builder.newLine();
        _builder.append("objects.addAll(findEObjectsForRegistry(seed, mut, mutPaths, packages));");
        _builder.newLine();
        _builder.append("rMut.getObject().addAll(objects);");
        _builder.newLine();
        _builder.append("if (((RemoveReferenceMutator) mut).getReference() != null) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.getRef().add(((RemoveReferenceMutator) mut).getReference());");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("rMut.setRefName(((RemoveReferenceMutator) mut).getRefName());");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("rMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = rMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof ModifyInformationMutator)) {
        _builder.append("\t");
        _builder.append("InformationChanged icMut = AppliedMutationsFactory.eINSTANCE.createInformationChanged();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("icMut.setObject(mut.getObject());");
        _builder.newLine();
        {
          int _size = ((ModifyInformationMutator) mut).getAttributes().size();
          boolean _greaterThan = (_size > 0);
          if (_greaterThan) {
            _builder.append("\t");
            _builder.append("EList<AttributeChanged> attsMut = icMut.getAttChanges();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("Object oldAttVal = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("Object newAttVal = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("//ATTRIBUTE COUNTER: ");
            int attCounter = 0;
            _builder.newLineIfNotEmpty();
            {
              EList<AttributeSet> _attributes = ((ModifyInformationMutator) mut).getAttributes();
              for(final AttributeSet att : _attributes) {
                _builder.append("//");
                EAttribute eattfirst = att.getAttribute().get(0);
                _builder.newLineIfNotEmpty();
                _builder.append("//");
                EAttribute eattsec = eattfirst;
                _builder.newLineIfNotEmpty();
                {
                  if ((att instanceof AttributeScalar)) {
                    _builder.append("AttributeChanged attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name = eattfirst.getName();
                    _builder.append(_name);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((att instanceof AttributeOperation)) {
                    _builder.append("AttributeChanged attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name_1 = eattfirst.getName();
                    _builder.append(_name_1);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((att instanceof AttributeSwap)) {
                    _builder.append("//");
                    _builder.append(eattsec = ((AttributeSwap)att).getAttribute().get(1));
                    _builder.newLineIfNotEmpty();
                    _builder.append("appliedMutations.AttributeSwap attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeSwap();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setFirstName(\"");
                    String _name_2 = eattfirst.getName();
                    _builder.append(_name_2);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getOtherObject()) != null) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("attMut");
                    _builder.append(attCounter, "\t");
                    _builder.append(".setAttObject(ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getOtherObject()));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name_3 = eattsec.getName();
                    _builder.append(_name_3);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((att instanceof AttributeCopy)) {
                    _builder.append("//");
                    _builder.append(eattsec = ((AttributeCopy)att).getAttribute().get(1));
                    _builder.newLineIfNotEmpty();
                    _builder.append("AttributeChanged attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name_4 = eattsec.getName();
                    _builder.append(_name_4);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((att instanceof AttributeUnset)) {
                    _builder.append("AttributeChanged attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name_5 = eattsec.getName();
                    _builder.append(_name_5);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((att instanceof AttributeReverse)) {
                    _builder.append("AttributeChanged attMut");
                    _builder.append(attCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createAttributeChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("attMut");
                    _builder.append(attCounter);
                    _builder.append(".setAttName(\"");
                    String _name_6 = eattsec.getName();
                    _builder.append(_name_6);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("oldAttVal = ((ModifyInformationMutator) mut).getOldAttValue(\"");
                String _name_7 = eattfirst.getName();
                _builder.append(_name_7);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("newAttVal = ((ModifyInformationMutator) mut).getNewAttValue(\"");
                String _name_8 = eattfirst.getName();
                _builder.append(_name_8);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (oldAttVal != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("attMut");
                _builder.append(attCounter, "\t");
                _builder.append(".setOldVal(oldAttVal.toString());");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                _builder.append("if (newAttVal != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("attMut");
                _builder.append(attCounter, "\t");
                _builder.append(".setNewVal(newAttVal.toString());");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                _builder.append("attMut");
                _builder.append(attCounter);
                _builder.append(".setDef(hmMutator.get(\"m");
                _builder.append(this.nRegistryMutation);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("attsMut.add(attMut");
                _builder.append(attCounter);
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                _builder.append("icMut.setDef(hmMutator.get(\"m");
                _builder.append(this.nRegistryMutation);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("//ATTRIBUTE COUNTER INC: ");
                int _plusPlus = attCounter++;
                _builder.append(_plusPlus);
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        {
          int _size_1 = ((ModifyInformationMutator) mut).getReferences().size();
          boolean _greaterThan_1 = (_size_1 > 0);
          if (_greaterThan_1) {
            _builder.append("\t");
            _builder.append("EList<ReferenceChanged> refsMut = icMut.getRefChanges();");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("EObject previous = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("EObject next = null;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("//REFERENCE COUNTER: ");
            int refCounter = 0;
            _builder.newLineIfNotEmpty();
            {
              EList<ReferenceSet> _references = ((ModifyInformationMutator) mut).getReferences();
              for(final ReferenceSet ref : _references) {
                {
                  if ((((ref instanceof ReferenceInit) || (ref instanceof ReferenceAdd)) || (ref instanceof ReferenceRemove))) {
                    _builder.append("//");
                    EReference eref = ref.getReference().get(0);
                    _builder.newLineIfNotEmpty();
                    _builder.append("ReferenceChanged refMut");
                    _builder.append(refCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createReferenceChanged();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setRefName(\"");
                    String _name_9 = eref.getName();
                    _builder.append(_name_9);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".getObject().add(((ModifyInformationMutator) mut).getObject());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".getMutantObject().add(((ModifyInformationMutator) mut).getObject());");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((ref instanceof ReferenceSwap)) {
                    _builder.append("//");
                    EReference ereffirst = ((ReferenceSwap)ref).getReference().get(0);
                    _builder.newLineIfNotEmpty();
                    _builder.append("//");
                    EReference erefsec = ((ReferenceSwap)ref).getReference().get(1);
                    _builder.newLineIfNotEmpty();
                    _builder.append("appliedMutations.ReferenceSwap refMut");
                    _builder.append(refCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createReferenceSwap();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setFirstName(\"");
                    String _name_10 = ereffirst.getName();
                    _builder.append(_name_10);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getRefObject()) != null) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("refMut");
                    _builder.append(refCounter, "\t");
                    _builder.append(".setRefObject(ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getRefObject()));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setRefName(\"");
                    String _name_11 = erefsec.getName();
                    _builder.append(_name_11);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setOtherFrom(((ModifyInformationMutator) mut).getOtherSource(\"");
                    String _name_12 = ereffirst.getName();
                    _builder.append(_name_12);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setOtherFromName(((ModifyInformationMutator) mut).getOtherSourceName(\"");
                    String _name_13 = ereffirst.getName();
                    _builder.append(_name_13);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setOtherTo(((ModifyInformationMutator) mut).getOtherTarget(\"");
                    String _name_14 = ereffirst.getName();
                    _builder.append(_name_14);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setOtherToName(((ModifyInformationMutator) mut).getOtherTargetName(\"");
                    String _name_15 = ereffirst.getName();
                    _builder.append(_name_15);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((ref instanceof ReferenceAtt)) {
                    _builder.append("//");
                    EAttribute att_1 = ((ReferenceAtt)ref).getAttribute();
                    _builder.newLineIfNotEmpty();
                    _builder.append("appliedMutations.ReferenceAtt refMut");
                    _builder.append(refCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(" = AppliedMutationsFactory.eINSTANCE.createReferenceAtt();");
                    _builder.newLineIfNotEmpty();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setAttName(\"");
                    String _name_16 = att_1.getName();
                    _builder.append(_name_16);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getRefAttObject()) != null) {");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("refMut");
                    _builder.append(refCounter, "\t");
                    _builder.append(".getObject().add(ModelManager.getObject(seed, ((ModifyInformationMutator) mut).getRefAttObject()));");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setRefName(\"");
                    String _name_17 = ((ReferenceAtt)ref).getReference().get(0).getName();
                    _builder.append(_name_17);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object oldRefAttVal");
                    _builder.append(refCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("Object newRefAttVal");
                    _builder.append(refCounter);
                    _builder.append(" = null;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("if (((ModifyInformationMutator) mut).getOldRefAttValue(\"");
                    String _name_18 = att_1.getName();
                    _builder.append(_name_18);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("oldRefAttVal");
                    _builder.append(refCounter, "\t");
                    _builder.append(" = ((ModifyInformationMutator) mut).getOldRefAttValue(\"");
                    String _name_19 = att_1.getName();
                    _builder.append(_name_19, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("if (((ModifyInformationMutator) mut).getNewRefAttValue(\"");
                    String _name_20 = att_1.getName();
                    _builder.append(_name_20);
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("newRefAttVal");
                    _builder.append(refCounter, "\t");
                    _builder.append(" = ((ModifyInformationMutator) mut).getNewRefAttValue(\"");
                    String _name_21 = att_1.getName();
                    _builder.append(_name_21, "\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("if (oldRefAttVal");
                    _builder.append(refCounter);
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("refMut");
                    _builder.append(refCounter, "\t");
                    _builder.append(".setOldVal(oldRefAttVal");
                    _builder.append(refCounter, "\t");
                    _builder.append(".toString());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("if (newRefAttVal");
                    _builder.append(refCounter);
                    _builder.append(" != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("refMut");
                    _builder.append(refCounter, "\t");
                    _builder.append(".setNewVal(newRefAttVal");
                    _builder.append(refCounter, "\t");
                    _builder.append(".toString());");
                    _builder.newLineIfNotEmpty();
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("refMut");
                    _builder.append(refCounter);
                    _builder.append(".setDef(hmMutator.get(\"m");
                    _builder.append(this.nRegistryMutation);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("previous = ((ModifyInformationMutator) mut).getPrevious(\"");
                String _name_22 = ref.getReference().get(0).getName();
                _builder.append(_name_22);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("next = ((ModifyInformationMutator) mut).getNext(\"");
                String _name_23 = ref.getReference().get(0).getName();
                _builder.append(_name_23);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("if (previous != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("refMut");
                _builder.append(refCounter, "\t");
                _builder.append(".setFrom(previous);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("refMut");
                _builder.append(refCounter, "\t");
                _builder.append(".setMutantFrom(previous);");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                _builder.append("if (next != null) {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("refMut");
                _builder.append(refCounter, "\t");
                _builder.append(".setTo(next);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("refMut");
                _builder.append(refCounter, "\t");
                _builder.append(".setMutantTo(next);");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                _builder.append("refMut");
                _builder.append(refCounter);
                _builder.append(".setSrcRefName(((ModifyInformationMutator) mut).getSrcRefType());");
                _builder.newLineIfNotEmpty();
                _builder.append("refMut");
                _builder.append(refCounter);
                _builder.append(".setDef(hmMutator.get(\"m");
                _builder.append(this.nRegistryMutation);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("refsMut.add(refMut");
                _builder.append(refCounter);
                _builder.append(");");
                _builder.newLineIfNotEmpty();
                _builder.append("icMut.setDef(hmMutator.get(\"m");
                _builder.append(this.nRegistryMutation);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
                _builder.append("//REFERENCE COUNTER INC: ");
                int _plusPlus_1 = refCounter++;
                _builder.append(_plusPlus_1);
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t");
        _builder.append("appMut = icMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof ModifySourceReferenceMutator)) {
        _builder.append("SourceReferenceChanged srcMut = AppliedMutationsFactory.eINSTANCE.createSourceReferenceChanged();");
        _builder.newLine();
        _builder.append("srcMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("srcMut.setFrom(((ModifySourceReferenceMutator) mut).getSource());");
        _builder.newLine();
        _builder.append("srcMut.setTo(((ModifySourceReferenceMutator) mut).getNewSource());");
        _builder.newLine();
        _builder.append("srcMut.setRefName(((ModifySourceReferenceMutator) mut).getRefType());");
        _builder.newLine();
        _builder.append("srcMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = srcMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof ModifyTargetReferenceMutator)) {
        _builder.append("TargetReferenceChanged trcMut = AppliedMutationsFactory.eINSTANCE.createTargetReferenceChanged();");
        _builder.newLine();
        _builder.append("trcMut.getObject().add(mut.getObject());");
        _builder.newLine();
        _builder.append("trcMut.setFrom(((ModifyTargetReferenceMutator) mut).getSource());");
        _builder.newLine();
        _builder.append("trcMut.setSrcRefName(((ModifyTargetReferenceMutator) mut).getSrcRefType());");
        _builder.newLine();
        _builder.append("trcMut.setTo(((ModifyTargetReferenceMutator) mut).getNewTarget());");
        _builder.newLine();
        _builder.append("trcMut.setOldTo(((ModifyTargetReferenceMutator) mut).getOldTarget());");
        _builder.newLine();
        _builder.append("trcMut.setRefName(((ModifyTargetReferenceMutator) mut).getRefType());");
        _builder.newLine();
        _builder.append("trcMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("appMut = trcMut;");
        _builder.newLine();
      }
    }
    {
      if ((mut instanceof SelectObjectMutator)) {
        _builder.append("appMut = AppliedMutationsFactory.eINSTANCE.createAppMutation();");
        _builder.newLine();
        _builder.append("appMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      if ((mut instanceof SelectSampleMutator)) {
        _builder.append("appMut = AppliedMutationsFactory.eINSTANCE.createAppMutation();");
        _builder.newLine();
        _builder.append("appMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation);
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("return appMut;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compositeRegistryMethod(final CompositeMutator mut, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      EObject _eContainer = mut.eContainer();
      if ((_eContainer instanceof MutatorEnvironment)) {
        _builder.append("//LOCAL COPY REGISTRY COUNTER: ");
        int localNRegistryMutation = this.nRegistryMutation;
        _builder.newLineIfNotEmpty();
        {
          if ((this.standalone == false)) {
            _builder.append("private AppMutation ");
            _builder.append(this.compositeRegistryMethodName);
            _builder.append("(List<Mutator> muts, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmMutator, Resource seed, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) {");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("private static AppMutation ");
            _builder.append(this.compositeRegistryMethodName);
            _builder.append("(List<Mutator> muts, Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hmMutator, Resource seed, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) {");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("CompositeMutation appMut = AppliedMutationsFactory.eINSTANCE.createCompositeMutation();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("appMut.setSize(");
        int _mutatorSize = MutatorUtils.mutatorSize(mut);
        _builder.append(_mutatorSize, "\t");
        _builder.append(");");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("List<AppMutation> appMuts = new ArrayList<AppMutation>();");
        _builder.newLine();
        _builder.append("\t");
        int localNRegistryMethod = (this.nRegistryMethod + 1);
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        int mutCounter = 0;
        _builder.newLineIfNotEmpty();
        {
          EList<Mutator> _commands = mut.getCommands();
          for(final Mutator c : _commands) {
            _builder.append("\t");
            _builder.append("//REGISTRY METHOD NAME:");
            String _string = Integer.valueOf(localNRegistryMethod).toString();
            String _plus = ("registry" + _string);
            String _registryMethodName = this.registryMethodName = _plus;
            _builder.append(_registryMethodName, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//REGISTRY COUNTER INC: ");
            int _plusPlus = localNRegistryMutation++;
            _builder.append(_plusPlus, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("AppMutation appMut");
            _builder.append((mutCounter + 1), "\t");
            _builder.append(" = ");
            _builder.append(this.registryMethodName, "\t");
            _builder.append("(muts.get(");
            _builder.append(mutCounter, "\t");
            _builder.append("), hmMutator, seed, null, null);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("appMut");
            _builder.append((mutCounter + 1), "\t");
            _builder.append(".setDef(hmMutator.get(\"m");
            _builder.append(localNRegistryMutation, "\t");
            _builder.append("\"));");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("appMuts.add(appMut");
            _builder.append((mutCounter + 1), "\t");
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//REGISTRY METHOD INC: ");
            int _plusPlus_1 = localNRegistryMethod++;
            _builder.append(_plusPlus_1, "\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("//COUNTER: ");
            int _plusPlus_2 = mutCounter++;
            _builder.append(_plusPlus_2, "\t");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("appMut.getMuts().addAll(appMuts);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("appMut.setDef(hmMutator.get(\"m");
        _builder.append(this.nRegistryMutation, "\t");
        _builder.append("\"));");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("return appMut;");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public Object generateRegistryMethods(final Mutator mut, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((mut instanceof CompositeMutator)) {
        _builder.append("//COUNTER COMPOSITE REGISTRY: ");
        _builder.append(this.nCompositeRegistryMethod = (this.nCompositeRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//COMPOSITE REGISTRY METHOD NAME:");
        String _string = Integer.valueOf(this.nCompositeRegistryMethod).toString();
        String _plus = ("compositeRegistry" + _string);
        String _compositeRegistryMethodName = this.compositeRegistryMethodName = _plus;
        _builder.append(_compositeRegistryMethodName);
        _builder.newLineIfNotEmpty();
        {
          if ((this.compositeRegistryCommands == null)) {
            _builder.append("//CREATION ARRAYLIST NUM REGISTRY COMMANDS: ");
            ArrayList<String> _arrayList = new ArrayList<String>();
            List<String> _compositeRegistryCommands = this.compositeRegistryCommands = _arrayList;
            _builder.append(_compositeRegistryCommands);
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("//ADDING NUM COMMANDS: ");
        boolean _add = this.compositeRegistryCommands.add(this.compositeRegistryMethodName);
        _builder.append(_add);
        _builder.newLineIfNotEmpty();
        CharSequence _compositeRegistryMethod = this.compositeRegistryMethod(((CompositeMutator)mut), exhaustive);
        _builder.append(_compositeRegistryMethod);
        _builder.newLineIfNotEmpty();
        {
          EList<Mutator> _commands = ((CompositeMutator)mut).getCommands();
          for(final Mutator c : _commands) {
            Object _generateRegistryMethods = this.generateRegistryMethods(c, exhaustive);
            _builder.append(_generateRegistryMethods);
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("//COUNTER REGISTRY: ");
        int _mutatorSize = MutatorUtils.mutatorSize(((CompositeMutator)mut));
        int _plus_1 = (this.nRegistryMethod + _mutatorSize);
        int _nRegistryMethod = this.nRegistryMethod = _plus_1;
        _builder.append(_nRegistryMethod);
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("//COUNTER: ");
        _builder.append(this.nRegistryMethod = (this.nRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//METHOD NAME:");
        String _string_1 = Integer.valueOf(this.nRegistryMethod).toString();
        String _plus_2 = ("registry" + _string_1);
        String _registryMethodName = this.registryMethodName = _plus_2;
        _builder.append(_registryMethodName);
        _builder.newLineIfNotEmpty();
        CharSequence _registryMethod = this.registryMethod(mut, exhaustive);
        _builder.append(_registryMethod);
        _builder.append("\t\t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    return _builder;
  }
  
  public CharSequence generateBlock(final Block b, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNMethod = this.nMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNCompositeMethod = this.nCompositeMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNMutation = this.nMutation;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNRegistryMutation = this.nRegistryMutation;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNRegistryMethod = this.nRegistryMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNRegistryMethodCall = this.nRegistryMethodCall;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNCompositeRegistryMethod = this.nCompositeRegistryMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//SAVE COUNTER: ");
    int localNCompositeCommands = this.nCompositeCommands;
    _builder.newLineIfNotEmpty();
    {
      EList<Mutator> _commands = b.getCommands();
      for(final Mutator c : _commands) {
        _builder.append("\t");
        EObject _eContainer = b.eContainer();
        EList<Mutator> _commands_1 = b.getCommands();
        int _size = b.getCommands().size();
        int _minus = (_size - 1);
        Object _generateMethods = this.generateMethods(c, exhaustive, ((MutatorEnvironment) _eContainer), b, EcoreUtil.equals(c, _commands_1.get(_minus)));
        _builder.append(_generateMethods, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        Object _generateRegistryMethods = this.generateRegistryMethods(c, exhaustive);
        _builder.append(_generateRegistryMethods, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      if ((this.standalone == false)) {
        _builder.append("\t");
        _builder.append("public int block_");
        String _name = b.getName();
        _builder.append(_name, "\t");
        _builder.append("(int maxAttempts, int numMutants, boolean registry, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, List<String> fromNames, Map<String, Set<String>> hashmapMutants, Map<String, List<String>> hashmapMutVersions, IProject project, IProgressMonitor monitor, int[] k, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("public int block_");
        String _name_1 = b.getName();
        _builder.append(_name_1, "\t");
        _builder.append("(int maxAttempts, int numMutants, boolean registry, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, List<String> fromNames, Map<String, Set<String>> hashmapMutants, Map<String, List<String>> hashmapMutVersions, IProgressMonitor monitor, int[] k, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t\t\t\t\t\t\t\t\t  ");
        _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("int numMutantsGenerated = 0;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (maxAttempts <= 0) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("maxAttempts = 1;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNMethod = this.nMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNCompositeMethod = this.nCompositeMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNMutation = this.nMutation;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNRegistryMutation = this.nRegistryMutation;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNRegistryMethod = this.nRegistryMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNRegistryMethodCall = this.nRegistryMethodCall;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNCompositeRegistryMethod = this.nCompositeRegistryMethod;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//TEMP COUNTER: ");
    int tempNCompositeCommands = this.nCompositeCommands;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nMethod = localNMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nCompositeMethod = localNCompositeMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nMutation = localNMutation, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nRegistryMutation = localNRegistryMutation, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nRegistryMethod = localNRegistryMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nRegistryMethodCall = localNRegistryMethodCall, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nCompositeRegistryMethod = localNCompositeRegistryMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESET COUNTER: ");
    _builder.append(this.nCompositeCommands = localNCompositeCommands, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//");
    EObject _eContainer_1 = b.eContainer();
    MutatorEnvironment e = ((MutatorEnvironment) _eContainer_1);
    _builder.newLineIfNotEmpty();
    {
      Definition _definition = e.getDefinition();
      if ((_definition instanceof Program)) {
        _builder.append("\t");
        CharSequence _multipleBlock = this.multipleBlock(e, b);
        _builder.append(_multipleBlock, "\t");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nMethod = tempNMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nCompositeMethod = tempNCompositeMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nMutation = tempNMutation, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nRegistryMutation = tempNRegistryMutation, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nRegistryMethod = tempNRegistryMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nRegistryMethodCall = tempNRegistryMethodCall, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nCompositeRegistryMethod = tempNCompositeRegistryMethod, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("//RESTORE COUNTER: ");
    _builder.append(this.nCompositeCommands = tempNCompositeCommands, "\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("return numMutantsGenerated;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compile(final MutatorEnvironment e) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("package mutator.");
    _builder.append(this.className);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.io.File;");
    _builder.newLine();
    _builder.append("import java.io.IOException;");
    _builder.newLine();
    _builder.append("import java.util.ArrayList;");
    _builder.newLine();
    _builder.append("import java.util.Arrays;");
    _builder.newLine();
    _builder.append("import java.util.Collections;");
    _builder.newLine();
    _builder.append("import java.util.HashMap;");
    _builder.newLine();
    _builder.append("import java.util.HashSet;");
    _builder.newLine();
    _builder.append("import java.util.Set;");
    _builder.newLine();
    _builder.append("import java.util.List;");
    _builder.newLine();
    _builder.append("import java.util.Map;");
    _builder.newLine();
    _builder.append("import java.util.TreeMap;");
    _builder.newLine();
    _builder.append("import java.util.AbstractMap.SimpleEntry;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import manager.IWodelTest;");
    _builder.newLine();
    _builder.append("import manager.ModelManager;");
    _builder.newLine();
    _builder.append("import manager.MutatorMetricsGenerator;");
    _builder.newLine();
    _builder.append("import manager.DebugMutatorMetricsGenerator;");
    _builder.newLine();
    _builder.append("import manager.NetMutatorMetricsGenerator;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.core.resources.IProject;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.EObject;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.EPackage;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.EReference;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.resource.Resource;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.ecore.util.EcoreUtil;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import commands.*;");
    _builder.newLine();
    _builder.append("import commands.selection.strategies.*;");
    _builder.newLine();
    _builder.append("import commands.strategies.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import exceptions.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import appliedMutations.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.emf.common.util.URI;");
    _builder.newLine();
    _builder.append("import org.eclipse.emf.common.util.EList;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.core.runtime.IProgressMonitor;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import manager.MutatorUtils;");
    _builder.newLine();
    _builder.append("import manager.EMFCopier;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class ");
    _builder.append(this.className);
    _builder.append(" extends MutatorUtils {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("\t");
        _builder.append("private Map<Integer, Mutator> overallMutators = new HashMap<Integer, Mutator>();");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("private static Map<Integer, Mutator> overallMutators = new HashMap<Integer, Mutator>();");
        _builder.newLine();
      }
    }
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("\t");
        _builder.append("private List<EObject> mutatedObjects = null;");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("private static List<EObject> mutatedObjects = null;");
        _builder.newLine();
      }
    }
    _builder.newLine();
    {
      Definition _definition = e.getDefinition();
      if ((_definition instanceof Program)) {
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMethodCall = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeRegistryMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nMutation = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMutation = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeCommands = 0, "\t");
        _builder.newLineIfNotEmpty();
        {
          int _length = ((Object[])Conversions.unwrapArray(e.getCommands(), Object.class)).length;
          boolean _greaterThan = (_length > 0);
          if (_greaterThan) {
            {
              EList<Mutator> _commands = e.getCommands();
              for(final Mutator c : _commands) {
                _builder.append("\t");
                Definition _definition_1 = e.getDefinition();
                EObject _eContainer = c.eContainer();
                EList<Mutator> _commands_1 = e.getCommands();
                int _size = e.getCommands().size();
                int _minus = (_size - 1);
                Object _generateMethods = this.generateMethods(c, ((Program) _definition_1).isExhaustive(), ((MutatorEnvironment) _eContainer), null, EcoreUtil.equals(c, _commands_1.get(_minus)));
                _builder.append(_generateMethods, "\t");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                Definition _definition_2 = e.getDefinition();
                Object _generateRegistryMethods = this.generateRegistryMethods(c, ((Program) _definition_2).isExhaustive());
                _builder.append(_generateRegistryMethods, "\t");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.newLine();
            _builder.append("\t");
            _builder.append("@Override");
            _builder.newLine();
            {
              if ((this.standalone == false)) {
                _builder.append("\t");
                _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, String[] blockNames, IProject project, IProgressMonitor monitor, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
                _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
                _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
                _builder.newLine();
              } else {
                _builder.append("\t");
                _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, String[] blockNames, IProgressMonitor monitor, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
                _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
                _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
                _builder.newLine();
              }
            }
            _builder.append("\t\t\t\t\t\t\t\t\t\t\t\t  \t");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("MutationResults mutationResults = new MutationResults();");
            _builder.newLine();
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("if (maxAttempts <= 0) {");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("maxAttempts = 1;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("int totalTasks = 0;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("if (metrics == true) {");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("totalTasks++;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("if (debugMetrics == true) {");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("totalTasks++;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            {
              Definition _definition_3 = e.getDefinition();
              boolean _isExhaustive = ((Program) _definition_3).isExhaustive();
              boolean _equals = (_isExhaustive == false);
              if (_equals) {
                _builder.append("\t\t");
                _builder.append("//");
                Definition _definition_4 = e.getDefinition();
                _builder.append(this.nMut = ((Program) _definition_4).getNum(), "\t\t");
                _builder.newLineIfNotEmpty();
                {
                  if ((this.nMut != 0)) {
                    _builder.append("\t   \t");
                    _builder.append("numMutants = ");
                    _builder.append(this.nMut, "\t   \t");
                    _builder.append(";");
                    _builder.newLineIfNotEmpty();
                  }
                }
              } else {
                _builder.append("numMutants = -1;");
                _builder.newLine();
              }
            }
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("int totalMutants = 0;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("Map<String, List<String>> hashmapMutVersions = new HashMap<String, List<String>>();");
            _builder.newLine();
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nMethod = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nCompositeMethod = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nMutation = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nRegistryMutation = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nRegistryMethod = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nRegistryMethodCall = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nCompositeRegistryMethod = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("//RESET COUNTER: ");
            _builder.append(this.nCompositeCommands = 0, "\t\t");
            _builder.newLineIfNotEmpty();
            {
              Definition _definition_5 = e.getDefinition();
              if ((_definition_5 instanceof Program)) {
                _builder.append("\t\t");
                CharSequence _multiple = this.multiple(e);
                _builder.append(_multiple, "\t\t");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("//Generate metrics model");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("String metricsecore = \"");
            _builder.append(this.metricsURL, "\t   \t");
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("MutatorMetricsGenerator metricsGenerator = null;");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("if (metrics == true) {");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("List<EPackage> metricspackages = ModelManager.loadMetaModel(metricsecore);");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("monitor.subTask(\"Generating dynamic net metrics\");");
            _builder.newLine();
            {
              if ((this.standalone == false)) {
                _builder.append("\t   \t\t");
                _builder.append("metricsGenerator = new NetMutatorMetricsGenerator(metricspackages, \"");
                String _workspaceAbsolutePath = ModelManager.getWorkspaceAbsolutePath(e);
                String _plus = (_workspaceAbsolutePath + "/");
                String _projectName = this.getProjectName();
                String _plus_1 = (_plus + _projectName);
                String _plus_2 = (_plus_1 + "/");
                Definition _definition_6 = ((MutatorEnvironment) e).getDefinition();
                String _output = ((Program) _definition_6).getOutput();
                String _plus_3 = (_plus_2 + _output);
                _builder.append(_plus_3, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_7 = ((MutatorEnvironment) e).getDefinition();
                String _metamodel = ((Program) _definition_7).getMetamodel();
                _builder.append(_metamodel, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_8 = ((MutatorEnvironment) e).getDefinition();
                String _path = ((Program) _definition_8).getSource().getPath();
                String _plus_4 = ((this.path + "/") + _path);
                _builder.append(_plus_4, "\t   \t\t");
                _builder.append("\", \"");
                _builder.append(this.fileName, "\t   \t\t");
                _builder.append("\", hashmapMutVersions, this.getClass());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t   \t\t");
                _builder.append("metricsGenerator = new NetMutatorMetricsGenerator(metricspackages, \"");
                String _workspaceAbsolutePath_1 = ModelManager.getWorkspaceAbsolutePath(e);
                String _plus_5 = (_workspaceAbsolutePath_1 + "/");
                String _projectName_1 = this.getProjectName();
                String _plus_6 = (_plus_5 + _projectName_1);
                String _plus_7 = (_plus_6 + "/");
                Definition _definition_9 = ((MutatorEnvironment) e).getDefinition();
                String _output_1 = ((Program) _definition_9).getOutput();
                String _plus_8 = (_plus_7 + _output_1);
                _builder.append(_plus_8, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_10 = ((MutatorEnvironment) e).getDefinition();
                String _metamodel_1 = ((Program) _definition_10).getMetamodel();
                _builder.append(_metamodel_1, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_11 = ((MutatorEnvironment) e).getDefinition();
                String _path_1 = ((Program) _definition_11).getSource().getPath();
                String _plus_9 = ((this.path + "/") + _path_1);
                _builder.append(_plus_9, "\t   \t\t");
                _builder.append("\", \"");
                _builder.append(this.fileName, "\t   \t\t");
                _builder.append("\", hashmapMutVersions, ");
                _builder.append(this.className, "\t   \t\t");
                _builder.append(".class);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t   \t\t");
            _builder.append("metricsGenerator.run();");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("monitor.worked(1);");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("if (debugMetrics == true) {");
            _builder.newLine();
            _builder.append("\t\t\t");
            _builder.append("List<EPackage> metricspackages = ModelManager.loadMetaModel(metricsecore);");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("monitor.subTask(\"Generating dynamic debug metrics\");");
            _builder.newLine();
            {
              if ((this.standalone == true)) {
                _builder.append("\t   \t\t");
                _builder.append("metricsGenerator = new DebugMutatorMetricsGenerator(metricspackages, \"");
                String _workspaceAbsolutePath_2 = ModelManager.getWorkspaceAbsolutePath(e);
                String _plus_10 = (_workspaceAbsolutePath_2 + "/");
                String _projectName_2 = this.getProjectName();
                String _plus_11 = (_plus_10 + _projectName_2);
                String _plus_12 = (_plus_11 + "/");
                Definition _definition_12 = ((MutatorEnvironment) e).getDefinition();
                String _output_2 = ((Program) _definition_12).getOutput();
                String _plus_13 = (_plus_12 + _output_2);
                _builder.append(_plus_13, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_13 = ((MutatorEnvironment) e).getDefinition();
                String _metamodel_2 = ((Program) _definition_13).getMetamodel();
                _builder.append(_metamodel_2, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_14 = ((MutatorEnvironment) e).getDefinition();
                String _path_2 = ((Program) _definition_14).getSource().getPath();
                String _plus_14 = ((this.path + "/") + _path_2);
                _builder.append(_plus_14, "\t   \t\t");
                _builder.append("\", \"");
                _builder.append(this.fileName, "\t   \t\t");
                _builder.append("\", hashmapMutVersions, this.getClass());");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t   \t\t");
                _builder.append("metricsGenerator = new DebugMutatorMetricsGenerator(metricspackages, \"");
                String _workspaceAbsolutePath_3 = ModelManager.getWorkspaceAbsolutePath(e);
                String _plus_15 = (_workspaceAbsolutePath_3 + "/");
                String _projectName_3 = this.getProjectName();
                String _plus_16 = (_plus_15 + _projectName_3);
                String _plus_17 = (_plus_16 + "/");
                Definition _definition_15 = ((MutatorEnvironment) e).getDefinition();
                String _output_3 = ((Program) _definition_15).getOutput();
                String _plus_18 = (_plus_17 + _output_3);
                _builder.append(_plus_18, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_16 = ((MutatorEnvironment) e).getDefinition();
                String _metamodel_3 = ((Program) _definition_16).getMetamodel();
                _builder.append(_metamodel_3, "\t   \t\t");
                _builder.append("\", \"");
                Definition _definition_17 = ((MutatorEnvironment) e).getDefinition();
                String _path_3 = ((Program) _definition_17).getSource().getPath();
                String _plus_19 = ((this.path + "/") + _path_3);
                _builder.append(_plus_19, "\t   \t\t");
                _builder.append("\", \"");
                _builder.append(this.fileName, "\t   \t\t");
                _builder.append("\", hashmapMutVersions, ");
                _builder.append(this.className, "\t   \t\t");
                _builder.append(".class);");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t   \t\t");
            _builder.append("metricsGenerator.run();");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("monitor.worked(1);   \t\t\t");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("mutationResults.numMutatorsApplied++;");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("if (mutationResults.mutatorsApplied == null) {");
            _builder.newLine();
            _builder.append("\t   \t\t");
            _builder.append("mutationResults.mutatorsApplied = new ArrayList<String>();");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("mutationResults.mutatorsApplied.add(\"\");");
            _builder.newLine();
            _builder.append("\t   \t");
            _builder.append("return mutationResults;");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    {
      int _size_1 = e.getBlocks().size();
      boolean _greaterThan_1 = (_size_1 > 0);
      if (_greaterThan_1) {
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nMutation = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMutation = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nRegistryMethodCall = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeRegistryMethod = 0, "\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("//RESET COUNTER: ");
        _builder.append(this.nCompositeCommands = 0, "\t");
        _builder.newLineIfNotEmpty();
        {
          EList<Block> _blocks = e.getBlocks();
          for(final Block b : _blocks) {
            {
              int _size_2 = b.getCommands().size();
              boolean _greaterThan_2 = (_size_2 > 0);
              if (_greaterThan_2) {
                _builder.append("\t");
                Definition _definition_18 = e.getDefinition();
                CharSequence _generateBlock = this.generateBlock(b, ((Program) _definition_18).isExhaustive());
                _builder.append(_generateBlock, "\t");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t");
        _builder.append("@Override");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, String[] blockNames, IProject project, IProgressMonitor monitor, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
            _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
            _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("public MutationResults execute(int maxAttempts, int numMutants, boolean registry, boolean metrics, boolean debugMetrics, List<EPackage> packages, Map<String, EPackage> registeredPackages, Map<String, EPackage> localRegisteredPackages, String[] blockNames, IProgressMonitor monitor, boolean serialize, IWodelTest test, TreeMap<String, List<String>> classes) throws ReferenceNonExistingException, WrongAttributeTypeException, ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
            _builder.append("MaxSmallerThanMinException, AbstractCreationException, ObjectNoTargetableException, ");
            _builder.newLine();
            _builder.append("\t");
            _builder.append("\t\t\t\t\t\t\t\t\t\t\t  ");
            _builder.append("ObjectNotContainedException, MetaModelNotFoundException, ModelNotFoundException, IOException {");
            _builder.newLine();
          }
        }
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("MutationResults mutationResults = new MutationResults();");
        _builder.newLine();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (maxAttempts <= 0) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("maxAttempts = 1;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("int totalTasks = ");
        int _size_3 = e.getBlocks().size();
        _builder.append(_size_3, "\t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("if (metrics == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("totalTasks++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (debugMetrics == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("totalTasks++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("monitor.beginTask(\"Generating mutants\", totalTasks);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, Set<String>> hashmapMutants = new HashMap<String, Set<String>>();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> hashmapMutVersions = new HashMap<String, List<String>>();");
        _builder.newLine();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("List<String> fromNames = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//");
        int i = 0;
        _builder.newLineIfNotEmpty();
        {
          EList<Block> _blocks_1 = e.getBlocks();
          for(final Block b_1 : _blocks_1) {
            {
              int _size_4 = b_1.getCommands().size();
              boolean _greaterThan_3 = (_size_4 > 0);
              if (_greaterThan_3) {
                _builder.append("\t\t");
                _builder.append("fromNames = new ArrayList<String>();");
                _builder.newLine();
                {
                  EList<Block> _from = b_1.getFrom();
                  for(final Block from : _from) {
                    _builder.append("\t\t");
                    _builder.append("fromNames.add(\"");
                    String _name = from.getName();
                    _builder.append(_name, "\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t\t");
                _builder.append("if (blockNames == null || (blockNames != null && Arrays.asList(blockNames).contains(\"");
                String _name_1 = b_1.getName();
                _builder.append(_name_1, "\t\t");
                _builder.append("\") == true)) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("monitor.subTask(\"Generating mutants for block ");
                String _name_2 = b_1.getName();
                _builder.append(_name_2, "\t\t\t");
                _builder.append(" (");
                _builder.append((i + 1), "\t\t\t");
                _builder.append("/");
                int _size_5 = e.getBlocks().size();
                _builder.append(_size_5, "\t\t\t");
                _builder.append(")\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("int[] k = new int[1];");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("k[0] = 0;");
                _builder.newLine();
                {
                  if ((this.standalone == false)) {
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("int numMutantsGenerated = block_");
                    String _name_3 = b_1.getName();
                    _builder.append(_name_3, "\t\t\t");
                    _builder.append("(maxAttempts, numMutants, registry, packages, registeredPackages, localRegisteredPackages, fromNames, hashmapMutants, hashmapMutVersions, project, monitor, k, serialize, test, classes);");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("int numMutantsGenerated = block_");
                    String _name_4 = b_1.getName();
                    _builder.append(_name_4, "\t\t\t");
                    _builder.append("(maxAttempts, numMutants, registry, packages, registeredPackages, localRegisteredPackages, fromNames, hashmapMutants, hashmapMutVersions, monitor, k, serialize, test, classes);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("if (numMutantsGenerated > 0) {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("mutationResults.numMutatorsApplied++;");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("if (mutationResults.mutatorsApplied == null) {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t\t");
                _builder.append("mutationResults.mutatorsApplied = new ArrayList<String>();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("mutationResults.mutatorsApplied.add(\"");
                String _name_5 = b_1.getName();
                _builder.append(_name_5, "\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("mutationResults.numMutantsGenerated += numMutantsGenerated;");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("monitor.worked(1);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("//");
                int _plusPlus = i++;
                _builder.append(_plusPlus, "\t\t");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//Generate metrics model");
        _builder.newLine();
        _builder.append("\t   \t");
        _builder.append("String metricsecore = \"");
        _builder.append(this.metricsURL, "\t   \t");
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("MutatorMetricsGenerator metricsGenerator = null;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (metrics == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("List<EPackage> metricspackages = ModelManager.loadMetaModel(metricsecore);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("monitor.subTask(\"Generating dynamic net metrics\");");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t\t");
            _builder.append("metricsGenerator = new NetMutatorMetricsGenerator(metricspackages, \"");
            String _workspaceAbsolutePath_4 = ModelManager.getWorkspaceAbsolutePath(e);
            String _plus_20 = (_workspaceAbsolutePath_4 + "/");
            String _projectName_4 = this.getProjectName();
            String _plus_21 = (_plus_20 + _projectName_4);
            String _plus_22 = (_plus_21 + "/");
            Definition _definition_19 = ((MutatorEnvironment) e).getDefinition();
            String _output_4 = ((Program) _definition_19).getOutput();
            String _plus_23 = (_plus_22 + _output_4);
            _builder.append(_plus_23, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_20 = ((MutatorEnvironment) e).getDefinition();
            String _metamodel_4 = ((Program) _definition_20).getMetamodel();
            _builder.append(_metamodel_4, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_21 = ((MutatorEnvironment) e).getDefinition();
            String _path_4 = ((Program) _definition_21).getSource().getPath();
            String _plus_24 = ((this.path + "/") + _path_4);
            _builder.append(_plus_24, "\t\t\t");
            _builder.append("\", \"");
            _builder.append(this.fileName, "\t\t\t");
            _builder.append("\", hashmapMutVersions, this.getClass());");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t\t\t");
            _builder.append("metricsGenerator = new NetMutatorMetricsGenerator(metricspackages, \"");
            String _workspaceAbsolutePath_5 = ModelManager.getWorkspaceAbsolutePath(e);
            String _plus_25 = (_workspaceAbsolutePath_5 + "/");
            String _projectName_5 = this.getProjectName();
            String _plus_26 = (_plus_25 + _projectName_5);
            String _plus_27 = (_plus_26 + "/");
            Definition _definition_22 = ((MutatorEnvironment) e).getDefinition();
            String _output_5 = ((Program) _definition_22).getOutput();
            String _plus_28 = (_plus_27 + _output_5);
            _builder.append(_plus_28, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_23 = ((MutatorEnvironment) e).getDefinition();
            String _metamodel_5 = ((Program) _definition_23).getMetamodel();
            _builder.append(_metamodel_5, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_24 = ((MutatorEnvironment) e).getDefinition();
            String _path_5 = ((Program) _definition_24).getSource().getPath();
            String _plus_29 = ((this.path + "/") + _path_5);
            _builder.append(_plus_29, "\t\t\t");
            _builder.append("\", \"");
            _builder.append(this.fileName, "\t\t\t");
            _builder.append("\", hashmapMutVersions, ");
            _builder.append(this.className, "\t\t\t");
            _builder.append(".class);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t   \t\t");
        _builder.append("metricsGenerator.run();");
        _builder.newLine();
        _builder.append("\t   \t\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (debugMetrics == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("List<EPackage> metricspackages = ModelManager.loadMetaModel(metricsecore);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("monitor.subTask(\"Generating dynamic debug metrics\");");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t\t");
            _builder.append("metricsGenerator = new DebugMutatorMetricsGenerator(metricspackages, \"");
            String _workspaceAbsolutePath_6 = ModelManager.getWorkspaceAbsolutePath(e);
            String _plus_30 = (_workspaceAbsolutePath_6 + "/");
            String _projectName_6 = this.getProjectName();
            String _plus_31 = (_plus_30 + _projectName_6);
            String _plus_32 = (_plus_31 + "/");
            Definition _definition_25 = ((MutatorEnvironment) e).getDefinition();
            String _output_6 = ((Program) _definition_25).getOutput();
            String _plus_33 = (_plus_32 + _output_6);
            _builder.append(_plus_33, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_26 = ((MutatorEnvironment) e).getDefinition();
            String _metamodel_6 = ((Program) _definition_26).getMetamodel();
            _builder.append(_metamodel_6, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_27 = ((MutatorEnvironment) e).getDefinition();
            String _path_6 = ((Program) _definition_27).getSource().getPath();
            String _plus_34 = ((this.path + "/") + _path_6);
            _builder.append(_plus_34, "\t\t\t");
            _builder.append("\", \"");
            _builder.append(this.fileName, "\t\t\t");
            _builder.append("\", hashmapMutVersions, this.getClass());");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t\t\t");
            _builder.append("metricsGenerator = new DebugMutatorMetricsGenerator(metricspackages, \"");
            String _workspaceAbsolutePath_7 = ModelManager.getWorkspaceAbsolutePath(e);
            String _plus_35 = (_workspaceAbsolutePath_7 + "/");
            String _projectName_7 = this.getProjectName();
            String _plus_36 = (_plus_35 + _projectName_7);
            String _plus_37 = (_plus_36 + "/");
            Definition _definition_28 = ((MutatorEnvironment) e).getDefinition();
            String _output_7 = ((Program) _definition_28).getOutput();
            String _plus_38 = (_plus_37 + _output_7);
            _builder.append(_plus_38, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_29 = ((MutatorEnvironment) e).getDefinition();
            String _metamodel_7 = ((Program) _definition_29).getMetamodel();
            _builder.append(_metamodel_7, "\t\t\t");
            _builder.append("\", \"");
            Definition _definition_30 = ((MutatorEnvironment) e).getDefinition();
            String _path_7 = ((Program) _definition_30).getSource().getPath();
            String _plus_39 = ((this.path + "/") + _path_7);
            _builder.append(_plus_39, "\t\t\t");
            _builder.append("\", \"");
            _builder.append(this.fileName, "\t\t\t");
            _builder.append("\", hashmapMutVersions, ");
            _builder.append(this.className, "\t\t\t");
            _builder.append(".class);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t   \t\t");
        _builder.append("metricsGenerator.run();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("monitor.worked(1);   \t\t\t");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("return mutationResults;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence multiple(final MutatorEnvironment e) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("    ");
    CharSequence _multipleCompile = this.multipleCompile(e.getDefinition());
    _builder.append(_multipleCompile, "    ");
    _builder.newLineIfNotEmpty();
    _builder.append("   \t");
    CharSequence _execute = this.execute(e);
    _builder.append(_execute, "   \t");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence multipleBlock(final MutatorEnvironment e, final Block b) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.newLine();
    _builder.append("   ");
    CharSequence _multipleBlockCompile = this.multipleBlockCompile(e.getDefinition(), b);
    _builder.append(_multipleBlockCompile, "   ");
    _builder.newLineIfNotEmpty();
    {
      Definition _definition = e.getDefinition();
      boolean _isExhaustive = ((Program) _definition).isExhaustive();
      boolean _equals = (_isExhaustive == false);
      if (_equals) {
        _builder.append("   ");
        int nMut = 0;
        _builder.newLineIfNotEmpty();
        {
          int _fixed = b.getFixed();
          boolean _equals_1 = (_fixed == 0);
          if (_equals_1) {
            {
              int _max = b.getMax();
              int _min = b.getMin();
              int _minus = (_max - _min);
              boolean _greaterThan = (_minus > 0);
              if (_greaterThan) {
                _builder.append("//");
                int _min_1 = b.getMin();
                int _max_1 = b.getMax();
                int _min_2 = b.getMin();
                int _random = this.getRandom((_max_1 - _min_2));
                int _plus = (_min_1 + _random);
                int _nMut = nMut = _plus;
                _builder.append(_nMut);
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if (((b.getMin() == 0) && (b.getMax() == 0))) {
                _builder.append("//");
                Definition _definition_1 = e.getDefinition();
                _builder.append(nMut = ((Program) _definition_1).getNum());
                _builder.newLineIfNotEmpty();
              } else {
                int _min_3 = b.getMin();
                int _max_2 = b.getMax();
                boolean _equals_2 = (_min_3 == _max_2);
                if (_equals_2) {
                  _builder.append("//");
                  _builder.append(nMut = b.getMin());
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          } else {
            _builder.append("//");
            _builder.append(nMut = b.getFixed());
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((nMut != 0)) {
            _builder.append("   ");
            _builder.append("\t");
            _builder.append("numMutants = ");
            _builder.append(nMut, "   \t");
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
      } else {
        _builder.append("   ");
        _builder.append("numMutants = -1;");
        _builder.newLine();
      }
    }
    _builder.append("   \t");
    _builder.newLine();
    _builder.append("   \t");
    _builder.newLine();
    _builder.append("   \t");
    CharSequence _executeBlock = this.executeBlock(e, b);
    _builder.append(_executeBlock, "   \t");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence multipleCompile(final Definition e) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof Program)) {
        _builder.append("String ecoreURI = \"");
        String _metamodel = ((Program)e).getMetamodel();
        _builder.append(_metamodel);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        String _path = ((Program)e).getSource().getPath();
        String modelPath = ((this.path + "/") + _path);
        _builder.newLineIfNotEmpty();
        String _output = ((Program)e).getOutput();
        String outputPath = ((this.path + "/") + _output);
        _builder.append(" ");
        _builder.newLineIfNotEmpty();
        _builder.append("String modelURI = \"");
        _builder.append(modelPath);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.append("String modelsURI = \"");
        _builder.append(outputPath);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("Map<String, String> hashmapModelFilenames = new HashMap<String, String>();");
        _builder.newLine();
        {
          boolean _endsWith = ((Program)e).getSource().getPath().endsWith("/");
          if (_endsWith) {
            _builder.append("File[] files = new File(modelURI).listFiles();");
            _builder.newLine();
          } else {
            _builder.append("File[] files = new File[1];");
            _builder.newLine();
            _builder.append("files[0] = new File(modelURI);");
            _builder.newLine();
          }
        }
        _builder.append("for (int i = 0; i < files.length; i++) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("if (files[i].isFile() == true) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("String pathfile = files[i].getPath();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (pathfile.endsWith(\".model\") == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("hashmapModelFilenames.put(pathfile, modelsURI + files[i].getName().substring(0, files[i].getName().length() - \".model\".length()));");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.newLine();
    {
      if ((e instanceof Program)) {
        _builder.append("//Load Model");
        _builder.newLine();
        _builder.append("Set<String> modelFilenames = hashmapModelFilenames.keySet();");
        _builder.newLine();
        _builder.append("\t   \t");
        _builder.append("if (numMutants > 0) {");
        _builder.newLine();
        _builder.append("\t   \t\t");
        _builder.append("totalMutants = numMutants * ");
        EObject _eContainer = ((Program)e).eContainer();
        int _numberOfSeedModels = MutatorUtils.getNumberOfSeedModels(((MutatorEnvironment) _eContainer), this.path);
        _builder.append(_numberOfSeedModels, "\t   \t\t");
        _builder.append(";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t   \t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("totalTasks += totalMutants;");
        _builder.newLine();
        _builder.append("monitor.beginTask(\"Generating mutants\", totalTasks);");
        _builder.newLine();
        _builder.append("int count = 0;");
        _builder.newLine();
        _builder.append("for (String modelFilename : modelFilenames) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Set<String> hashsetMutants = new HashSet<String>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("hashsetMutants.add(modelFilename);");
        _builder.newLine();
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public CharSequence multipleBlockCompile(final Definition e, final Block b) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof Program)) {
        _builder.append("String ecoreURI = \"");
        String _metamodel = ((Program)e).getMetamodel();
        _builder.append(_metamodel);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        String _path = ((Program)e).getSource().getPath();
        String modelPath = ((this.path + "/") + _path);
        _builder.newLineIfNotEmpty();
        String _output = ((Program)e).getOutput();
        String outputPath = ((this.path + "/") + _output);
        _builder.append(" ");
        _builder.newLineIfNotEmpty();
        _builder.append("String modelURI = \"");
        _builder.append(modelPath);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.append("String modelsURI = \"");
        _builder.append(outputPath);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("Map<String, String> hashmapModelFilenames = new HashMap<String, String>();");
        _builder.newLine();
        _builder.append("Map<String, String> hashmapModelFolders = new HashMap<String, String>();");
        _builder.newLine();
        _builder.append("Map<String, String> seedModelFilenames = new HashMap<String, String>();");
        _builder.newLine();
        {
          boolean _endsWith = ((Program)e).getSource().getPath().endsWith("/");
          if (_endsWith) {
            _builder.append("File[] files = new File(modelURI).listFiles();");
            _builder.newLine();
          } else {
            _builder.append("File[] files = new File[1];");
            _builder.newLine();
            _builder.append("files[0] = new File(modelURI);");
            _builder.newLine();
          }
        }
        _builder.append("for (int i = 0; i < files.length; i++) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("if (files[i].isFile() == true) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (files[i].getName().endsWith(\".model\") == true) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("if (fromNames.size() == 0) {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("String pathfile = files[i].getPath();");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("if (pathfile.endsWith(\".model\") == true) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("hashmapModelFilenames.put(pathfile, modelsURI + files[i].getName().substring(0, files[i].getName().length() - \".model\".length()));");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("seedModelFilenames.put(pathfile, files[i].getPath());");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("else {");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("for (String fromName : fromNames) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("String modelFolder = modelsURI + files[i].getName().substring(0, files[i].getName().length() - \".model\".length()) + \"/\" + fromName + \"/\";");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("File[] mutFiles = new File(modelFolder).listFiles();");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("if (mutFiles != null) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t");
        _builder.append("for (int j = 0; j < mutFiles.length; j++) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t");
        _builder.append("if (mutFiles[j].isFile() == true) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t");
        _builder.append("String pathfile = mutFiles[j].getPath();");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t");
        _builder.append("if (pathfile.endsWith(\".model\") == true) {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t\t");
        _builder.append("hashmapModelFilenames.put(pathfile, modelsURI + files[i].getName().substring(0, files[i].getName().length() - \".model\".length()));");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t\t");
        _builder.append("hashmapModelFolders.put(pathfile, fromName + \"/\" + mutFiles[j].getName().substring(0, mutFiles[j].getName().length() - \".model\".length()));");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t\t");
        _builder.append("seedModelFilenames.put(pathfile, files[i].getPath());");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t");
        _builder.append("else {");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t\t");
        _builder.append("generateModelPaths(fromName, mutFiles[j], mutFiles[j].getName(), hashmapModelFilenames, hashmapModelFolders, seedModelFilenames, modelsURI, files[i]);");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.newLine();
    {
      if ((e instanceof Program)) {
        _builder.newLine();
        _builder.append("//Load Model");
        _builder.newLine();
        _builder.append("Set<String> modelFilenames = hashmapModelFilenames.keySet();");
        _builder.newLine();
        _builder.append("for (String modelFilename : modelFilenames) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("String seedModelFilename = seedModelFilenames.get(modelFilename);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Set<String> hashsetMutantsBlock = null;");
        _builder.newLine();
        {
          Repeat _repeat = b.getRepeat();
          boolean _equals = Objects.equal(_repeat, Repeat.YES);
          if (_equals) {
            _builder.append("\t");
            _builder.append("hashsetMutantsBlock = new HashSet<String>();");
            _builder.newLine();
          } else {
            Repeat _repeat_1 = b.getRepeat();
            boolean _equals_1 = Objects.equal(_repeat_1, Repeat.NO);
            if (_equals_1) {
              _builder.append("\t");
              _builder.append("if (seedModelFilename != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("if (hashmapMutants.get(seedModelFilename) != null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t\t");
              _builder.append("hashsetMutantsBlock = hashmapMutants.get(seedModelFilename);");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("if (hashsetMutantsBlock == null) {");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("hashsetMutantsBlock = new HashSet<String>();");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
        _builder.append("\t");
        _builder.append("if (hashsetMutantsBlock.contains(seedModelFilename) == false) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("hashsetMutantsBlock.add(seedModelFilename);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public CharSequence method(final AttributeSet e, final boolean flag, final boolean isList, final int counter, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((isList == true)) {
        {
          EAttribute _get = e.getAttribute().get(0);
          boolean _tripleNotEquals = (_get != null);
          if (_tripleNotEquals) {
            final EAttribute attribute = e.getAttribute().get(0);
            _builder.newLineIfNotEmpty();
            {
              if ((counter > 1)) {
                _builder.append("List<AttributeConfigurationStrategy> atts = null;");
                _builder.newLine();
                _builder.append("if (attsList.get(\"");
                _builder.append(this.attributeName);
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("atts = attsList.get(\"");
                _builder.append(this.attributeName, "\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("}");
                _builder.newLine();
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t");
                _builder.append("atts = new ArrayList<AttributeConfigurationStrategy>();");
                _builder.newLine();
                _builder.append("}");
                _builder.newLine();
              } else {
                _builder.append("List<AttributeConfigurationStrategy> atts = new ArrayList<AttributeConfigurationStrategy>();");
                _builder.newLine();
              }
            }
            _builder.append("//NAME:");
            _builder.append(this.attributeName = attribute.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.attributeName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeScalar)) {
            _builder.append("atts.add(");
            CharSequence _method = this.method(((AttributeScalar)e).getValue(), flag, exhaustive);
            _builder.append(_method);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeUnset)) {
            _builder.append("atts.add(null);");
            _builder.newLine();
          }
        }
        {
          if ((e instanceof AttributeReverse)) {
            _builder.append("atts.add(new ReverseBooleanConfigurationStrategy(\"");
            _builder.append(this.attributeName);
            _builder.append("\"));");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeCopy)) {
            {
              ObSelectionStrategy _object = ((AttributeCopy)e).getObject();
              if ((_object instanceof RandomTypeSelection)) {
                _builder.append("atts.add(new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), \"");
                ObSelectionStrategy _object_1 = ((AttributeCopy)e).getObject();
                String _name = ((RandomTypeSelection) _object_1).getType().getName();
                _builder.append(_name);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\", \"");
                String _name_1 = ((AttributeCopy)e).getAttribute().get(1).getName();
                _builder.append(_name_1);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              ObSelectionStrategy _object_2 = ((AttributeCopy)e).getObject();
              if ((_object_2 instanceof SpecificObjectSelection)) {
                {
                  if ((exhaustive == false)) {
                    _builder.append("atts.add(new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), hmObjects.get(\"");
                    ObSelectionStrategy _object_3 = ((AttributeCopy)e).getObject();
                    String _name_2 = ((SpecificObjectSelection) _object_3).getObjSel().getName();
                    _builder.append(_name_2);
                    _builder.append("\").getKey(), \"");
                    _builder.append(this.attributeName);
                    _builder.append("\", \"");
                    String _name_3 = ((AttributeCopy)e).getAttribute().get(1).getName();
                    _builder.append(_name_3);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("atts.add(new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), hmObjects.get(\"");
                    ObSelectionStrategy _object_4 = ((AttributeCopy)e).getObject();
                    String _name_4 = ((SpecificObjectSelection) _object_4).getObjSel().getName();
                    _builder.append(_name_4);
                    _builder.append("\").getKey(), \"");
                    _builder.append(this.attributeName);
                    _builder.append("\", \"");
                    String _name_5 = ((AttributeCopy)e).getAttribute().get(1).getName();
                    _builder.append(_name_5);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
          }
        }
        _builder.append("attsList.put(\"");
        _builder.append(this.attributeName);
        _builder.append("\", atts);");
        _builder.newLineIfNotEmpty();
      } else {
        {
          EAttribute _get_1 = e.getAttribute().get(0);
          boolean _tripleNotEquals_1 = (_get_1 != null);
          if (_tripleNotEquals_1) {
            final EAttribute attribute_1 = e.getAttribute().get(0);
            _builder.newLineIfNotEmpty();
            _builder.append("//NAME:");
            _builder.append(this.attributeName = attribute_1.getName());
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.attributeName = "");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeScalar)) {
            _builder.append("atts.put(\"");
            _builder.append(this.attributeName);
            _builder.append("\", ");
            CharSequence _method_1 = this.method(((AttributeScalar)e).getValue(), flag, exhaustive);
            _builder.append(_method_1);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeUnset)) {
            _builder.append("   \t\t");
            _builder.append("atts.put(\"");
            _builder.append(this.attributeName, "   \t\t");
            _builder.append("\", null);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeReverse)) {
            _builder.append("   \t\t");
            _builder.append("atts.put(\"");
            _builder.append(this.attributeName, "   \t\t");
            _builder.append("\", new ReverseBooleanConfigurationStrategy(\"");
            _builder.append(this.attributeName, "   \t\t");
            _builder.append("\"));");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((e instanceof AttributeCopy)) {
            {
              ObSelectionStrategy _object_5 = ((AttributeCopy)e).getObject();
              if ((_object_5 instanceof RandomTypeSelection)) {
                _builder.append("atts.put(\"");
                _builder.append(this.attributeName);
                _builder.append("\", new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), \"");
                ObSelectionStrategy _object_6 = ((AttributeCopy)e).getObject();
                String _name_6 = ((RandomTypeSelection) _object_6).getType().getName();
                _builder.append(_name_6);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\", \"");
                String _name_7 = ((AttributeCopy)e).getAttribute().get(1).getName();
                _builder.append(_name_7);
                _builder.append("\"));");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              ObSelectionStrategy _object_7 = ((AttributeCopy)e).getObject();
              if ((_object_7 instanceof SpecificObjectSelection)) {
                {
                  if ((exhaustive == false)) {
                    _builder.append("atts.put(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\", new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), hmObjects.get(\"");
                    ObSelectionStrategy _object_8 = ((AttributeCopy)e).getObject();
                    String _name_8 = ((SpecificObjectSelection) _object_8).getObjSel().getName();
                    _builder.append(_name_8);
                    _builder.append("\").getKey(), \"");
                    _builder.append(this.attributeName);
                    _builder.append("\", \"");
                    String _name_9 = ((AttributeCopy)e).getAttribute().get(1).getName();
                    _builder.append(_name_9);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("atts.put(\"");
                    _builder.append(this.attributeName);
                    _builder.append("\", new CopyAttributeConfigurationStrategy((objectSelection != null ? objectSelection.getObject() : null), hmObjects.get(\"");
                    ObSelectionStrategy _object_9 = ((AttributeCopy)e).getObject();
                    String _name_10 = ((SpecificObjectSelection) _object_9).getObjSel().getName();
                    _builder.append(_name_10);
                    _builder.append("\").getKey(), \"");
                    _builder.append(this.attributeName);
                    _builder.append("\", \"");
                    String _name_11 = ((AttributeCopy)e).getAttribute().get(1).getName();
                    _builder.append(_name_11);
                    _builder.append("\"));");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final ReferenceSet e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      EReference _get = e.getReference().get(0);
      boolean _tripleNotEquals = (_get != null);
      if (_tripleNotEquals) {
        final EReference reference = e.getReference().get(0);
        _builder.newLineIfNotEmpty();
        _builder.append("//NAME:");
        _builder.append(this.referenceName = reference.getName());
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("//NAME:");
        _builder.append(this.referenceName = "");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      if ((((e instanceof ReferenceInit) || (e instanceof ReferenceRemove)) || (e instanceof ReferenceAdd))) {
        CharSequence _method = this.method(e.getObject(), this.referenceName, exhaustive);
        _builder.append(_method);
        _builder.newLineIfNotEmpty();
        _builder.append("   \t\t");
        _builder.append("refs.put(\"");
        _builder.append(this.referenceName, "   \t\t");
        _builder.append("\", refSelection");
        _builder.append(this.nReference, "   \t\t");
        _builder.append(");");
        _builder.newLineIfNotEmpty();
      }
    }
    return _builder;
  }
  
  public CharSequence method(final AttributeType e, final boolean flag, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof StringType)) {
        CharSequence _method = this.method(((StringType) e), exhaustive);
        _builder.append(_method);
        _builder.newLineIfNotEmpty();
      } else {
        if ((e instanceof DoubleType)) {
          CharSequence _method_1 = this.method(((DoubleType) e), exhaustive);
          _builder.append(_method_1);
          _builder.newLineIfNotEmpty();
        } else {
          if ((e instanceof BooleanType)) {
            CharSequence _method_2 = this.method(((BooleanType) e), exhaustive);
            _builder.append(_method_2);
            _builder.newLineIfNotEmpty();
          } else {
            if ((e instanceof IntegerType)) {
              CharSequence _method_3 = this.method(((IntegerType) e), exhaustive);
              _builder.append(_method_3);
              _builder.newLineIfNotEmpty();
            } else {
              if ((e instanceof ListStringType)) {
                CharSequence _method_4 = this.method(((ListStringType) e), flag, exhaustive);
                _builder.append(_method_4);
                _builder.newLineIfNotEmpty();
              } else {
                if ((e instanceof ListType)) {
                  CharSequence _method_5 = this.method(((ListType) e), flag, exhaustive);
                  _builder.append(_method_5);
                  _builder.newLineIfNotEmpty();
                } else {
                  if ((e instanceof RandomType)) {
                    CharSequence _method_6 = this.method(((RandomType) e), flag, exhaustive);
                    _builder.append(_method_6);
                    _builder.newLineIfNotEmpty();
                  } else {
                    if ((e instanceof MinValueType)) {
                      CharSequence _method_7 = this.method(((MinValueType) e), exhaustive);
                      _builder.append(_method_7);
                      _builder.newLineIfNotEmpty();
                    } else {
                      if ((e instanceof MaxValueType)) {
                        CharSequence _method_8 = this.method(((MaxValueType) e), exhaustive);
                        _builder.append(_method_8);
                        _builder.newLineIfNotEmpty();
                      } else {
                        if ((e instanceof RandomIntegerNumberType)) {
                          CharSequence _method_9 = this.method(((RandomIntegerNumberType) e), exhaustive);
                          _builder.append(_method_9);
                          _builder.newLineIfNotEmpty();
                        } else {
                          if ((e instanceof RandomDoubleNumberType)) {
                            CharSequence _method_10 = this.method(((RandomDoubleNumberType) e), exhaustive);
                            _builder.append(_method_10);
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final StringType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof SpecificStringType)) {
        _builder.append("new SpecificStringConfigurationStrategy(\"");
        String _value = ((SpecificStringType) e).getValue();
        _builder.append(_value);
        _builder.append("\")");
        _builder.newLineIfNotEmpty();
      } else {
        if ((e instanceof RandomStringType)) {
          _builder.append("\t\t    ");
          RandomStringType r = ((RandomStringType) e);
          _builder.newLineIfNotEmpty();
          _builder.append("new RandomStringConfigurationStrategy(");
          int _min = r.getMin();
          _builder.append(_min);
          _builder.append(", ");
          int _max = r.getMax();
          _builder.append(_max);
          _builder.append(", false)");
          _builder.newLineIfNotEmpty();
        } else {
          if ((e instanceof UpperStringType)) {
            {
              boolean _equals = this.attributeName.equals("");
              boolean _not = (!_equals);
              if (_not) {
                _builder.append("new UpperStringConfigurationStrategy(\"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("null");
                _builder.newLine();
              }
            }
          } else {
            if ((e instanceof LowerStringType)) {
              {
                boolean _equals_1 = this.attributeName.equals("");
                boolean _not_1 = (!_equals_1);
                if (_not_1) {
                  _builder.append("new LowerStringConfigurationStrategy(\"");
                  _builder.append(this.attributeName);
                  _builder.append("\")");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("null");
                  _builder.newLine();
                }
              }
            } else {
              if ((e instanceof CatStartStringType)) {
                {
                  boolean _equals_2 = this.attributeName.equals("");
                  boolean _not_2 = (!_equals_2);
                  if (_not_2) {
                    _builder.append("new CatStartStringConfigurationStrategy(\"");
                    String _value_1 = ((CatStartStringType) e).getValue();
                    _builder.append(_value_1);
                    _builder.append("\", \"");
                    _builder.append(this.attributeName);
                    _builder.append("\")");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("null");
                    _builder.newLine();
                  }
                }
              } else {
                if ((e instanceof CatEndStringType)) {
                  {
                    boolean _equals_3 = this.attributeName.equals("");
                    boolean _not_3 = (!_equals_3);
                    if (_not_3) {
                      _builder.append("new CatEndStringConfigurationStrategy(\"");
                      String _value_2 = ((CatEndStringType) e).getValue();
                      _builder.append(_value_2);
                      _builder.append("\", \"");
                      _builder.append(this.attributeName);
                      _builder.append("\")");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("null");
                      _builder.newLine();
                    }
                  }
                } else {
                  if ((e instanceof ReplaceStringType)) {
                    {
                      boolean _equals_4 = this.attributeName.equals("");
                      boolean _not_4 = (!_equals_4);
                      if (_not_4) {
                        _builder.append("new ReplaceStringConfigurationStrategy(\"");
                        _builder.append(this.attributeName);
                        _builder.append("\", \"");
                        String _oldstring = ((ReplaceStringType) e).getOldstring();
                        _builder.append(_oldstring);
                        _builder.append("\", \"");
                        String _newstring = ((ReplaceStringType) e).getNewstring();
                        _builder.append(_newstring);
                        _builder.append("\")");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("null");
                        _builder.newLine();
                      }
                    }
                  } else {
                    if ((e instanceof RandomStringNumberType)) {
                      _builder.append("\t\t    ");
                      RandomStringNumberType r_1 = ((RandomStringNumberType) e);
                      _builder.newLineIfNotEmpty();
                      _builder.append("new RandomStringNumberConfigurationStrategy(");
                      int _min_1 = r_1.getMin();
                      _builder.append(_min_1);
                      _builder.append(", ");
                      int _max_1 = r_1.getMax();
                      _builder.append(_max_1);
                      _builder.append(", false)");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final DoubleType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof SpecificDoubleType)) {
        _builder.append("new SpecificDoubleConfigurationStrategy(");
        double _value = ((SpecificDoubleType) e).getValue();
        _builder.append(_value);
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        if ((e instanceof RandomDoubleType)) {
          RandomDoubleType r = ((RandomDoubleType) e);
          _builder.newLineIfNotEmpty();
          _builder.append("new RandomDoubleConfigurationStrategy(");
          double _min = r.getMin();
          _builder.append(_min);
          _builder.append(", ");
          double _max = r.getMax();
          _builder.append(_max);
          _builder.append(", false)");
          _builder.newLineIfNotEmpty();
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final BooleanType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof SpecificBooleanType)) {
        _builder.append("new SpecificBooleanConfigurationStrategy(");
        boolean _isValue = ((SpecificBooleanType) e).isValue();
        _builder.append(_isValue);
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        if ((e instanceof RandomBooleanType)) {
          _builder.append("new RandomBooleanConfigurationStrategy()");
          _builder.newLine();
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final IntegerType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof SpecificIntegerType)) {
        _builder.append("new SpecificIntegerConfigurationStrategy(");
        int _value = ((SpecificIntegerType) e).getValue();
        _builder.append(_value);
        _builder.append(")");
        _builder.newLineIfNotEmpty();
      } else {
        if ((e instanceof RandomIntegerType)) {
          RandomIntegerType r = ((RandomIntegerType) e);
          _builder.newLineIfNotEmpty();
          _builder.append("new RandomIntegerConfigurationStrategy(");
          int _min = r.getMin();
          _builder.append(_min);
          _builder.append(", ");
          int _max = r.getMax();
          _builder.append(_max);
          _builder.append(", false)\t\t");
          _builder.newLineIfNotEmpty();
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final ListStringType e, final boolean flag, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof ListStringType)) {
        {
          boolean _equals = this.attributeName.equals("");
          boolean _not = (!_equals);
          if (_not) {
            {
              if ((flag == false)) {
                _builder.append("new ListStringConfigurationStrategy((String) ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", (objectSelection != null) ? objectSelection.getObject() : null), \"");
                EList<String> _value = ((ListStringType) e).getValue();
                _builder.append(_value);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("new ListStringConfigurationStrategy((String) ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", refObjectSelected), \"");
                EList<String> _value_1 = ((ListStringType) e).getValue();
                _builder.append(_value_1);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            _builder.append("null");
            _builder.newLine();
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final ListType e, final boolean flag, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof ListType)) {
        {
          boolean _equals = this.attributeName.equals("");
          boolean _not = (!_equals);
          if (_not) {
            {
              if ((flag == false)) {
                _builder.append("new ListConfigurationStrategy((EObject) ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", (objectSelection != null) ? objectSelection.getObject() : null), \"");
                EList<EObject> _value = ((ListType) e).getValue();
                _builder.append(_value);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("new ListConfigurationStrategy((EObject) ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", refObjectSelected), \"");
                EList<EObject> _value_1 = ((ListType) e).getValue();
                _builder.append(_value_1);
                _builder.append("\", \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            _builder.append("null");
            _builder.newLine();
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final RandomType e, final boolean flag, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof RandomType)) {
        {
          boolean _equals = this.attributeName.equals("");
          boolean _not = (!_equals);
          if (_not) {
            {
              if ((flag == false)) {
                _builder.append("new RandomConfigurationStrategy(ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", objectSelection.getObject()), \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("new RandomConfigurationStrategy(ModelManager.getAttribute(\"");
                _builder.append(this.attributeName);
                _builder.append("\", refObjectSelected), \"");
                _builder.append(this.attributeName);
                _builder.append("\")");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            _builder.append("null");
            _builder.newLine();
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final MinValueType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("new MinValueConfigurationStrategy(packages, model, \"");
    String _typeName = MutatorUtils.getTypeName(e);
    _builder.append(_typeName);
    _builder.append("\", \"");
    String _name = e.getAttribute().getName();
    _builder.append(_name);
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence method(final MaxValueType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("new MaxValueConfigurationStrategy(packages, model, \"");
    String _typeName = MutatorUtils.getTypeName(e);
    _builder.append(_typeName);
    _builder.append("\", \"");
    String _name = e.getAttribute().getName();
    _builder.append(_name);
    _builder.append("\")");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence method(final RandomIntegerNumberType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      ObSelectionStrategy _object = e.getObject();
      if ((_object instanceof SpecificObjectSelection)) {
        _builder.append("//");
        ObSelectionStrategy _object_1 = e.getObject();
        SpecificObjectSelection sel = ((SpecificObjectSelection) _object_1);
        _builder.newLineIfNotEmpty();
        {
          if ((exhaustive == false)) {
            _builder.append("new RandomIntegerConfigurationStrategy(");
            int _min = e.getMin();
            _builder.append(_min);
            _builder.append(", ModelManager.getIntAttribute(\"");
            String _name = e.getMax().getName();
            _builder.append(_name);
            _builder.append("\", hmObjects.get(\"");
            String _name_1 = sel.getObjSel().getName();
            _builder.append(_name_1);
            _builder.append("\").getKey()), false)");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("new RandomIntegerConfigurationStrategy(");
            int _min_1 = e.getMin();
            _builder.append(_min_1);
            _builder.append(", ModelManager.getIntAttribute(\"");
            String _name_2 = e.getMax().getName();
            _builder.append(_name_2);
            _builder.append("\", hmObjects.get(\"");
            String _name_3 = sel.getObjSel().getName();
            _builder.append(_name_3);
            _builder.append("\").getKey()), false)");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    return _builder;
  }
  
  public CharSequence method(final RandomDoubleNumberType e, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    {
      ObSelectionStrategy _object = e.getObject();
      if ((_object instanceof SpecificObjectSelection)) {
        _builder.append("//");
        ObSelectionStrategy _object_1 = e.getObject();
        SpecificObjectSelection sel = ((SpecificObjectSelection) _object_1);
        _builder.newLineIfNotEmpty();
        _builder.append("new RandomDoubleConfigurationStrategy(");
        double _min = e.getMin();
        _builder.append(_min);
        _builder.append(", ModelManager.getDoubleAttribute(\"");
        String _name = e.getMax().getName();
        _builder.append(_name);
        _builder.append("\", hmObjects.get(\"");
        String _name_1 = sel.getObjSel().getName();
        _builder.append(_name_1);
        _builder.append("\").getKey()), false)");
        _builder.newLineIfNotEmpty();
      }
    }
    return _builder;
  }
  
  public CharSequence add(final AttributeOperation op) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("atts.add(new AddOperationConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
    String _typeName = MutatorUtils.getTypeName(op);
    _builder.append(_typeName);
    _builder.append("\", \"");
    _builder.append(this.attributeName);
    _builder.append("\", objectSelection.getObject(), value));");
    _builder.newLineIfNotEmpty();
    _builder.append("attsList.put(\"");
    _builder.append(this.attributeName);
    _builder.append("\", atts); ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence subtract(final AttributeOperation op) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("atts.add(new SubtractOperationConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
    String _typeName = MutatorUtils.getTypeName(op);
    _builder.append(_typeName);
    _builder.append("\", \"");
    _builder.append(this.attributeName);
    _builder.append("\", objectSelection.getObject(), value));");
    _builder.newLineIfNotEmpty();
    _builder.append("attsList.put(\"");
    _builder.append(this.attributeName);
    _builder.append("\", atts); ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence multiply(final AttributeOperation op) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("atts.add(new MultiplyOperationConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
    String _typeName = MutatorUtils.getTypeName(op);
    _builder.append(_typeName);
    _builder.append("\", \"");
    _builder.append(this.attributeName);
    _builder.append("\", objectSelection.getObject(), value));");
    _builder.newLineIfNotEmpty();
    _builder.append("attsList.put(\"");
    _builder.append(this.attributeName);
    _builder.append("\", atts); ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence divide(final AttributeOperation op) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("atts.add(new DivideOperationConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
    String _typeName = MutatorUtils.getTypeName(op);
    _builder.append(_typeName);
    _builder.append("\", \"");
    _builder.append(this.attributeName);
    _builder.append("\", objectSelection.getObject(), value));");
    _builder.newLineIfNotEmpty();
    _builder.append("attsList.put(\"");
    _builder.append(this.attributeName);
    _builder.append("\", atts); ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence module(final AttributeOperation op) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("atts.add(new ModuleOperationConfigurationStrategy(objectSelection.getMetaModel(), objectSelection.getModel(), \"");
    String _typeName = MutatorUtils.getTypeName(op);
    _builder.append(_typeName);
    _builder.append("\", \"");
    _builder.append(this.attributeName);
    _builder.append("\", objectSelection.getObject(), value));");
    _builder.newLineIfNotEmpty();
    _builder.append("attsList.put(\"");
    _builder.append(this.attributeName);
    _builder.append("\", atts); ");
    _builder.newLineIfNotEmpty();
    return _builder;
  }
  
  public CharSequence method(final ObSelectionStrategy e, final String referenceName, final boolean exhaustive) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("  \t\t");
    _builder.append("//REFERENCES COMPILES\t");
    _builder.append(this.nReference = (this.nReference + 1), "  \t\t");
    _builder.newLineIfNotEmpty();
    {
      if ((e instanceof RandomTypeSelection)) {
        _builder.append("RandomTypeSelection refRts");
        _builder.append(this.nReference);
        _builder.append(" = new RandomTypeSelection(packages, model, \"");
        String _name = ((RandomTypeSelection) e).getType().getName();
        _builder.append(_name);
        _builder.append("\");");
        _builder.newLineIfNotEmpty();
        {
          if (((((RandomTypeSelection)e).getExpression() != null) && (this.expressionList != null))) {
            _builder.append("List<EObject> refObjects");
            _builder.append(this.nReference);
            _builder.append(" = refRts");
            _builder.append(this.nReference);
            _builder.append(".getObjects();");
            _builder.newLineIfNotEmpty();
            _builder.append("//INDEX EXPRESSION: ");
            int _size = this.expressionList.size();
            int indexExpression = (_size - 1);
            _builder.newLineIfNotEmpty();
            _builder.append("Expression exp");
            Integer _get = this.expressionList.get(indexExpression);
            _builder.append(_get);
            _builder.append(" = new Expression();");
            _builder.newLineIfNotEmpty();
            _builder.append("\t   \t\t");
            Object _method = this.method(((RandomTypeSelection)e).getExpression(), 0);
            _builder.append(_method, "\t   \t\t");
            _builder.newLineIfNotEmpty();
            _builder.append("\t   \t\t");
            _builder.append("List<EObject> refSelectedObjects");
            _builder.append(this.nReference, "\t   \t\t");
            _builder.append(" = evaluate(refObjects");
            _builder.append(this.nReference, "\t   \t\t");
            _builder.append(", exp");
            Integer _get_1 = this.expressionList.get(indexExpression);
            _builder.append(_get_1, "\t   \t\t");
            _builder.append(");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject refObject");
            _builder.append(this.nReference);
            _builder.append(" = null;");
            _builder.newLineIfNotEmpty();
            _builder.append("if (refSelectedObjects");
            _builder.append(this.nReference);
            _builder.append(".size() > 0) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("refObject");
            _builder.append(this.nReference, "\t");
            _builder.append(" = refSelectedObjects");
            _builder.append(this.nReference, "\t");
            _builder.append(".get(ModelManager.getRandomIndex(refSelectedObjects");
            _builder.append(this.nReference, "\t");
            _builder.append("));");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
          } else {
            _builder.append("EObject refObject");
            _builder.append(this.nReference);
            _builder.append(" = refRts");
            _builder.append(this.nReference);
            _builder.append(".getObject();");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("ObSelectionStrategy refSelection");
        _builder.append(this.nReference);
        _builder.append(" = null;");
        _builder.newLineIfNotEmpty();
        _builder.append("if (refObject");
        _builder.append(this.nReference);
        _builder.append(" != null) {");
        _builder.newLineIfNotEmpty();
        _builder.append("refSelection");
        _builder.append(this.nReference);
        _builder.append(" = ");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("new SpecificObjectSelection(packages, model, refObject");
        _builder.append(this.nReference, "\t");
        _builder.append(");");
        _builder.newLineIfNotEmpty();
        _builder.append("}");
        _builder.newLine();
      } else {
        if ((e instanceof OtherTypeSelection)) {
          _builder.append("OtherTypeSelection refOts");
          _builder.append(this.nReference);
          _builder.append(" = new OtherTypeSelection(packages, model, \"");
          String _name_1 = ((OtherTypeSelection) e).getType().getName();
          _builder.append(_name_1);
          _builder.append("\", ModelManager.getReference(\"");
          _builder.append(referenceName);
          _builder.append("\", objectSelection.getObject()));");
          _builder.newLineIfNotEmpty();
          {
            if (((e.getExpression() != null) && (this.expressionList != null))) {
              _builder.append("List<EObject> refObjects");
              _builder.append(this.nReference);
              _builder.append(" = refOts");
              _builder.append(this.nReference);
              _builder.append(".getObjects();");
              _builder.newLineIfNotEmpty();
              _builder.append("//INDEX EXPRESSION: ");
              int _size_1 = this.expressionList.size();
              int indexExpression_1 = (_size_1 - 1);
              _builder.newLineIfNotEmpty();
              _builder.append("Expression exp");
              Integer _get_2 = this.expressionList.get(indexExpression_1);
              _builder.append(_get_2);
              _builder.append(" = new Expression();");
              _builder.newLineIfNotEmpty();
              _builder.append("\t   \t\t");
              Object _method_1 = this.method(e.getExpression(), 0);
              _builder.append(_method_1, "\t   \t\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t   \t\t");
              _builder.append("List<EObject> refSelectedObjects");
              _builder.append(this.nReference, "\t   \t\t");
              _builder.append(" = evaluate(refObjects");
              _builder.append(this.nReference, "\t   \t\t");
              _builder.append(", exp");
              Integer _get_3 = this.expressionList.get(indexExpression_1);
              _builder.append(_get_3, "\t   \t\t");
              _builder.append(");");
              _builder.newLineIfNotEmpty();
              _builder.append("EObject refObject");
              _builder.append(this.nReference);
              _builder.append(" = null;");
              _builder.newLineIfNotEmpty();
              _builder.append("if (refSelectedObjects");
              _builder.append(this.nReference);
              _builder.append(".size() > 0) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("refObject");
              _builder.append(this.nReference, "\t");
              _builder.append(" = refSelectedObjects");
              _builder.append(this.nReference, "\t");
              _builder.append(".get(ModelManager.getRandomIndex(refSelectedObjects");
              _builder.append(this.nReference, "\t");
              _builder.append("));");
              _builder.newLineIfNotEmpty();
              _builder.append("}");
              _builder.newLine();
            } else {
              _builder.append("EObject refObject");
              _builder.append(this.nReference);
              _builder.append(" = refOts");
              _builder.append(this.nReference);
              _builder.append(".getObject();");
              _builder.newLineIfNotEmpty();
            }
          }
          _builder.append("ObSelectionStrategy refSelection");
          _builder.append(this.nReference);
          _builder.append(" = null;");
          _builder.newLineIfNotEmpty();
          _builder.append("if (refObject");
          _builder.append(this.nReference);
          _builder.append(" != null) {");
          _builder.newLineIfNotEmpty();
          _builder.append("refSelection");
          _builder.append(this.nReference);
          _builder.append(" = new SpecificObjectSelection(packages, model, refObject");
          _builder.append(this.nReference);
          _builder.append(");");
          _builder.newLineIfNotEmpty();
          _builder.append("}");
          _builder.newLine();
          _builder.append("\t    ");
          _builder.newLine();
        } else {
          if ((e instanceof CompleteTypeSelection)) {
            _builder.append("RandomTypeSelection refRts");
            _builder.append(this.nReference);
            _builder.append(" = new RandomTypeSelection(packages, model, \"");
            String _name_2 = ((CompleteTypeSelection) e).getType().getName();
            _builder.append(_name_2);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("EObject refObject");
            _builder.append(this.nReference);
            _builder.append(" = refRts");
            _builder.append(this.nReference);
            _builder.append(".getObject();");
            _builder.newLineIfNotEmpty();
            _builder.append("ObSelectionStrategy refSelection");
            _builder.append(this.nReference);
            _builder.append(" = new SpecificObjectSelection(packages, model,\trefObject");
            _builder.append(this.nReference);
            _builder.append(");");
            _builder.newLineIfNotEmpty();
          } else {
            if ((e instanceof SpecificObjectSelection)) {
              _builder.append("ObSelectionStrategy refSelection");
              _builder.append(this.nReference);
              _builder.append(" = null;");
              _builder.newLineIfNotEmpty();
              {
                if ((exhaustive == false)) {
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  String _name_3 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_3);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(" = hmObjects.get(\"");
                  String _name_4 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_4);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  String _name_5 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_5);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(" = hmObjects.get(\"");
                  String _name_6 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_6);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("if (entry_");
              String _name_7 = ((SpecificObjectSelection) e).getObjSel().getName();
              _builder.append(_name_7);
              _builder.append("_");
              _builder.append(this.nReference);
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              {
                EReference _refType = e.getRefType();
                boolean _tripleNotEquals = (_refType != null);
                if (_tripleNotEquals) {
                  _builder.append("refSelection");
                  _builder.append(this.nReference);
                  _builder.append(" = new SpecificObjectSelection(packages, model, entry_");
                  String _name_8 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_8);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(".getKey(), \"");
                  String _name_9 = e.getRefType().getName();
                  _builder.append(_name_9);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("refSelection");
                  _builder.append(this.nReference);
                  _builder.append(" = new SpecificObjectSelection(packages, model, entry_");
                  String _name_10 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_10);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(".getKey());");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("} else {");
              _builder.newLine();
              {
                if ((exhaustive == false)) {
                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                  String _name_11 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_11);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(" = hmList.get(\"");
                  String _name_12 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_12);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEntry_");
                  String _name_13 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_13);
                  _builder.append("_");
                  _builder.append(this.nReference);
                  _builder.append(" = hmList.get(\"");
                  String _name_14 = ((SpecificObjectSelection) e).getObjSel().getName();
                  _builder.append(_name_14);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t");
              _builder.append("if (listEntry_");
              String _name_15 = ((SpecificObjectSelection) e).getObjSel().getName();
              _builder.append(_name_15, "\t");
              _builder.append("_");
              _builder.append(this.nReference, "\t");
              _builder.append(" != null) {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t");
              _builder.append("List<EObject> objs = new ArrayList<EObject>();");
              _builder.newLine();
              _builder.append("\t\t");
              _builder.append("for (SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> ent : listEntry_");
              String _name_16 = ((SpecificObjectSelection) e).getObjSel().getName();
              _builder.append(_name_16, "\t\t");
              _builder.append("_");
              _builder.append(this.nReference, "\t\t");
              _builder.append(") {");
              _builder.newLineIfNotEmpty();
              _builder.append("\t\t\t");
              _builder.append("EObject obj = ModelManager.getObject(model, ent.getKey());");
              _builder.newLine();
              _builder.append("\t\t\t");
              _builder.append("objs.add(obj);");
              _builder.newLine();
              _builder.append("\t\t");
              _builder.append("}");
              _builder.newLine();
              {
                EReference _refType_1 = e.getRefType();
                boolean _tripleNotEquals_1 = (_refType_1 != null);
                if (_tripleNotEquals_1) {
                  _builder.append("\t");
                  _builder.append("refSelection");
                  _builder.append(this.nReference, "\t");
                  _builder.append(" = new SpecificObjectSelection(packages, model, objs, \"");
                  String _name_17 = e.getRefType().getName();
                  _builder.append(_name_17, "\t");
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  _builder.append("refSelection");
                  _builder.append(this.nReference, "\t");
                  _builder.append(" = new SpecificObjectSelection(packages, model, objs);");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("else {");
              _builder.newLine();
              {
                if ((exhaustive == false)) {
                  _builder.append("\t\t");
                  _builder.append("return mutations;");
                  _builder.newLine();
                } else {
                  _builder.append("\t\t");
                  _builder.append("return numMutantsGenerated;");
                  _builder.newLine();
                }
              }
              _builder.append("\t");
              _builder.append("}");
              _builder.newLine();
              _builder.append("}");
              _builder.newLine();
            }
          }
        }
      }
    }
    return _builder;
  }
  
  public Object method(final Expression exp, final int recursionIndexExpression) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("  \t\t");
    _builder.append("//INDEX EXPRESSION: ");
    int _size = this.expressionList.size();
    final int indexExpression = (_size - 1);
    _builder.newLineIfNotEmpty();
    {
      Evaluation _first = exp.getFirst();
      if ((_first instanceof AttributeEvaluation)) {
        {
          Evaluation _first_1 = exp.getFirst();
          AttributeEvaluationType _value = ((AttributeEvaluation) _first_1).getValue();
          if ((_value instanceof ObjectAttributeType)) {
            _builder.append("  \t\t");
            _builder.append("exp");
            Integer _get = this.expressionList.get(indexExpression);
            _builder.append(_get, "  \t\t");
            _builder.append(".first = new AttributeEvaluation();");
            _builder.newLineIfNotEmpty();
            _builder.append("  \t\t");
            _builder.append("//ATTRIBUTE: ");
            Evaluation _first_2 = exp.getFirst();
            final AttributeEvaluation attev = ((AttributeEvaluation) _first_2);
            _builder.newLineIfNotEmpty();
            _builder.append("  \t\t");
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_1 = this.expressionList.get(indexExpression);
            _builder.append(_get_1, "  \t\t");
            _builder.append(".first).name = \"");
            String _name = attev.getName().getName();
            _builder.append(_name, "  \t\t");
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            _builder.append("  \t\t");
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_2 = this.expressionList.get(indexExpression);
            _builder.append(_get_2, "  \t\t");
            _builder.append(".first).operator = \"");
            AttributeEvaluationType _value_1 = attev.getValue();
            Operator _operator = ((ObjectAttributeType) _value_1).getOperator();
            _builder.append(_operator, "  \t\t");
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            _builder.append("  \t\t");
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_3 = this.expressionList.get(indexExpression);
            _builder.append(_get_3, "  \t\t");
            _builder.append(".first).values = new ArrayList<String>();");
            _builder.newLineIfNotEmpty();
            _builder.append("  \t\t");
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_4 = this.expressionList.get(indexExpression);
            _builder.append(_get_4, "  \t\t");
            _builder.append(".first).values.add(ModelManager.getStringAttribute(\"");
            AttributeEvaluationType _value_2 = attev.getValue();
            String _name_1 = ((ObjectAttributeType) _value_2).getAttribute().getName();
            _builder.append(_name_1, "  \t\t");
            _builder.append("\", hmObjects.get(\"");
            AttributeEvaluationType _value_3 = attev.getValue();
            String _name_2 = ((ObjectAttributeType) _value_3).getObjSel().getName();
            _builder.append(_name_2, "  \t\t");
            _builder.append("\").getKey()));");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          Evaluation _first_3 = exp.getFirst();
          AttributeEvaluationType _value_4 = ((AttributeEvaluation) _first_3).getValue();
          if ((_value_4 instanceof AttributeType)) {
            _builder.append("exp");
            Integer _get_5 = this.expressionList.get(indexExpression);
            _builder.append(_get_5);
            _builder.append(".first = new AttributeEvaluation();");
            _builder.newLineIfNotEmpty();
            _builder.append("//ATTRIBUTE: ");
            Evaluation _first_4 = exp.getFirst();
            final AttributeEvaluation attev_1 = ((AttributeEvaluation) _first_4);
            _builder.newLineIfNotEmpty();
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_6 = this.expressionList.get(indexExpression);
            _builder.append(_get_6);
            _builder.append(".first).name = \"");
            String _name_3 = attev_1.getName().getName();
            _builder.append(_name_3);
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_7 = this.expressionList.get(indexExpression);
            _builder.append(_get_7);
            _builder.append(".first).operator = \"");
            AttributeEvaluationType _value_5 = attev_1.getValue();
            Operator _operator_1 = ((AttributeType) _value_5).getOperator();
            _builder.append(_operator_1);
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            _builder.append("((AttributeEvaluation) exp");
            Integer _get_8 = this.expressionList.get(indexExpression);
            _builder.append(_get_8);
            _builder.append(".first).values = new ArrayList<String>();");
            _builder.newLineIfNotEmpty();
            {
              AttributeEvaluationType _value_6 = attev_1.getValue();
              if ((_value_6 instanceof StringType)) {
                _builder.append("   \t\t");
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_9 = this.expressionList.get(indexExpression);
                _builder.append(_get_9, "   \t\t");
                _builder.append(".first).values.add(\"");
                AttributeEvaluationType _value_7 = attev_1.getValue();
                String _value_8 = ((SpecificStringType) _value_7).getValue();
                _builder.append(_value_8, "   \t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("   \t\t");
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_10 = this.expressionList.get(indexExpression);
                _builder.append(_get_10, "   \t\t");
                _builder.append(".first).type = \"String\";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_9 = attev_1.getValue();
              if ((_value_9 instanceof DoubleType)) {
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_11 = this.expressionList.get(indexExpression);
                _builder.append(_get_11);
                _builder.append(".first).values.add(\"");
                AttributeEvaluationType _value_10 = attev_1.getValue();
                double _value_11 = ((SpecificDoubleType) _value_10).getValue();
                _builder.append(_value_11);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_12 = this.expressionList.get(indexExpression);
                _builder.append(_get_12);
                _builder.append(".first).type = \"double\";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_12 = attev_1.getValue();
              if ((_value_12 instanceof BooleanType)) {
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_13 = this.expressionList.get(indexExpression);
                _builder.append(_get_13);
                _builder.append(".first).values.add(\"");
                AttributeEvaluationType _value_13 = attev_1.getValue();
                boolean _isValue = ((SpecificBooleanType) _value_13).isValue();
                _builder.append(_isValue);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_14 = this.expressionList.get(indexExpression);
                _builder.append(_get_14);
                _builder.append(".first).type = \"Boolean\";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_14 = attev_1.getValue();
              if ((_value_14 instanceof IntegerType)) {
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_15 = this.expressionList.get(indexExpression);
                _builder.append(_get_15);
                _builder.append(".first).values.add(\"");
                AttributeEvaluationType _value_15 = attev_1.getValue();
                int _value_16 = ((SpecificIntegerType) _value_15).getValue();
                _builder.append(_value_16);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_16 = this.expressionList.get(indexExpression);
                _builder.append(_get_16);
                _builder.append(".first).type = \"int\";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_17 = attev_1.getValue();
              if ((_value_17 instanceof MinValueType)) {
                _builder.append("MinValueConfigurationStrategy min");
                Integer _get_17 = this.expressionList.get(indexExpression);
                _builder.append(_get_17);
                _builder.append(" = new MinValueConfigurationStrategy(packages, model, \"");
                AttributeEvaluationType _value_18 = attev_1.getValue();
                String _typeName = MutatorUtils.getTypeName(((MinValueType) _value_18));
                _builder.append(_typeName);
                _builder.append("\", \"");
                AttributeEvaluationType _value_19 = attev_1.getValue();
                String _name_4 = ((MinValueType) _value_19).getAttribute().getName();
                _builder.append(_name_4);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_18 = this.expressionList.get(indexExpression);
                _builder.append(_get_18);
                _builder.append(".first).values.add(min");
                Integer _get_19 = this.expressionList.get(indexExpression);
                _builder.append(_get_19);
                _builder.append(".getValue().toString());");
                _builder.newLineIfNotEmpty();
                {
                  AttributeEvaluationType _value_20 = attev_1.getValue();
                  boolean _equals = ((MinValueType) _value_20).getAttribute().getEType().getName().equals("EInt");
                  if (_equals) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_20 = this.expressionList.get(indexExpression);
                    _builder.append(_get_20);
                    _builder.append(".first).type = \"int\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_21 = attev_1.getValue();
                  boolean _equals_1 = ((MinValueType) _value_21).getAttribute().getEType().getName().equals("EDouble");
                  if (_equals_1) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_21 = this.expressionList.get(indexExpression);
                    _builder.append(_get_21);
                    _builder.append(".first).type = \"double\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              AttributeEvaluationType _value_22 = attev_1.getValue();
              if ((_value_22 instanceof MaxValueType)) {
                _builder.append("MaxValueConfigurationStrategy max");
                Integer _get_22 = this.expressionList.get(indexExpression);
                _builder.append(_get_22);
                _builder.append(" = new MaxValueConfigurationStrategy(packages, model, \"");
                AttributeEvaluationType _value_23 = attev_1.getValue();
                String _typeName_1 = MutatorUtils.getTypeName(((MaxValueType) _value_23));
                _builder.append(_typeName_1);
                _builder.append("\", \"");
                AttributeEvaluationType _value_24 = attev_1.getValue();
                String _name_5 = ((MaxValueType) _value_24).getAttribute().getName();
                _builder.append(_name_5);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_23 = this.expressionList.get(indexExpression);
                _builder.append(_get_23);
                _builder.append(".first).values.add(max");
                Integer _get_24 = this.expressionList.get(indexExpression);
                _builder.append(_get_24);
                _builder.append(".getValue().toString());");
                _builder.newLineIfNotEmpty();
                {
                  AttributeEvaluationType _value_25 = attev_1.getValue();
                  boolean _equals_2 = ((MaxValueType) _value_25).getAttribute().getEType().getName().equals("EInt");
                  if (_equals_2) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_25 = this.expressionList.get(indexExpression);
                    _builder.append(_get_25);
                    _builder.append(".first).type = \"int\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_26 = attev_1.getValue();
                  boolean _equals_3 = ((MaxValueType) _value_26).getAttribute().getEType().getName().equals("EDouble");
                  if (_equals_3) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_26 = this.expressionList.get(indexExpression);
                    _builder.append(_get_26);
                    _builder.append(".first).type = \"double\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              AttributeEvaluationType _value_27 = attev_1.getValue();
              if ((_value_27 instanceof ListStringType)) {
                _builder.append("//");
                AttributeEvaluationType _value_28 = attev_1.getValue();
                final ListStringType list = ((ListStringType) _value_28);
                _builder.newLineIfNotEmpty();
                {
                  EList<String> _value_29 = list.getValue();
                  for(final String item : _value_29) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_27 = this.expressionList.get(indexExpression);
                    _builder.append(_get_27);
                    _builder.append(".first).values.add(\"");
                    _builder.append(item);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_28 = this.expressionList.get(indexExpression);
                _builder.append(_get_28);
                _builder.append(".first).type = \"String\";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_30 = attev_1.getValue();
              if ((_value_30 instanceof ListType)) {
                _builder.append("//");
                AttributeEvaluationType _value_31 = attev_1.getValue();
                final ListType list_1 = ((ListType) _value_31);
                _builder.newLineIfNotEmpty();
                {
                  EList<EObject> _value_32 = list_1.getValue();
                  for(final EObject item_1 : _value_32) {
                    _builder.append("((AttributeEvaluation) exp");
                    Integer _get_29 = this.expressionList.get(indexExpression);
                    _builder.append(_get_29);
                    _builder.append(".first).values.add(\"");
                    _builder.append(item_1);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("((AttributeEvaluation) exp");
                Integer _get_30 = this.expressionList.get(indexExpression);
                _builder.append(_get_30);
                _builder.append(".first).type = \"String\";");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
      }
    }
    {
      Evaluation _first_5 = exp.getFirst();
      if ((_first_5 instanceof ReferenceEvaluation)) {
        _builder.append("exp");
        Integer _get_31 = this.expressionList.get(indexExpression);
        _builder.append(_get_31);
        _builder.append(".first = new ReferenceEvaluation();");
        _builder.newLineIfNotEmpty();
        _builder.append("//REFERENCE: ");
        Evaluation _first_6 = exp.getFirst();
        final ReferenceEvaluation refev = ((ReferenceEvaluation) _first_6);
        _builder.newLineIfNotEmpty();
        {
          EReference _name_6 = refev.getName();
          boolean _tripleNotEquals = (_name_6 != null);
          if (_tripleNotEquals) {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_32 = this.expressionList.get(indexExpression);
            _builder.append(_get_32);
            _builder.append(".first).name = \"");
            String _name_7 = refev.getName().getName();
            _builder.append(_name_7);
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            {
              if (((refev.getValue() instanceof TypedSelection) && (recursionIndexExpression != 0))) {
                _builder.append("refNames");
                Integer _get_33 = this.expressionList.get(recursionIndexExpression);
                _builder.append(_get_33);
                _builder.append(".add(\"");
                String _name_8 = refev.getName().getName();
                _builder.append(_name_8);
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_34 = this.expressionList.get(indexExpression);
            _builder.append(_get_34);
            _builder.append(".first).name = null;");
            _builder.newLineIfNotEmpty();
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_35 = this.expressionList.get(indexExpression);
            _builder.append(_get_35);
            _builder.append(".first).container = ");
            boolean _isContainer = refev.isContainer();
            _builder.append(_isContainer);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          EReference _refName = refev.getRefName();
          boolean _tripleNotEquals_1 = (_refName != null);
          if (_tripleNotEquals_1) {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_36 = this.expressionList.get(indexExpression);
            _builder.append(_get_36);
            _builder.append(".first).refName = \"");
            String _name_9 = refev.getRefName().getName();
            _builder.append(_name_9);
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            {
              EReference _refRefName = refev.getRefRefName();
              boolean _tripleNotEquals_2 = (_refRefName != null);
              if (_tripleNotEquals_2) {
                _builder.append("((ReferenceEvaluation) exp");
                Integer _get_37 = this.expressionList.get(indexExpression);
                _builder.append(_get_37);
                _builder.append(".first).refRefName = \"");
                String _name_10 = refev.getRefRefName().getName();
                _builder.append(_name_10);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("((ReferenceEvaluation) exp");
                Integer _get_38 = this.expressionList.get(indexExpression);
                _builder.append(_get_38);
                _builder.append(".first).refRefName = null;");
                _builder.newLineIfNotEmpty();
              }
            }
          } else {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_39 = this.expressionList.get(indexExpression);
            _builder.append(_get_39);
            _builder.append(".first).refName = null;");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          EAttribute _attName = refev.getAttName();
          boolean _tripleNotEquals_3 = (_attName != null);
          if (_tripleNotEquals_3) {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_40 = this.expressionList.get(indexExpression);
            _builder.append(_get_40);
            _builder.append(".first).attName = \"");
            String _name_11 = refev.getAttName().getName();
            _builder.append(_name_11);
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("((ReferenceEvaluation) exp");
            Integer _get_41 = this.expressionList.get(indexExpression);
            _builder.append(_get_41);
            _builder.append(".first).attName = null;");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("((ReferenceEvaluation) exp");
        Integer _get_42 = this.expressionList.get(indexExpression);
        _builder.append(_get_42);
        _builder.append(".first).operator = \"");
        Operator _operator_2 = refev.getOperator();
        _builder.append(_operator_2);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        {
          ObSelectionStrategy _value_33 = refev.getValue();
          boolean _tripleEquals = (_value_33 == null);
          if (_tripleEquals) {
            {
              AttributeEvaluationType _attValue = refev.getAttValue();
              boolean _tripleEquals_1 = (_attValue == null);
              if (_tripleEquals_1) {
                _builder.append("((ReferenceEvaluation) exp");
                Integer _get_43 = this.expressionList.get(indexExpression);
                _builder.append(_get_43);
                _builder.append(".first).value = null;");
                _builder.newLineIfNotEmpty();
              } else {
                {
                  AttributeEvaluationType _attValue_1 = refev.getAttValue();
                  if ((_attValue_1 instanceof ObjectAttributeType)) {
                    _builder.append("((ReferenceEvaluation) exp");
                    Integer _get_44 = this.expressionList.get(indexExpression);
                    _builder.append(_get_44);
                    _builder.append(".first).value = ModelManager.getStringAttribute(\"");
                    AttributeEvaluationType _attValue_2 = refev.getAttValue();
                    String _name_12 = ((ObjectAttributeType) _attValue_2).getAttribute().getName();
                    _builder.append(_name_12);
                    _builder.append("\", hmObjects.get(\"");
                    AttributeEvaluationType _attValue_3 = refev.getAttValue();
                    String _name_13 = ((ObjectAttributeType) _attValue_3).getObjSel().getName();
                    _builder.append(_name_13);
                    _builder.append("\").getKey());");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _attValue_4 = refev.getAttValue();
                  if ((_attValue_4 instanceof AttributeType)) {
                    {
                      if (((((refev.getAttValue() instanceof StringType) || (refev.getAttValue() instanceof DoubleType)) || (refev.getAttValue() instanceof BooleanType)) || (refev.getAttValue() instanceof IntegerType))) {
                        _builder.append("   \t\t\t");
                        _builder.append("((ReferenceEvaluation) exp");
                        Integer _get_45 = this.expressionList.get(indexExpression);
                        _builder.append(_get_45, "   \t\t\t");
                        _builder.append(".first).value = \"");
                        AttributeEvaluationType _attValue_5 = refev.getAttValue();
                        String _value_34 = ((SpecificStringType) _attValue_5).getValue();
                        _builder.append(_value_34, "   \t\t\t");
                        _builder.append("\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      AttributeEvaluationType _attValue_6 = refev.getAttValue();
                      if ((_attValue_6 instanceof MinValueType)) {
                        _builder.append("MinValueConfigurationStrategy min");
                        Integer _get_46 = this.expressionList.get(indexExpression);
                        _builder.append(_get_46);
                        _builder.append(" = new MinValueConfigurationStrategy(packages, model, \"");
                        AttributeEvaluationType _attValue_7 = refev.getAttValue();
                        String _typeName_2 = MutatorUtils.getTypeName(((MinValueType) _attValue_7));
                        _builder.append(_typeName_2);
                        _builder.append("\", \"");
                        AttributeEvaluationType _attValue_8 = refev.getAttValue();
                        String _name_14 = ((MinValueType) _attValue_8).getAttribute().getName();
                        _builder.append(_name_14);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("((ReferenceEvaluation) exp");
                        Integer _get_47 = this.expressionList.get(indexExpression);
                        _builder.append(_get_47);
                        _builder.append(".first).value = min");
                        Integer _get_48 = this.expressionList.get(indexExpression);
                        _builder.append(_get_48);
                        _builder.append(".getValue().toString();");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      AttributeEvaluationType _attValue_9 = refev.getAttValue();
                      if ((_attValue_9 instanceof MinValueType)) {
                        _builder.append("MaxValueConfigurationStrategy max");
                        Integer _get_49 = this.expressionList.get(indexExpression);
                        _builder.append(_get_49);
                        _builder.append(" = new MaxValueConfigurationStrategy(packages, model, \"");
                        AttributeEvaluationType _attValue_10 = refev.getAttValue();
                        String _typeName_3 = MutatorUtils.getTypeName(((MaxValueType) _attValue_10));
                        _builder.append(_typeName_3);
                        _builder.append("\", \"");
                        AttributeEvaluationType _attValue_11 = refev.getAttValue();
                        String _name_15 = ((MaxValueType) _attValue_11).getAttribute().getName();
                        _builder.append(_name_15);
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("((ReferenceEvaluation) exp");
                        Integer _get_50 = this.expressionList.get(indexExpression);
                        _builder.append(_get_50);
                        _builder.append(".first).value = max");
                        Integer _get_51 = this.expressionList.get(indexExpression);
                        _builder.append(_get_51);
                        _builder.append(".getValue().toString();");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
              }
            }
          } else {
            ObSelectionStrategy _value_35 = refev.getValue();
            if ((_value_35 instanceof SpecificObjectSelection)) {
              {
                if (((refev.getRefType() == null) && (refev.getValue().getRefType() == null))) {
                  _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                  Integer _get_52 = this.expressionList.get(indexExpression);
                  _builder.append(_get_52);
                  _builder.append(" = hmObjects.get(\"");
                  ObSelectionStrategy _value_36 = refev.getValue();
                  String _name_16 = ((SpecificObjectSelection) _value_36).getObjSel().getName();
                  _builder.append(_name_16);
                  _builder.append("\");");
                  _builder.newLineIfNotEmpty();
                  _builder.append("if (entry_");
                  Integer _get_53 = this.expressionList.get(indexExpression);
                  _builder.append(_get_53);
                  _builder.append(" != null) {");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t\t");
                  _builder.append("((ReferenceEvaluation) exp");
                  Integer _get_54 = this.expressionList.get(indexExpression);
                  _builder.append(_get_54, "\t\t\t\t");
                  _builder.append(".first).value = new SpecificObjectSelection(entry_");
                  Integer _get_55 = this.expressionList.get(indexExpression);
                  _builder.append(_get_55, "\t\t\t\t");
                  _builder.append(".getValue().getValue(), entry_");
                  Integer _get_56 = this.expressionList.get(indexExpression);
                  _builder.append(_get_56, "\t\t\t\t");
                  _builder.append(".getValue().getKey(), entry_");
                  Integer _get_57 = this.expressionList.get(indexExpression);
                  _builder.append(_get_57, "\t\t\t\t");
                  _builder.append(".getKey()).getObject();");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t\t\t");
                  _builder.append("}");
                  _builder.newLine();
                } else {
                  {
                    EReference _refType = refev.getRefType();
                    boolean _tripleNotEquals_4 = (_refType != null);
                    if (_tripleNotEquals_4) {
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      Integer _get_58 = this.expressionList.get(indexExpression);
                      _builder.append(_get_58);
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _value_37 = refev.getValue();
                      String _name_17 = ((SpecificObjectSelection) _value_37).getObjSel().getName();
                      _builder.append(_name_17);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("if (entry_");
                      Integer _get_59 = this.expressionList.get(indexExpression);
                      _builder.append(_get_59);
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("EObject srcObjExp = entry_");
                      Integer _get_60 = this.expressionList.get(indexExpression);
                      _builder.append(_get_60, "\t");
                      _builder.append(".getKey();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("for (EReference ref : srcObjExp.eClass().getEAllReferences()) {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (ref.getName().equals(\"");
                      String _name_18 = refev.getRefType().getName();
                      _builder.append(_name_18, "\t\t");
                      _builder.append("\")) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("((ReferenceEvaluation) exp");
                      Integer _get_61 = this.expressionList.get(indexExpression);
                      _builder.append(_get_61, "\t\t");
                      _builder.append(".first).value = srcObjExp.eGet(ref);\t\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                  {
                    EReference _refType_1 = refev.getValue().getRefType();
                    boolean _tripleNotEquals_5 = (_refType_1 != null);
                    if (_tripleNotEquals_5) {
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry_");
                      Integer _get_62 = this.expressionList.get(indexExpression);
                      _builder.append(_get_62);
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _value_38 = refev.getValue();
                      String _name_19 = ((SpecificObjectSelection) _value_38).getObjSel().getName();
                      _builder.append(_name_19);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("if (entry_");
                      Integer _get_63 = this.expressionList.get(indexExpression);
                      _builder.append(_get_63);
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t   \t\t");
                      _builder.append("EObject srcObjExp = entry_");
                      Integer _get_64 = this.expressionList.get(indexExpression);
                      _builder.append(_get_64, "\t\t   \t\t");
                      _builder.append(".getKey();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t   \t\t");
                      _builder.append("for (EReference ref : srcObjExp.eClass().getEAllReferences()) {");
                      _builder.newLine();
                      _builder.append("\t\t");
                      _builder.append("if (ref.getName().equals(\"");
                      String _name_20 = refev.getValue().getRefType().getName();
                      _builder.append(_name_20, "\t\t");
                      _builder.append("\")) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t\t");
                      _builder.append("((ReferenceEvaluation) exp");
                      Integer _get_65 = this.expressionList.get(indexExpression);
                      _builder.append(_get_65, "\t\t\t");
                      _builder.append(".first).value = srcObjExp.eGet(ref);\t\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("}");
                      _builder.newLine();
                    }
                  }
                }
              }
            } else {
              {
                ObSelectionStrategy _value_39 = refev.getValue();
                if ((_value_39 instanceof RandomTypeSelection)) {
                  {
                    Expression _expression = refev.getValue().getExpression();
                    if ((_expression instanceof Expression)) {
                      _builder.append("//EXPRESSION LEVEL: ");
                      _builder.append(this.nExpression = (this.nExpression + 1));
                      _builder.newLineIfNotEmpty();
                      _builder.append("//EXPRESSION LEVEL: ");
                      boolean _add = this.expressionList.add(Integer.valueOf(this.nExpression));
                      _builder.append(_add);
                      _builder.newLineIfNotEmpty();
                      _builder.append("//INDEX EXPRESSION: ");
                      int _size_1 = this.expressionList.size();
                      final int nestedIndexExpression = (_size_1 - 1);
                      _builder.newLineIfNotEmpty();
                      _builder.append("RandomTypeSelection expRts");
                      Integer _get_66 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_66);
                      _builder.append(" = new RandomTypeSelection(packages, model, \"");
                      ObSelectionStrategy _value_40 = refev.getValue();
                      String _name_21 = ((RandomTypeSelection) _value_40).getType().getName();
                      _builder.append(_name_21);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("List<EObject> expObjects");
                      Integer _get_67 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_67);
                      _builder.append(" = expRts");
                      Integer _get_68 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_68);
                      _builder.append(".getObjects();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("Expression exp");
                      Integer _get_69 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_69);
                      _builder.append(" = new Expression();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t   \t\t");
                      Object _method = this.method(refev.getValue().getExpression(), nestedIndexExpression);
                      _builder.append(_method, "\t   \t\t");
                      _builder.newLineIfNotEmpty();
                      _builder.append("List<EObject> selectedObjects");
                      Integer _get_70 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_70);
                      _builder.append(" = evaluate(expObjects");
                      Integer _get_71 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_71);
                      _builder.append(", exp");
                      Integer _get_72 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_72);
                      _builder.append(");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("EObject object");
                      Integer _get_73 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_73);
                      _builder.append(" = null;");
                      _builder.newLineIfNotEmpty();
                      _builder.append("if (selectedObjects");
                      Integer _get_74 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_74);
                      _builder.append(".size() > 0) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("object");
                      Integer _get_75 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_75, "\t");
                      _builder.append(" = selectedObjects");
                      Integer _get_76 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_76, "\t");
                      _builder.append(".get(ModelManager.getRandomIndex(selectedObjects");
                      Integer _get_77 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_77, "\t");
                      _builder.append("));");
                      _builder.newLineIfNotEmpty();
                      _builder.append("}");
                      _builder.newLine();
                      _builder.append("((ReferenceEvaluation) exp");
                      Integer _get_78 = this.expressionList.get(indexExpression);
                      _builder.append(_get_78);
                      _builder.append(".first).value = new SpecificObjectSelection(packages, model, object");
                      Integer _get_79 = this.expressionList.get(nestedIndexExpression);
                      _builder.append(_get_79);
                      _builder.append(").getObject();");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("((ReferenceEvaluation) exp");
                      Integer _get_80 = this.expressionList.get(indexExpression);
                      _builder.append(_get_80);
                      _builder.append(".first).value = new RandomTypeSelection(packages, model, \"");
                      ObSelectionStrategy _value_41 = refev.getValue();
                      String _name_22 = ((RandomTypeSelection) _value_41).getType().getName();
                      _builder.append(_name_22);
                      _builder.append("\").getObject();");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                } else {
                  {
                    ObSelectionStrategy _value_42 = refev.getValue();
                    if ((_value_42 instanceof TypedSelection)) {
                      {
                        Expression _expression_1 = refev.getValue().getExpression();
                        if ((_expression_1 instanceof Expression)) {
                          _builder.append("//EXPRESSION LEVEL: ");
                          _builder.append(this.nExpression = (this.nExpression + 1));
                          _builder.newLineIfNotEmpty();
                          _builder.append("//EXPRESSION LEVEL: ");
                          boolean _add_1 = this.expressionList.add(Integer.valueOf(this.nExpression));
                          _builder.append(_add_1);
                          _builder.newLineIfNotEmpty();
                          _builder.append("//INDEX EXPRESSION: ");
                          int _size_2 = this.expressionList.size();
                          final int nestedIndexExpression_1 = (_size_2 - 1);
                          _builder.newLineIfNotEmpty();
                          _builder.append("TypedSelection expRts");
                          Integer _get_81 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_81);
                          _builder.append(" = new TypedSelection(packages, model, \"");
                          ObSelectionStrategy _value_43 = refev.getValue();
                          String _name_23 = ((TypedSelection) _value_43).getType().getName();
                          _builder.append(_name_23);
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("List<EObject> expObjects");
                          Integer _get_82 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_82);
                          _builder.append(" = expRts");
                          Integer _get_83 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_83);
                          _builder.append(".getObjects();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("Expression exp");
                          Integer _get_84 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_84);
                          _builder.append(" = new Expression();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("List<String> refNames");
                          Integer _get_85 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_85);
                          _builder.append(" = new ArrayList<String>();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t   \t\t");
                          Object _method_1 = this.method(refev.getValue().getExpression(), nestedIndexExpression_1);
                          _builder.append(_method_1, "\t   \t\t");
                          _builder.newLineIfNotEmpty();
                          _builder.append("List<EObject> selectedObjects");
                          Integer _get_86 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_86);
                          _builder.append(" = evaluate(expObjects");
                          Integer _get_87 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_87);
                          _builder.append(", exp");
                          Integer _get_88 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_88);
                          _builder.append(");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("refNames");
                          Integer _get_89 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_89);
                          _builder.append(".add(\"");
                          String _name_24 = refev.getName().getName();
                          _builder.append(_name_24);
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("Collections.reverse(refNames");
                          Integer _get_90 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_90);
                          _builder.append(");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("selectedObjects");
                          Integer _get_91 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_91);
                          _builder.append(" = ModelManager.getReferredObjects(refNames");
                          Integer _get_92 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_92);
                          _builder.append(", objects, selectedObjects1);");
                          _builder.newLineIfNotEmpty();
                          _builder.append("EObject object");
                          Integer _get_93 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_93);
                          _builder.append(" = null;");
                          _builder.newLineIfNotEmpty();
                          _builder.append("if (selectedObjects");
                          Integer _get_94 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_94);
                          _builder.append(".size() > 0) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("object");
                          Integer _get_95 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_95, "\t");
                          _builder.append(" = selectedObjects");
                          Integer _get_96 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_96, "\t");
                          _builder.append(".get(ModelManager.getRandomIndex(selectedObjects");
                          Integer _get_97 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_97, "\t");
                          _builder.append("));");
                          _builder.newLineIfNotEmpty();
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("((ReferenceEvaluation) exp");
                          Integer _get_98 = this.expressionList.get(indexExpression);
                          _builder.append(_get_98);
                          _builder.append(".first).value = new SpecificObjectSelection(packages, model, object");
                          Integer _get_99 = this.expressionList.get(nestedIndexExpression_1);
                          _builder.append(_get_99);
                          _builder.append(").getObject();");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("((ReferenceEvaluation) exp");
                          Integer _get_100 = this.expressionList.get(indexExpression);
                          _builder.append(_get_100);
                          _builder.append(".first).value = new TypedSelection(packages, model, \"");
                          ObSelectionStrategy _value_44 = refev.getValue();
                          String _name_25 = ((TypedSelection) _value_44).getType().getName();
                          _builder.append(_name_25);
                          _builder.append("\").getObject();");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    _builder.append("exp");
    Integer _get_101 = this.expressionList.get(indexExpression);
    _builder.append(_get_101);
    _builder.append(".operator = new ArrayList<Operator>();");
    _builder.newLineIfNotEmpty();
    _builder.append("//OPNAME: ");
    int opName = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<BinaryOperator> _operator_3 = exp.getOperator();
      for(final BinaryOperator op : _operator_3) {
        _builder.append("Operator op");
        _builder.append(opName);
        _builder.append("_");
        Integer _get_102 = this.expressionList.get(indexExpression);
        _builder.append(_get_102);
        _builder.append(" = new Operator();");
        _builder.newLineIfNotEmpty();
        _builder.append("op");
        _builder.append(opName);
        _builder.append("_");
        Integer _get_103 = this.expressionList.get(indexExpression);
        _builder.append(_get_103);
        _builder.append(".type = \"");
        LogicOperator _type = op.getType();
        _builder.append(_type);
        _builder.append("\";");
        _builder.newLineIfNotEmpty();
        _builder.append("exp");
        Integer _get_104 = this.expressionList.get(indexExpression);
        _builder.append(_get_104);
        _builder.append(".operator.add(op");
        _builder.append(opName);
        _builder.append("_");
        Integer _get_105 = this.expressionList.get(indexExpression);
        _builder.append(_get_105);
        _builder.append(");");
        _builder.newLineIfNotEmpty();
        _builder.append("//OPNAME + 1: ");
        _builder.append(opName = (opName + 1));
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("exp");
    Integer _get_106 = this.expressionList.get(indexExpression);
    _builder.append(_get_106);
    _builder.append(".second = new ArrayList<Evaluation>();");
    _builder.newLineIfNotEmpty();
    _builder.append("//EVNAME: ");
    int evName = 0;
    _builder.newLineIfNotEmpty();
    {
      EList<Evaluation> _second = exp.getSecond();
      for(final Evaluation ev : _second) {
        {
          if ((ev instanceof AttributeEvaluation)) {
            {
              AttributeEvaluationType _value_45 = ((AttributeEvaluation) ev).getValue();
              if ((_value_45 instanceof ObjectAttributeType)) {
                _builder.append("AttributeEvaluation ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_107 = this.expressionList.get(indexExpression);
                _builder.append(_get_107);
                _builder.append(" = new AttributeEvaluation();");
                _builder.newLineIfNotEmpty();
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_108 = this.expressionList.get(indexExpression);
                _builder.append(_get_108);
                _builder.append(".name = \"");
                String _name_26 = ((AttributeEvaluation)ev).getName().getName();
                _builder.append(_name_26);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_109 = this.expressionList.get(indexExpression);
                _builder.append(_get_109);
                _builder.append(".operator = \"");
                AttributeEvaluationType _value_46 = ((AttributeEvaluation)ev).getValue();
                Operator _operator_4 = ((ObjectAttributeType) _value_46).getOperator();
                _builder.append(_operator_4);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_110 = this.expressionList.get(indexExpression);
                _builder.append(_get_110);
                _builder.append(".values = new ArrayList<String>();");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              AttributeEvaluationType _value_47 = ((AttributeEvaluation) ev).getValue();
              if ((_value_47 instanceof AttributeType)) {
                _builder.append("AttributeEvaluation ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_111 = this.expressionList.get(indexExpression);
                _builder.append(_get_111);
                _builder.append(" = new AttributeEvaluation();");
                _builder.newLineIfNotEmpty();
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_112 = this.expressionList.get(indexExpression);
                _builder.append(_get_112);
                _builder.append(".name = \"");
                String _name_27 = ((AttributeEvaluation)ev).getName().getName();
                _builder.append(_name_27);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_113 = this.expressionList.get(indexExpression);
                _builder.append(_get_113);
                _builder.append(".values = new ArrayList<String>();");
                _builder.newLineIfNotEmpty();
                {
                  AttributeEvaluationType _value_48 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_48 instanceof StringType)) {
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_114 = this.expressionList.get(indexExpression);
                    _builder.append(_get_114);
                    _builder.append(".operator = \"");
                    AttributeEvaluationType _value_49 = ((AttributeEvaluation)ev).getValue();
                    Operator _operator_5 = ((SpecificStringType) _value_49).getOperator();
                    _builder.append(_operator_5);
                    _builder.append("\";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_115 = this.expressionList.get(indexExpression);
                    _builder.append(_get_115);
                    _builder.append(".values.add(\"");
                    AttributeEvaluationType _value_50 = ((AttributeEvaluation)ev).getValue();
                    String _value_51 = ((SpecificStringType) _value_50).getValue();
                    _builder.append(_value_51);
                    _builder.append("\");;");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_116 = this.expressionList.get(indexExpression);
                    _builder.append(_get_116);
                    _builder.append(".type = \"String\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_52 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_52 instanceof DoubleType)) {
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_117 = this.expressionList.get(indexExpression);
                    _builder.append(_get_117);
                    _builder.append(".operator = \"");
                    AttributeEvaluationType _value_53 = ((AttributeEvaluation)ev).getValue();
                    Operator _operator_6 = ((SpecificDoubleType) _value_53).getOperator();
                    _builder.append(_operator_6);
                    _builder.append("\";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_118 = this.expressionList.get(indexExpression);
                    _builder.append(_get_118);
                    _builder.append(".values.add(\"");
                    AttributeEvaluationType _value_54 = ((AttributeEvaluation)ev).getValue();
                    double _value_55 = ((SpecificDoubleType) _value_54).getValue();
                    _builder.append(_value_55);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_119 = this.expressionList.get(indexExpression);
                    _builder.append(_get_119);
                    _builder.append(".type = \"double\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_56 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_56 instanceof BooleanType)) {
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_120 = this.expressionList.get(indexExpression);
                    _builder.append(_get_120);
                    _builder.append(".operator = \"");
                    AttributeEvaluationType _value_57 = ((AttributeEvaluation)ev).getValue();
                    Operator _operator_7 = ((SpecificBooleanType) _value_57).getOperator();
                    _builder.append(_operator_7);
                    _builder.append("\";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_121 = this.expressionList.get(indexExpression);
                    _builder.append(_get_121);
                    _builder.append(".values.add(\"");
                    AttributeEvaluationType _value_58 = ((AttributeEvaluation)ev).getValue();
                    boolean _isValue_1 = ((SpecificBooleanType) _value_58).isValue();
                    _builder.append(_isValue_1);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_122 = this.expressionList.get(indexExpression);
                    _builder.append(_get_122);
                    _builder.append(".type = \"Boolean\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_59 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_59 instanceof IntegerType)) {
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_123 = this.expressionList.get(indexExpression);
                    _builder.append(_get_123);
                    _builder.append(".operator = \"");
                    AttributeEvaluationType _value_60 = ((AttributeEvaluation)ev).getValue();
                    Operator _operator_8 = ((SpecificIntegerType) _value_60).getOperator();
                    _builder.append(_operator_8);
                    _builder.append("\";");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_124 = this.expressionList.get(indexExpression);
                    _builder.append(_get_124);
                    _builder.append(".values.add(\"");
                    AttributeEvaluationType _value_61 = ((AttributeEvaluation)ev).getValue();
                    int _value_62 = ((SpecificIntegerType) _value_61).getValue();
                    _builder.append(_value_62);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("ev");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_125 = this.expressionList.get(indexExpression);
                    _builder.append(_get_125);
                    _builder.append(".type = \"int\";");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  AttributeEvaluationType _value_63 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_63 instanceof MinValueType)) {
                    _builder.append("MinValueConfigurationStrategy min");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_126 = this.expressionList.get(indexExpression);
                    _builder.append(_get_126);
                    _builder.append(" = new MinValueConfigurationStrategy(packages, model, \"");
                    AttributeEvaluationType _value_64 = ((AttributeEvaluation)ev).getValue();
                    String _typeName_4 = MutatorUtils.getTypeName(((MinValueType) _value_64));
                    _builder.append(_typeName_4);
                    _builder.append("\", \"");
                    AttributeEvaluationType _value_65 = ((AttributeEvaluation)ev).getValue();
                    String _name_28 = ((MinValueType) _value_65).getAttribute().getName();
                    _builder.append(_name_28);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("((AttributeEvaluation) exp");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_127 = this.expressionList.get(indexExpression);
                    _builder.append(_get_127);
                    _builder.append(".first).values.add(min");
                    Integer _get_128 = this.expressionList.get(indexExpression);
                    _builder.append(_get_128);
                    _builder.append(".getValue().toString());");
                    _builder.newLineIfNotEmpty();
                    {
                      AttributeEvaluationType _value_66 = ((AttributeEvaluation)ev).getValue();
                      boolean _equals_4 = ((MinValueType) _value_66).getAttribute().getEType().getName().equals("EInt");
                      if (_equals_4) {
                        _builder.append("((AttributeEvaluation) exp");
                        _builder.append(evName);
                        _builder.append("_");
                        Integer _get_129 = this.expressionList.get(indexExpression);
                        _builder.append(_get_129);
                        _builder.append(".first).type = \"int\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      AttributeEvaluationType _value_67 = ((AttributeEvaluation)ev).getValue();
                      boolean _equals_5 = ((MinValueType) _value_67).getAttribute().getEType().getName().equals("EDouble");
                      if (_equals_5) {
                        _builder.append("((AttributeEvaluation) exp");
                        _builder.append(evName);
                        _builder.append("_");
                        Integer _get_130 = this.expressionList.get(indexExpression);
                        _builder.append(_get_130);
                        _builder.append(".first).type = \"double\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  AttributeEvaluationType _value_68 = ((AttributeEvaluation)ev).getValue();
                  if ((_value_68 instanceof MaxValueType)) {
                    _builder.append("MaxValueConfigurationStrategy max");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_131 = this.expressionList.get(indexExpression);
                    _builder.append(_get_131);
                    _builder.append(" = new MaxValueConfigurationStrategy(packages, model, \"");
                    AttributeEvaluationType _value_69 = ((AttributeEvaluation)ev).getValue();
                    String _typeName_5 = MutatorUtils.getTypeName(((MaxValueType) _value_69));
                    _builder.append(_typeName_5);
                    _builder.append("\", \"");
                    AttributeEvaluationType _value_70 = ((AttributeEvaluation)ev).getValue();
                    String _name_29 = ((MinValueType) _value_70).getAttribute().getName();
                    _builder.append(_name_29);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("((AttributeEvaluation) exp");
                    _builder.append(evName);
                    _builder.append("_");
                    Integer _get_132 = this.expressionList.get(indexExpression);
                    _builder.append(_get_132);
                    _builder.append(".first).values.add(max");
                    Integer _get_133 = this.expressionList.get(indexExpression);
                    _builder.append(_get_133);
                    _builder.append(".getValue().toString());");
                    _builder.newLineIfNotEmpty();
                    {
                      AttributeEvaluationType _value_71 = ((AttributeEvaluation)ev).getValue();
                      boolean _equals_6 = ((MinValueType) _value_71).getAttribute().getEType().getName().equals("EInt");
                      if (_equals_6) {
                        _builder.append("((AttributeEvaluation) exp");
                        _builder.append(evName);
                        _builder.append("_");
                        Integer _get_134 = this.expressionList.get(indexExpression);
                        _builder.append(_get_134);
                        _builder.append(".first).type = \"int\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      AttributeEvaluationType _value_72 = ((AttributeEvaluation)ev).getValue();
                      boolean _equals_7 = ((MinValueType) _value_72).getAttribute().getEType().getName().equals("EDouble");
                      if (_equals_7) {
                        _builder.append("((AttributeEvaluation) exp");
                        _builder.append(evName);
                        _builder.append("_");
                        Integer _get_135 = this.expressionList.get(indexExpression);
                        _builder.append(_get_135);
                        _builder.append(".first).type = \"double\";");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
              }
            }
          }
        }
        {
          if ((ev instanceof ReferenceEvaluation)) {
            _builder.append("   \t\t\t");
            _builder.append("ReferenceEvaluation ev");
            _builder.append(evName, "   \t\t\t");
            _builder.append("_");
            Integer _get_136 = this.expressionList.get(indexExpression);
            _builder.append(_get_136, "   \t\t\t");
            _builder.append(" = new ReferenceEvaluation();");
            _builder.newLineIfNotEmpty();
            {
              EReference _name_30 = ((ReferenceEvaluation)ev).getName();
              boolean _tripleNotEquals_6 = (_name_30 != null);
              if (_tripleNotEquals_6) {
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_137 = this.expressionList.get(indexExpression);
                _builder.append(_get_137);
                _builder.append(".name = \"");
                String _name_31 = ((ReferenceEvaluation)ev).getName().getName();
                _builder.append(_name_31);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
                {
                  if (((((ReferenceEvaluation)ev).getValue() instanceof TypedSelection) && (recursionIndexExpression != 0))) {
                    _builder.append("\t\t\t\t");
                    _builder.append("refNames");
                    Integer _get_138 = this.expressionList.get(recursionIndexExpression);
                    _builder.append(_get_138, "\t\t\t\t");
                    _builder.append(".add(\"");
                    String _name_32 = ((ReferenceEvaluation)ev).getName().getName();
                    _builder.append(_name_32, "\t\t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              } else {
                _builder.append("\t   \t\t");
                _builder.append("ev");
                _builder.append(evName, "\t   \t\t");
                _builder.append("_");
                Integer _get_139 = this.expressionList.get(indexExpression);
                _builder.append(_get_139, "\t   \t\t");
                _builder.append(".name = null;");
                _builder.newLineIfNotEmpty();
                _builder.append("\t   \t\t");
                _builder.append("ev");
                _builder.append(evName, "\t   \t\t");
                _builder.append("_");
                Integer _get_140 = this.expressionList.get(indexExpression);
                _builder.append(_get_140, "\t   \t\t");
                _builder.append(".container = ");
                boolean _isContainer_1 = ((ReferenceEvaluation)ev).isContainer();
                _builder.append(_isContainer_1, "\t   \t\t");
                _builder.append(";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              EReference _refName_1 = ((ReferenceEvaluation)ev).getRefName();
              boolean _tripleNotEquals_7 = (_refName_1 != null);
              if (_tripleNotEquals_7) {
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_141 = this.expressionList.get(indexExpression);
                _builder.append(_get_141);
                _builder.append(".refName = \"");
                String _name_33 = ((ReferenceEvaluation)ev).getRefName().getName();
                _builder.append(_name_33);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t   \t\t");
                _builder.append("ev");
                _builder.append(evName, "\t   \t\t");
                _builder.append("_");
                Integer _get_142 = this.expressionList.get(indexExpression);
                _builder.append(_get_142, "\t   \t\t");
                _builder.append(".refName = null;");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              EAttribute _attName_1 = ((ReferenceEvaluation)ev).getAttName();
              boolean _tripleNotEquals_8 = (_attName_1 != null);
              if (_tripleNotEquals_8) {
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_143 = this.expressionList.get(indexExpression);
                _builder.append(_get_143);
                _builder.append(".attName = \"");
                String _name_34 = ((ReferenceEvaluation)ev).getAttName().getName();
                _builder.append(_name_34);
                _builder.append("\";");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("ev");
                _builder.append(evName);
                _builder.append("_");
                Integer _get_144 = this.expressionList.get(indexExpression);
                _builder.append(_get_144);
                _builder.append(".attName = null;");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t   \t");
            _builder.append("ev");
            _builder.append(evName, "\t\t   \t");
            _builder.append("_");
            Integer _get_145 = this.expressionList.get(indexExpression);
            _builder.append(_get_145, "\t\t   \t");
            _builder.append(".operator = \"");
            Operator _operator_9 = ((ReferenceEvaluation)ev).getOperator();
            _builder.append(_operator_9, "\t\t   \t");
            _builder.append("\";");
            _builder.newLineIfNotEmpty();
            {
              ObSelectionStrategy _value_73 = ((ReferenceEvaluation)ev).getValue();
              boolean _tripleEquals_2 = (_value_73 == null);
              if (_tripleEquals_2) {
                {
                  AttributeEvaluationType _attValue_12 = ((ReferenceEvaluation)ev).getAttValue();
                  boolean _tripleEquals_3 = (_attValue_12 == null);
                  if (_tripleEquals_3) {
                    _builder.append("   \t\t\t");
                    _builder.append("ev");
                    _builder.append(evName, "   \t\t\t");
                    _builder.append("_");
                    Integer _get_146 = this.expressionList.get(indexExpression);
                    _builder.append(_get_146, "   \t\t\t");
                    _builder.append(".value = null;");
                    _builder.newLineIfNotEmpty();
                  } else {
                    {
                      AttributeEvaluationType _attValue_13 = ((ReferenceEvaluation)ev).getAttValue();
                      if ((_attValue_13 instanceof ObjectAttributeType)) {
                        _builder.append("   \t\t\t");
                        _builder.append("ev");
                        _builder.append(evName, "   \t\t\t");
                        _builder.append("_");
                        Integer _get_147 = this.expressionList.get(indexExpression);
                        _builder.append(_get_147, "   \t\t\t");
                        _builder.append(".value = ModelManager.getStringAttribute(\"");
                        AttributeEvaluationType _attValue_14 = ((ReferenceEvaluation)ev).getAttValue();
                        String _name_35 = ((ObjectAttributeType) _attValue_14).getAttribute().getName();
                        _builder.append(_name_35, "   \t\t\t");
                        _builder.append("\", hmObjects.get(\"");
                        AttributeEvaluationType _attValue_15 = ((ReferenceEvaluation)ev).getAttValue();
                        String _name_36 = ((ObjectAttributeType) _attValue_15).getObjSel().getName();
                        _builder.append(_name_36, "   \t\t\t");
                        _builder.append("\").getKey());");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      AttributeEvaluationType _attValue_16 = ((ReferenceEvaluation)ev).getAttValue();
                      if ((_attValue_16 instanceof AttributeType)) {
                        {
                          if (((((((ReferenceEvaluation)ev).getAttValue() instanceof StringType) || (((ReferenceEvaluation)ev).getAttValue() instanceof DoubleType)) || (((ReferenceEvaluation)ev).getAttValue() instanceof BooleanType)) || (((ReferenceEvaluation)ev).getAttValue() instanceof IntegerType))) {
                            _builder.append("ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_148 = this.expressionList.get(indexExpression);
                            _builder.append(_get_148);
                            _builder.append(".value = \"");
                            AttributeEvaluationType _attValue_17 = ((ReferenceEvaluation)ev).getAttValue();
                            String _value_74 = ((SpecificStringType) _attValue_17).getValue();
                            _builder.append(_value_74);
                            _builder.append("\";");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          AttributeEvaluationType _attValue_18 = ((ReferenceEvaluation)ev).getAttValue();
                          if ((_attValue_18 instanceof MinValueType)) {
                            _builder.append("MinValueConfigurationStrategy min_ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_149 = this.expressionList.get(indexExpression);
                            _builder.append(_get_149);
                            _builder.append(" = new MinValueConfigurationStrategy(packages, model, \"");
                            AttributeEvaluationType _attValue_19 = ((ReferenceEvaluation)ev).getAttValue();
                            String _typeName_6 = MutatorUtils.getTypeName(((MinValueType) _attValue_19));
                            _builder.append(_typeName_6);
                            _builder.append("\", \"");
                            AttributeEvaluationType _attValue_20 = ((ReferenceEvaluation)ev).getAttValue();
                            String _name_37 = ((MinValueType) _attValue_20).getAttribute().getName();
                            _builder.append(_name_37);
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_150 = this.expressionList.get(indexExpression);
                            _builder.append(_get_150);
                            _builder.append(".value = min_ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_151 = this.expressionList.get(indexExpression);
                            _builder.append(_get_151);
                            _builder.append(".getValue().toString();");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          AttributeEvaluationType _attValue_21 = ((ReferenceEvaluation)ev).getAttValue();
                          if ((_attValue_21 instanceof MinValueType)) {
                            _builder.append("MaxValueConfigurationStrategy max_ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_152 = this.expressionList.get(indexExpression);
                            _builder.append(_get_152);
                            _builder.append(" = new MaxValueConfigurationStrategy(packages, model, \"");
                            AttributeEvaluationType _attValue_22 = ((ReferenceEvaluation)ev).getAttValue();
                            String _typeName_7 = MutatorUtils.getTypeName(((MaxValueType) _attValue_22));
                            _builder.append(_typeName_7);
                            _builder.append("\", \"");
                            AttributeEvaluationType _attValue_23 = ((ReferenceEvaluation)ev).getAttValue();
                            String _name_38 = ((MaxValueType) _attValue_23).getAttribute().getName();
                            _builder.append(_name_38);
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_153 = this.expressionList.get(indexExpression);
                            _builder.append(_get_153);
                            _builder.append(".value = max_ev");
                            _builder.append(evName);
                            _builder.append("_");
                            Integer _get_154 = this.expressionList.get(indexExpression);
                            _builder.append(_get_154);
                            _builder.append(".getValue().toString();");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                  }
                }
              } else {
                ObSelectionStrategy _value_75 = ((ReferenceEvaluation)ev).getValue();
                if ((_value_75 instanceof SpecificObjectSelection)) {
                  {
                    if (((((ReferenceEvaluation)ev).getRefType() == null) && (((ReferenceEvaluation)ev).getValue().getRefType() == null))) {
                      _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry");
                      _builder.append(evName);
                      _builder.append("_");
                      Integer _get_155 = this.expressionList.get(indexExpression);
                      _builder.append(_get_155);
                      _builder.append(" = hmObjects.get(\"");
                      ObSelectionStrategy _value_76 = ((ReferenceEvaluation)ev).getValue();
                      String _name_39 = ((SpecificObjectSelection) _value_76).getObjSel().getName();
                      _builder.append(_name_39);
                      _builder.append("\");");
                      _builder.newLineIfNotEmpty();
                      _builder.append("if (entry");
                      _builder.append(evName);
                      _builder.append("_");
                      Integer _get_156 = this.expressionList.get(indexExpression);
                      _builder.append(_get_156);
                      _builder.append(" != null) {");
                      _builder.newLineIfNotEmpty();
                      _builder.append("   \t\t\t\t\t\t");
                      _builder.append("ev");
                      _builder.append(evName, "   \t\t\t\t\t\t");
                      _builder.append("_");
                      Integer _get_157 = this.expressionList.get(indexExpression);
                      _builder.append(_get_157, "   \t\t\t\t\t\t");
                      _builder.append(".value = new SpecificObjectSelection(entry");
                      _builder.append(evName, "   \t\t\t\t\t\t");
                      _builder.append("_");
                      Integer _get_158 = this.expressionList.get(indexExpression);
                      _builder.append(_get_158, "   \t\t\t\t\t\t");
                      _builder.append(".getValue().getValue(), entry");
                      _builder.append(evName, "   \t\t\t\t\t\t");
                      _builder.append("_");
                      Integer _get_159 = this.expressionList.get(indexExpression);
                      _builder.append(_get_159, "   \t\t\t\t\t\t");
                      _builder.append(".getValue().getKey(), entry");
                      _builder.append(evName, "   \t\t\t\t\t\t");
                      _builder.append("_");
                      Integer _get_160 = this.expressionList.get(indexExpression);
                      _builder.append(_get_160, "   \t\t\t\t\t\t");
                      _builder.append(".getKey()).getObject();");
                      _builder.newLineIfNotEmpty();
                      _builder.append("   \t\t\t\t\t");
                      _builder.append("}");
                      _builder.newLine();
                    } else {
                      {
                        EReference _refType_2 = ((ReferenceEvaluation)ev).getRefType();
                        boolean _tripleNotEquals_9 = (_refType_2 != null);
                        if (_tripleNotEquals_9) {
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_161 = this.expressionList.get(indexExpression);
                          _builder.append(_get_161);
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _value_77 = ((ReferenceEvaluation)ev).getValue();
                          String _name_40 = ((SpecificObjectSelection) _value_77).getObjSel().getName();
                          _builder.append(_name_40);
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("if (entry");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_162 = this.expressionList.get(indexExpression);
                          _builder.append(_get_162);
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t   \t\t\t\t\t");
                          _builder.append("EObject srcObjExp");
                          _builder.append(evName, "\t   \t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_163 = this.expressionList.get(indexExpression);
                          _builder.append(_get_163, "\t   \t\t\t\t\t");
                          _builder.append(" = entry");
                          _builder.append(evName, "\t   \t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_164 = this.expressionList.get(indexExpression);
                          _builder.append(_get_164, "\t   \t\t\t\t\t");
                          _builder.append(".getKey();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("   \t\t\t\t\t\t");
                          _builder.append("for (EReference ref : srcObjExp");
                          _builder.append(evName, "   \t\t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_165 = this.expressionList.get(indexExpression);
                          _builder.append(_get_165, "   \t\t\t\t\t\t");
                          _builder.append(".eClass().getEAllReferences()) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("   \t\t\t\t\t\t\t");
                          _builder.append("if (ref.getName().equals(\"");
                          String _name_41 = ((ReferenceEvaluation)ev).getRefType().getName();
                          _builder.append(_name_41, "   \t\t\t\t\t\t\t");
                          _builder.append("\")) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("   \t\t\t\t\t\t\t\t");
                          _builder.append("ev");
                          _builder.append(evName, "   \t\t\t\t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_166 = this.expressionList.get(indexExpression);
                          _builder.append(_get_166, "   \t\t\t\t\t\t\t\t");
                          _builder.append(".value = srcObjExp");
                          _builder.append(evName, "   \t\t\t\t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_167 = this.expressionList.get(indexExpression);
                          _builder.append(_get_167, "   \t\t\t\t\t\t\t\t");
                          _builder.append(".eGet(ref);\t\t");
                          _builder.newLineIfNotEmpty();
                          _builder.append("   \t\t\t\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t   \t\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t   \t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                        }
                      }
                      {
                        EReference _refType_3 = ((ReferenceEvaluation)ev).getValue().getRefType();
                        boolean _tripleNotEquals_10 = (_refType_3 != null);
                        if (_tripleNotEquals_10) {
                          _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_168 = this.expressionList.get(indexExpression);
                          _builder.append(_get_168);
                          _builder.append(" = hmObjects.get(\"");
                          ObSelectionStrategy _value_78 = ((ReferenceEvaluation)ev).getValue();
                          String _name_42 = ((SpecificObjectSelection) _value_78).getObjSel().getName();
                          _builder.append(_name_42);
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("if (entry");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_169 = this.expressionList.get(indexExpression);
                          _builder.append(_get_169);
                          _builder.append(" != null) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t   \t\t\t\t");
                          _builder.append("EObject srcObjExp");
                          _builder.append(evName, "\t\t   \t\t\t\t");
                          _builder.append("_");
                          Integer _get_170 = this.expressionList.get(indexExpression);
                          _builder.append(_get_170, "\t\t   \t\t\t\t");
                          _builder.append(" = entry");
                          _builder.append(evName, "\t\t   \t\t\t\t");
                          _builder.append("_");
                          Integer _get_171 = this.expressionList.get(indexExpression);
                          _builder.append(_get_171, "\t\t   \t\t\t\t");
                          _builder.append(".getKey();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t\t   \t\t\t\t");
                          _builder.append("for (EReference ref : srcObjExp");
                          _builder.append(evName, "\t\t   \t\t\t\t");
                          _builder.append("_");
                          Integer _get_172 = this.expressionList.get(indexExpression);
                          _builder.append(_get_172, "\t\t   \t\t\t\t");
                          _builder.append(".eClass().getEAllReferences()) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t   \t\t\t\t\t\t");
                          _builder.append("if (ref.getName().equals(\"");
                          String _name_43 = ((ReferenceEvaluation)ev).getValue().getRefType().getName();
                          _builder.append(_name_43, "\t   \t\t\t\t\t\t");
                          _builder.append("\")) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t   \t\t\t\t\t\t\t");
                          _builder.append("ev");
                          _builder.append(evName, "\t   \t\t\t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_173 = this.expressionList.get(indexExpression);
                          _builder.append(_get_173, "\t   \t\t\t\t\t\t\t");
                          _builder.append(".value = srcObjExp");
                          _builder.append(evName, "\t   \t\t\t\t\t\t\t");
                          _builder.append("_");
                          Integer _get_174 = this.expressionList.get(indexExpression);
                          _builder.append(_get_174, "\t   \t\t\t\t\t\t\t");
                          _builder.append(".eGet(ref);\t\t");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t   \t\t\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t   \t\t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("\t   \t\t\t\t");
                          _builder.append("}");
                          _builder.newLine();
                        }
                      }
                    }
                  }
                } else {
                  {
                    ObSelectionStrategy _value_79 = ((ReferenceEvaluation)ev).getValue();
                    if ((_value_79 instanceof RandomTypeSelection)) {
                      {
                        Expression _expression_2 = ((ReferenceEvaluation)ev).getValue().getExpression();
                        if ((_expression_2 instanceof Expression)) {
                          _builder.append("//EXPRESSION LEVEL: ");
                          _builder.append(this.nExpression = (this.nExpression + 1));
                          _builder.newLineIfNotEmpty();
                          _builder.append("//EXPRESSION LEVEL: ");
                          boolean _add_2 = this.expressionList.add(Integer.valueOf(this.nExpression));
                          _builder.append(_add_2);
                          _builder.newLineIfNotEmpty();
                          _builder.append("//INDEX EXPRESSION: ");
                          int _size_3 = this.expressionList.size();
                          final int nestedIndexExpression_2 = (_size_3 - 1);
                          _builder.newLineIfNotEmpty();
                          _builder.append("RandomTypeSelection expRts");
                          Integer _get_175 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_175);
                          _builder.append(" = new RandomTypeSelection(packages, model, \"");
                          ObSelectionStrategy _value_80 = ((ReferenceEvaluation)ev).getValue();
                          String _name_44 = ((RandomTypeSelection) _value_80).getType().getName();
                          _builder.append(_name_44);
                          _builder.append("\");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("List<EObject> expObjects");
                          Integer _get_176 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_176);
                          _builder.append(" = expRts");
                          Integer _get_177 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_177);
                          _builder.append(".getObjects();");
                          _builder.newLineIfNotEmpty();
                          _builder.append("Expression exp");
                          Integer _get_178 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_178);
                          _builder.append(" = new Expression();");
                          _builder.newLineIfNotEmpty();
                          Object _method_2 = this.method(((ReferenceEvaluation)ev).getValue().getExpression(), nestedIndexExpression_2);
                          _builder.append(_method_2);
                          _builder.newLineIfNotEmpty();
                          _builder.append("List<EObject> selectedObjects");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_179 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_179);
                          _builder.append(" = evaluate(expObjects");
                          Integer _get_180 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_180);
                          _builder.append(", exp");
                          Integer _get_181 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_181);
                          _builder.append(");");
                          _builder.newLineIfNotEmpty();
                          _builder.append("EObject object");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_182 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_182);
                          _builder.append(" = null;");
                          _builder.newLineIfNotEmpty();
                          _builder.append("if (selectedObjects");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_183 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_183);
                          _builder.append(".size() > 0) {");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("object");
                          _builder.append(evName, "\t");
                          _builder.append("_");
                          Integer _get_184 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_184, "\t");
                          _builder.append(" = selectedObjects");
                          _builder.append(evName, "\t");
                          _builder.append("_");
                          Integer _get_185 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_185, "\t");
                          _builder.append(".get(ModelManager.getRandomIndex(selectedObjects");
                          _builder.append(evName, "\t");
                          _builder.append("_");
                          Integer _get_186 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_186, "\t");
                          _builder.append("));");
                          _builder.newLineIfNotEmpty();
                          _builder.append("}");
                          _builder.newLine();
                          _builder.append("ev");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_187 = this.expressionList.get(indexExpression);
                          _builder.append(_get_187);
                          _builder.append(".value = new SpecificObjectSelection(packages, model, object");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_188 = this.expressionList.get(nestedIndexExpression_2);
                          _builder.append(_get_188);
                          _builder.append(").getObject();");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("ev");
                          _builder.append(evName);
                          _builder.append("_");
                          Integer _get_189 = this.expressionList.get(indexExpression);
                          _builder.append(_get_189);
                          _builder.append(".value = new RandomTypeSelection(packages, model, \"");
                          ObSelectionStrategy _value_81 = ((ReferenceEvaluation)ev).getValue();
                          String _name_45 = ((RandomTypeSelection) _value_81).getType().getName();
                          _builder.append(_name_45);
                          _builder.append("\").getObject();");
                          _builder.newLineIfNotEmpty();
                        }
                      }
                    } else {
                      {
                        ObSelectionStrategy _value_82 = ((ReferenceEvaluation)ev).getValue();
                        if ((_value_82 instanceof TypedSelection)) {
                          {
                            Expression _expression_3 = ((ReferenceEvaluation)ev).getValue().getExpression();
                            if ((_expression_3 instanceof Expression)) {
                              _builder.append("//EXPRESSION LEVEL: ");
                              _builder.append(this.nExpression = (this.nExpression + 1));
                              _builder.newLineIfNotEmpty();
                              _builder.append("//EXPRESSION LEVEL: ");
                              boolean _add_3 = this.expressionList.add(Integer.valueOf(this.nExpression));
                              _builder.append(_add_3);
                              _builder.newLineIfNotEmpty();
                              _builder.append("//INDEX EXPRESSION: ");
                              int _size_4 = this.expressionList.size();
                              final int nestedIndexExpression_3 = (_size_4 - 1);
                              _builder.newLineIfNotEmpty();
                              _builder.append("TypedSelection expRts");
                              Integer _get_190 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_190);
                              _builder.append(" = new TypedSelection(packages, model, \"");
                              ObSelectionStrategy _value_83 = ((ReferenceEvaluation)ev).getValue();
                              String _name_46 = ((TypedSelection) _value_83).getType().getName();
                              _builder.append(_name_46);
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("List<EObject> expObjects");
                              Integer _get_191 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_191);
                              _builder.append(" = expRts");
                              Integer _get_192 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_192);
                              _builder.append(".getObjects();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("Expression exp");
                              Integer _get_193 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_193);
                              _builder.append(" = new Expression();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("List<String> refNames");
                              Integer _get_194 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_194);
                              _builder.append(" = new ArrayList<String>();");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t   \t\t\t");
                              Object _method_3 = this.method(((ReferenceEvaluation)ev).getValue().getExpression(), nestedIndexExpression_3);
                              _builder.append(_method_3, "\t   \t\t\t");
                              _builder.newLineIfNotEmpty();
                              _builder.append("List<EObject> selectedObjects");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_195 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_195);
                              _builder.append(" = evaluate(expObjects");
                              Integer _get_196 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_196);
                              _builder.append(", exp");
                              Integer _get_197 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_197);
                              _builder.append(");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("refNames");
                              Integer _get_198 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_198);
                              _builder.append(".add(\"");
                              String _name_47 = ((ReferenceEvaluation)ev).getName().getName();
                              _builder.append(_name_47);
                              _builder.append("\");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("Collections.reverse(refNames");
                              Integer _get_199 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_199);
                              _builder.append(");");
                              _builder.newLineIfNotEmpty();
                              _builder.append("selectedObjects");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_200 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_200);
                              _builder.append(" = ModelManager.getReferredObjects(refNames");
                              Integer _get_201 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_201);
                              _builder.append(", objects, selectedObjects1);");
                              _builder.newLineIfNotEmpty();
                              _builder.append("EObject object");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_202 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_202);
                              _builder.append(" = null;");
                              _builder.newLineIfNotEmpty();
                              _builder.append("if (selectedObjects");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_203 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_203);
                              _builder.append(".size() > 0) {");
                              _builder.newLineIfNotEmpty();
                              _builder.append("\t");
                              _builder.append("object");
                              _builder.append(evName, "\t");
                              _builder.append("_");
                              Integer _get_204 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_204, "\t");
                              _builder.append(" = selectedObjects");
                              _builder.append(evName, "\t");
                              _builder.append("_");
                              Integer _get_205 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_205, "\t");
                              _builder.append(".get(ModelManager.getRandomIndex(selectedObjects");
                              _builder.append(evName, "\t");
                              _builder.append("_");
                              Integer _get_206 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_206, "\t");
                              _builder.append("));");
                              _builder.newLineIfNotEmpty();
                              _builder.append("}");
                              _builder.newLine();
                              _builder.append("ev");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_207 = this.expressionList.get(indexExpression);
                              _builder.append(_get_207);
                              _builder.append(".value = new SpecificObjectSelection(packages, model, object");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_208 = this.expressionList.get(nestedIndexExpression_3);
                              _builder.append(_get_208);
                              _builder.append(").getObject();");
                              _builder.newLineIfNotEmpty();
                            } else {
                              _builder.append("ev");
                              _builder.append(evName);
                              _builder.append("_");
                              Integer _get_209 = this.expressionList.get(indexExpression);
                              _builder.append(_get_209);
                              _builder.append(".value = new TypedSelection(packages, model, \"");
                              ObSelectionStrategy _value_84 = ((ReferenceEvaluation)ev).getValue();
                              String _name_48 = ((TypedSelection) _value_84).getType().getName();
                              _builder.append(_name_48);
                              _builder.append("\").getObject();");
                              _builder.newLineIfNotEmpty();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        _builder.append("   \t\t");
        _builder.append("exp");
        Integer _get_210 = this.expressionList.get(indexExpression);
        _builder.append(_get_210, "   \t\t");
        _builder.append(".second.add(ev");
        _builder.append(evName, "   \t\t");
        _builder.append("_");
        Integer _get_211 = this.expressionList.get(indexExpression);
        _builder.append(_get_211, "   \t\t");
        _builder.append(");");
        _builder.newLineIfNotEmpty();
        _builder.append("   \t\t");
        _builder.append("//EVNAME + 1: ");
        _builder.append(evName = (evName + 1), "   \t\t");
        _builder.newLineIfNotEmpty();
      }
    }
    return _builder;
  }
  
  public CharSequence each(final Expression exp) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//INDEX EXPRESSION: ");
    int _size = this.expressionList.size();
    final int indexExpression = (_size - 1);
    _builder.newLineIfNotEmpty();
    {
      Evaluation _first = exp.getFirst();
      if ((_first instanceof AttributeEvaluation)) {
        _builder.append("//ATTRIBUTE: ");
        Evaluation _first_1 = exp.getFirst();
        final AttributeEvaluation attev = ((AttributeEvaluation) _first_1);
        _builder.newLineIfNotEmpty();
        _builder.append("selectedObjects = unique(selectedObjects, \"");
        String _name = attev.getName().getName();
        _builder.append(_name);
        _builder.append("\", false);");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      Evaluation _first_2 = exp.getFirst();
      if ((_first_2 instanceof ReferenceEvaluation)) {
        _builder.append("exp");
        Integer _get = this.expressionList.get(indexExpression);
        _builder.append(_get);
        _builder.append(".first = new ReferenceEvaluation();");
        _builder.newLineIfNotEmpty();
        _builder.append("//REFERENCE: ");
        Evaluation _first_3 = exp.getFirst();
        final ReferenceEvaluation refev = ((ReferenceEvaluation) _first_3);
        _builder.newLineIfNotEmpty();
        _builder.append("selectedObjects = unique(selectedObjects, \"");
        String _name_1 = refev.getName().getName();
        _builder.append(_name_1);
        _builder.append("\", true);");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      EList<Evaluation> _second = exp.getSecond();
      for(final Evaluation ev : _second) {
        {
          if ((ev instanceof AttributeEvaluation)) {
            _builder.append("selectedObjects = unique(selectedObjects, \"");
            String _name_2 = ((AttributeEvaluation)ev).getName().getName();
            _builder.append(_name_2);
            _builder.append("\", false);");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if ((ev instanceof ReferenceEvaluation)) {
            _builder.append("selectedObjects = unique(selectedObjects, \"");
            String _name_3 = ((ReferenceEvaluation)ev).getName().getName();
            _builder.append(_name_3);
            _builder.append("\", true);");
            _builder.newLineIfNotEmpty();
          }
        }
      }
    }
    _builder.append("   \t\t");
    _builder.append("objects = selectedObjects;");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence execute(final MutatorEnvironment e) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("   \t\t");
    _builder.append("//Generate metrics model");
    _builder.newLine();
    _builder.append("String mutatorecore = \"");
    _builder.append(this.mutatorURL);
    _builder.append("\";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("//Load MetaModel");
    _builder.newLine();
    _builder.append("List<EPackage> mutatorpackages = ModelManager.loadMetaModel(mutatorecore);");
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("Resource mutatormodel = ModelManager.loadModel(mutatorpackages, URI.createURI(\"");
        _builder.append(this.xmiFileName);
        _builder.append("\").toFileString());");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("Resource mutatormodel = ModelManager.loadModelNoException(mutatorpackages, URI.createURI(\"");
        _builder.append(this.xmiFileName);
        _builder.append("\").toFileString());");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("Map<String, EObject> hmMutator = getMutators(ModelManager.getObjects(mutatormodel));");
    _builder.newLine();
    {
      Definition _definition = e.getDefinition();
      boolean _isExhaustive = ((Program) _definition).isExhaustive();
      boolean _equals = (_isExhaustive == true);
      if (_equals) {
        _builder.append("\t");
        _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hashmapEObject = new HashMap<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hashmapList = new HashMap<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("monitor.subTask(\"Mutants generation\");");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("Resource model = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("Resource model = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        {
          if ((this.standalone == false)) {
            _builder.append("\t");
            _builder.append("Resource seed = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t");
            _builder.append("Resource seed = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        _builder.append("\t");
        _builder.append("List<String> mutPaths = new ArrayList<String>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Mutations muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
        _builder.newLine();
        _builder.append("//COUNTER: ");
        _builder.append(this.nMethod = (this.nMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//COMMAND: ");
        _builder.append(this.nCommands = (this.nCommands + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//REGISTRY COUNTER: ");
        _builder.append(this.nRegistryMethod = (this.nRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//");
        Mutator c = e.getCommands().get(0);
        _builder.newLineIfNotEmpty();
        {
          String _name = c.getName();
          boolean _tripleNotEquals = (_name != null);
          if (_tripleNotEquals) {
            _builder.append("//NAME:");
            String _name_1 = c.getName();
            String _string = Integer.valueOf(this.nCommands).toString();
            String _plus = (_name_1 + _string);
            String _commandName = this.commandName = _plus;
            _builder.append(_commandName);
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.commandName = Integer.valueOf(this.nCommands).toString());
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("//METHOD NAME:");
        String _string_1 = Integer.valueOf(this.nMethod).toString();
        String _plus_1 = ("mutation" + _string_1);
        String _methodName = this.methodName = _plus_1;
        _builder.append(_methodName);
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("mutationResults.numMutantsGenerated += ");
            _builder.append(this.methodName);
            _builder.append("(packages, model, hashmapEObject, hashmapList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, null, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutants, null, hashmapMutVersions, muts, project, monitor, 0, serialize, test, classes);");
            _builder.newLine();
          } else {
            _builder.append("mutationResults.numMutantsGenerated += ");
            _builder.append(this.methodName);
            _builder.append("(packages, model, hashmapEObject, hashmapList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, null, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutants, null, hashmapMutVersions, muts, monitor, 0, serialize, test, classes);");
            _builder.newLine();
          }
        }
      } else {
        _builder.append("int numMutantsToGenerate = numMutants;");
        _builder.newLine();
        {
          if ((!(e instanceof Block))) {
            _builder.append("int[] k = new int[1];");
            _builder.newLine();
            _builder.append("k[0] = 0;");
            _builder.newLine();
          } else {
            _builder.append("k[0] = 0;");
            _builder.newLine();
          }
        }
        _builder.append("for (int i = 0; i < numMutantsToGenerate; i++) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hashmapEObject = new HashMap<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hashmapList = new HashMap<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + i + \".model\";");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("monitor.subTask(\"Mutant \" + (count * numMutantsToGenerate + i + 1) + \"/\" + totalMutants + \": \" + mutFilename);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("String mutPath = hashmapModelFilenames.get(modelFilename) + \"/\" + \"Output\" + i + \"vs\";");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("boolean isRepeated = true;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("int attempts = 0;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("int max = 0;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("while ((isRepeated == true) && (attempts < maxAttempts)) {");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("Resource model = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("Resource model = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("Resource seed = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("Resource seed = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("List<String> mutPaths = new ArrayList<String>();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Mutations muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("attempts++;");
        _builder.newLine();
        {
          EList<Mutator> _commands = e.getCommands();
          for(final Mutator c_1 : _commands) {
            {
              if ((c_1 instanceof Mutator)) {
                _builder.append("   \t   \t\t\t");
                CharSequence _compile = this.compile(c_1);
                _builder.append(_compile, "   \t   \t\t\t");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.newLine();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("if (rules.get(\"");
            String _name_2 = constraint.getType().getName();
            _builder.append(_name_2);
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_3 = constraint.getType().getName();
            _builder.append(_name_3, "\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_4 = constraint.getType().getName();
            _builder.append(_name_4);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_1 = (_expressions != null);
              if (_tripleNotEquals_1) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_2 = (_rules != null);
              if (_tripleNotEquals_2) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("newrules.add(\"");
                    _builder.append(rule);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("rules.put(\"");
            String _name_5 = constraint.getType().getName();
            _builder.append(_name_5);
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t");
        _builder.append("int[] mutantIndex = new int[1];");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("mutantIndex[0] = i;");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("isRepeated = registryMutant(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, model, rules, muts, modelFilename, mutFilename, registry, hashsetMutants, hashmapModelFilenames, mutantIndex, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true);");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("isRepeated = registryMutantStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, model, rules, muts, modelFilename, mutFilename, registry, hashsetMutants, hashmapModelFilenames, mutantIndex, mutPaths, hashmapMutVersions, \"");
            String _projectName = this.getProjectName();
            _builder.append(_projectName, "\t\t");
            _builder.append("\", serialize, test, classes, ");
            _builder.append(this.className, "\t\t");
            _builder.append(".class, true);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("mutationResults.numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//Reload input");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("try {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("model.unload();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("model.load(null); ");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("seed.unload();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("seed.load(null);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("} catch (Exception e) {}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("monitor.worked(1);");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("count++;");
    _builder.newLine();
    _builder.append("mutatedObjects = null;");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence executeBlock(final MutatorEnvironment e, final Block b) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//Generate metrics model");
    _builder.newLine();
    _builder.append("String mutatorecore = \"");
    _builder.append(this.mutatorURL);
    _builder.append("\";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("//Load MetaModel");
    _builder.newLine();
    _builder.append("List<EPackage> mutatorpackages = ModelManager.loadMetaModel(mutatorecore);");
    _builder.newLine();
    {
      if ((this.standalone == false)) {
        _builder.append("Resource mutatormodel = ModelManager.loadModel(mutatorpackages, URI.createURI(\"");
        _builder.append(this.xmiFileName);
        _builder.append("\").toFileString());");
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("Resource mutatormodel = ModelManager.loadModelNoException(mutatorpackages, URI.createURI(\"");
        _builder.append(this.xmiFileName);
        _builder.append("\").toFileString());");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.newLine();
    _builder.append("Map<String, EObject> hmMutator = getMutators(ModelManager.getObjects(mutatormodel));");
    _builder.newLine();
    _builder.newLine();
    {
      Definition _definition = e.getDefinition();
      boolean _isExhaustive = ((Program) _definition).isExhaustive();
      boolean _equals = (_isExhaustive == true);
      if (_equals) {
        _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hashmapEObject = new HashMap<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
        _builder.newLine();
        _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hashmapList = new HashMap<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>>();");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("Resource model = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("Resource model = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        {
          if ((this.standalone == false)) {
            _builder.append("Resource seed = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("Resource seed = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        _builder.append("List<String> mutPaths = new ArrayList<String>();");
        _builder.newLine();
        _builder.append("Mutations muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
        _builder.newLine();
        _builder.newLine();
        _builder.append("//COUNTER: ");
        _builder.append(this.nMethod = (this.nMethod + 1));
        _builder.append("\t");
        _builder.newLineIfNotEmpty();
        _builder.append("//COMMAND: ");
        _builder.append(this.nCommands = (this.nCommands + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//REGISTRY COUNTER: ");
        _builder.append(this.nRegistryMethod = (this.nRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        {
          int _size = b.getCommands().size();
          boolean _greaterThan = (_size > 0);
          if (_greaterThan) {
            _builder.append("//");
            Mutator c = b.getCommands().get(0);
            _builder.newLineIfNotEmpty();
            {
              String _name = c.getName();
              boolean _tripleNotEquals = (_name != null);
              if (_tripleNotEquals) {
                _builder.append("//NAME:");
                String _name_1 = c.getName();
                String _string = Integer.valueOf(this.nCommands).toString();
                String _plus = (_name_1 + _string);
                String _commandName = this.commandName = _plus;
                _builder.append(_commandName);
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("//NAME:");
                _builder.append(this.commandName = Integer.valueOf(this.nCommands).toString());
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("//METHOD NAME:");
        String _string_1 = Integer.valueOf(this.nMethod).toString();
        String _plus_1 = ("mutation" + _string_1);
        String _methodName = this.methodName = _plus_1;
        _builder.append(_methodName);
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append(this.methodName);
            _builder.append("(packages, model, hashmapEObject, hashmapList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, project, monitor, k, serialize, test, classes);");
            _builder.newLine();
          } else {
            _builder.append(this.methodName);
            _builder.append("(packages, model, hashmapEObject, hashmapList, hashmapModelFilenames,");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t\t\t\t");
            _builder.append("modelFilename, mutPaths, hmMutator, seed, registeredPackages, localRegisteredPackages, hashmapModelFolders, ecoreURI,");
            _builder.newLine();
            _builder.append("\t\t\t\t\t");
            _builder.append("registry, hashsetMutantsBlock, fromNames, hashmapMutVersions, muts, monitor, k, serialize, test, classes);");
            _builder.newLine();
          }
        }
        _builder.append("numMutantsGenerated = k[0];");
        _builder.newLine();
      } else {
        _builder.append("int numMutantsToGenerate = numMutants;");
        _builder.newLine();
        {
          if ((!(b instanceof Block))) {
            _builder.append("int[] k = new int[1];");
            _builder.newLine();
            _builder.append("k[0] = 0;");
            _builder.newLine();
          } else {
            _builder.append("k[0] = 0;");
            _builder.newLine();
          }
        }
        _builder.append("   \t   \t\t\t");
        _builder.newLine();
        _builder.append("for (int i = 0; i < numMutantsToGenerate; i++) {");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> hashmapEObject = new HashMap<String, SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("Map<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>> hashmapList = new HashMap<String, List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>>();");
        _builder.newLine();
        {
          int _size_1 = b.getFrom().size();
          boolean _equals_1 = (_size_1 == 0);
          if (_equals_1) {
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
            String _name_2 = b.getName();
            _builder.append(_name_2);
            _builder.append("/Output\" + i + \".model\";");
            _builder.newLineIfNotEmpty();
            _builder.append("String mutPath = hashmapModelFilenames.get(modelFilename) + \"/");
            String _name_3 = b.getName();
            _builder.append(_name_3);
            _builder.append("/Output\" + i + \"vs\";");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("String mutFilename = hashmapModelFilenames.get(modelFilename) + \"/");
            String _name_4 = b.getName();
            _builder.append(_name_4);
            _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + i + \".model\";");
            _builder.newLineIfNotEmpty();
            _builder.append("String mutPath = hashmapModelFilenames.get(modelFilename) + \"/");
            String _name_5 = b.getName();
            _builder.append(_name_5);
            _builder.append("/\" + hashmapModelFolders.get(modelFilename) + \"/Output\" + i + \"vs\";");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t");
        _builder.append("boolean isRepeated = true;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("int attempts = 0;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("int max = 0;");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("while ((isRepeated == true) && (attempts < maxAttempts)) {");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("Resource model = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("Resource model = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("Resource seed = ModelManager.loadModel(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          } else {
            _builder.append("\t\t");
            _builder.append("Resource seed = ModelManager.loadModelNoException(packages, URI.createURI(\"file:/\" + modelFilename).toFileString());");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("List<String> mutPaths = new ArrayList<String>();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Mutations muts = AppliedMutationsFactory.eINSTANCE.createMutations();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("attempts++;");
        _builder.newLine();
        {
          EList<Mutator> _commands = b.getCommands();
          for(final Mutator c_1 : _commands) {
            {
              if ((c_1 instanceof Mutator)) {
                _builder.append("   \t   \t\t\t");
                CharSequence _compile = this.compile(c_1);
                _builder.append(_compile, "   \t   \t\t\t");
                _builder.newLineIfNotEmpty();
              }
            }
          }
        }
        _builder.append("\t\t");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("// MUTANT COMPLETION AND REGISTRY");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("Map<String, List<String>> rules = new HashMap<String, List<String>>();");
        _builder.newLine();
        {
          EList<Constraint> _constraints = e.getConstraints();
          for(final Constraint constraint : _constraints) {
            _builder.append("if (rules.get(\"");
            String _name_6 = constraint.getType().getName();
            _builder.append(_name_6);
            _builder.append("\") == null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
            _builder.append("rules.put(\"");
            String _name_7 = constraint.getType().getName();
            _builder.append(_name_7, "\t");
            _builder.append("\", new ArrayList<String>());");
            _builder.newLineIfNotEmpty();
            _builder.append("}");
            _builder.newLine();
            _builder.append("List<String> newrules = rules.get(\"");
            String _name_8 = constraint.getType().getName();
            _builder.append(_name_8);
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            {
              EList<InvariantCS> _expressions = constraint.getExpressions();
              boolean _tripleNotEquals_1 = (_expressions != null);
              if (_tripleNotEquals_1) {
                {
                  EList<InvariantCS> _expressions_1 = constraint.getExpressions();
                  for(final InvariantCS expression : _expressions_1) {
                    _builder.append("newrules.add(\"");
                    String _constraintText = WodelUtils.getConstraintText(this.fileName, expression);
                    _builder.append(_constraintText);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              EList<String> _rules = constraint.getRules();
              boolean _tripleNotEquals_2 = (_rules != null);
              if (_tripleNotEquals_2) {
                {
                  EList<String> _rules_1 = constraint.getRules();
                  for(final String rule : _rules_1) {
                    _builder.append("newrules.add(\"");
                    _builder.append(rule);
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("rules.put(\"");
            String _name_9 = constraint.getType().getName();
            _builder.append(_name_9);
            _builder.append("\", newrules);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t");
        _builder.append("int[] mutantIndex = new int[1];");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("mutantIndex[0] = i;");
        _builder.newLine();
        {
          if ((this.standalone == false)) {
            _builder.append("\t\t");
            _builder.append("isRepeated = registryMutantWithBlocks(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, model, rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
            String _name_10 = b.getName();
            _builder.append(_name_10, "\t\t");
            _builder.append("\", fromNames, mutantIndex, mutPaths, hashmapMutVersions, project, serialize, test, classes, this.getClass(), true, false);");
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("\t\t");
            _builder.append("isRepeated = registryMutantWithBlocksStandalone(ecoreURI, packages, registeredPackages, localRegisteredPackages, seed, model, rules, muts, modelFilename, mutFilename, registry, hashsetMutantsBlock, hashmapModelFilenames, hashmapModelFolders, \"");
            String _name_11 = b.getName();
            _builder.append(_name_11, "\t\t");
            _builder.append("\", fromNames, mutantIndex, mutPaths, hashmapMutVersions, \"");
            String _projectName = this.getProjectName();
            _builder.append(_projectName, "\t\t");
            _builder.append("\", serialize, test, classes, ");
            _builder.append(this.className, "\t\t");
            _builder.append(".class, true, false);");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("\t\t");
        _builder.append("if (isRepeated == false) {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("numMutantsGenerated++;");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("k[0] = k[0] + 1;");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("//Reload input");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("try {");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("model.unload();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("model.load(null);");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("seed.unload();");
        _builder.newLine();
        _builder.append("\t\t\t");
        _builder.append("seed.load(null);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("} catch (Exception e) {}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}\t\t");
        _builder.newLine();
      }
    }
    {
      Repeat _repeat = b.getRepeat();
      boolean _equals_2 = Objects.equal(_repeat, Repeat.YES);
      if (_equals_2) {
        _builder.append("   \t\t");
        _builder.append("hashmapMutants.put(modelFilename, hashsetMutantsBlock);");
        _builder.newLine();
      }
    }
    _builder.append("   \t\t");
    _builder.append("mutatedObjects = null;");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compile(final Mutator e) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((e instanceof CompositeMutator)) {
        _builder.append("//COUNTER: ");
        int _mutatorSize = MutatorUtils.mutatorSize(((CompositeMutator)e));
        int _plus = (this.nMethod + _mutatorSize);
        int _nMethod = this.nMethod = _plus;
        _builder.append(_nMethod);
        _builder.newLineIfNotEmpty();
        _builder.append("//COMPOSITE REGISTRY COUNTER: ");
        _builder.append(this.nCompositeRegistryMethod = (this.nCompositeRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        {
          int _fixed = ((CompositeMutator)e).getFixed();
          boolean _equals = (_fixed == 0);
          if (_equals) {
            {
              int _max = ((CompositeMutator)e).getMax();
              int _min = ((CompositeMutator)e).getMin();
              int _minus = (_max - _min);
              boolean _greaterThan = (_minus > 0);
              if (_greaterThan) {
                _builder.append("int max");
                _builder.append(this.nCompositeCommands);
                _builder.append(" = getRandom(");
                int _max_1 = ((CompositeMutator)e).getMax();
                int _min_1 = ((CompositeMutator)e).getMin();
                int _minus_1 = (_max_1 - _min_1);
                _builder.append(_minus_1);
                _builder.append(") + ");
                int _min_2 = ((CompositeMutator)e).getMin();
                _builder.append(_min_2);
                _builder.append(";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if (((((CompositeMutator)e).getMin() == 0) && (((CompositeMutator)e).getMax() == 0))) {
                _builder.append("int max");
                _builder.append(this.nCompositeCommands);
                _builder.append(" = 1;");
                _builder.newLineIfNotEmpty();
              } else {
                int _min_3 = ((CompositeMutator)e).getMin();
                int _max_2 = ((CompositeMutator)e).getMax();
                boolean _equals_1 = (_min_3 == _max_2);
                if (_equals_1) {
                  _builder.append("int max");
                  _builder.append(this.nCompositeCommands);
                  _builder.append(" = ");
                  int _min_4 = ((CompositeMutator)e).getMin();
                  _builder.append(_min_4);
                  _builder.append(";");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          } else {
            _builder.append("int max");
            _builder.append(this.nCompositeCommands);
            _builder.append(" = ");
            int _fixed_1 = ((CompositeMutator)e).getFixed();
            _builder.append(_fixed_1);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("for (int j");
        _builder.append(this.nCompositeCommands);
        _builder.append(" = 0; j");
        _builder.append(this.nCompositeCommands);
        _builder.append(" < max");
        _builder.append(this.nCompositeCommands);
        _builder.append("; j");
        _builder.append(this.nCompositeCommands);
        _builder.append("++) {");
        _builder.newLineIfNotEmpty();
        {
          String _name = ((CompositeMutator)e).getName();
          boolean _tripleNotEquals = (_name != null);
          if (_tripleNotEquals) {
            _builder.append("//NAME:");
            String _name_1 = ((CompositeMutator)e).getName();
            String _string = Integer.valueOf(this.nCompositeCommands).toString();
            String _plus_1 = (_name_1 + _string);
            String _compositeCommandName = this.compositeCommandName = _plus_1;
            _builder.append(_compositeCommandName);
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.compositeCommandName = Integer.valueOf(this.nCompositeCommands).toString());
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.newLine();
        _builder.append("//COMPOSITE METHOD NAME:");
        _builder.append(this.compositeMethodName = this.compositeCommands.get(this.nCompositeCommands));
        _builder.newLineIfNotEmpty();
        _builder.append("//COMMAND: ");
        int _compositeMutatorSize = MutatorUtils.compositeMutatorSize(((CompositeMutator)e));
        int _plus_2 = (this.nCompositeCommands + _compositeMutatorSize);
        int _nCompositeCommands = this.nCompositeCommands = _plus_2;
        _builder.append(_nCompositeCommands);
        _builder.newLineIfNotEmpty();
        _builder.append("List<Mutator> l");
        _builder.append(this.compositeCommandName);
        _builder.append(" = ");
        _builder.append(this.compositeMethodName);
        _builder.append("(packages, model, hashmapEObject, hashmapList, serialize, test, classes);");
        _builder.newLineIfNotEmpty();
        _builder.append("//COUNTER: ");
        _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//REGISTRY METHOD NAME:");
        String _string_1 = Integer.valueOf(this.nCompositeRegistryMethod).toString();
        String _plus_3 = ("compositeRegistry" + _string_1);
        String _compositeRegistryMethodName = this.compositeRegistryMethodName = _plus_3;
        _builder.append(_compositeRegistryMethodName);
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("if (l");
        _builder.append(this.compositeCommandName);
        _builder.append(" != null) {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("for (Mutator mut : l");
        _builder.append(this.compositeCommandName, "\t");
        _builder.append(") {");
        _builder.newLineIfNotEmpty();
        {
          if ((this.executeMutation == true)) {
            _builder.append("\t\t");
            _builder.append("if (mut != null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("Object mutated = mut.mutate();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.compositeRegistryMethodName, "\t");
        _builder.append("(l");
        _builder.append(this.compositeCommandName, "\t");
        _builder.append(", hmMutator, seed);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("//COUNTER: ");
        int _mutatorSize_1 = MutatorUtils.mutatorSize(((CompositeMutator)e));
        int _plus_4 = (this.nRegistryMutation + _mutatorSize_1);
        int _nRegistryMutation = this.nRegistryMutation = _plus_4;
        _builder.append(_nRegistryMutation);
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("//COUNTER: ");
        _builder.append(this.nMethod = (this.nMethod + 1));
        _builder.append("\t");
        _builder.newLineIfNotEmpty();
        _builder.append("//COMMAND: ");
        _builder.append(this.nCommands = (this.nCommands + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//REGISTRY COUNTER: ");
        _builder.append(this.nRegistryMethod = (this.nRegistryMethod + 1));
        _builder.newLineIfNotEmpty();
        {
          int _fixed_2 = e.getFixed();
          boolean _equals_2 = (_fixed_2 == 0);
          if (_equals_2) {
            {
              int _max_3 = e.getMax();
              int _min_5 = e.getMin();
              int _minus_2 = (_max_3 - _min_5);
              boolean _greaterThan_1 = (_minus_2 > 0);
              if (_greaterThan_1) {
                _builder.append("max = getRandom(");
                int _max_4 = e.getMax();
                int _min_6 = e.getMin();
                int _minus_3 = (_max_4 - _min_6);
                _builder.append(_minus_3);
                _builder.append(") + ");
                int _min_7 = e.getMin();
                _builder.append(_min_7);
                _builder.append(";");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if (((e.getMin() == 0) && (e.getMax() == 0))) {
                _builder.append("max = 1;");
                _builder.newLine();
              } else {
                int _min_8 = e.getMin();
                int _max_5 = e.getMax();
                boolean _equals_3 = (_min_8 == _max_5);
                if (_equals_3) {
                  _builder.append("max = ");
                  int _min_9 = e.getMin();
                  _builder.append(_min_9);
                  _builder.append(";");
                  _builder.newLineIfNotEmpty();
                }
              }
            }
          } else {
            _builder.append("max = ");
            int _fixed_3 = e.getFixed();
            _builder.append(_fixed_3);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          EObject _eContainer = e.eContainer();
          boolean _not = (!(_eContainer instanceof Block));
          if (_not) {
            _builder.append("k[0] = 0;");
            _builder.newLine();
          }
        }
        _builder.append("for (int j = 0; j < max; j++) {");
        _builder.newLine();
        {
          String _name_2 = e.getName();
          boolean _tripleNotEquals_1 = (_name_2 != null);
          if (_tripleNotEquals_1) {
            _builder.append("//NAME:");
            String _name_3 = e.getName();
            String _string_2 = Integer.valueOf(this.nCommands).toString();
            String _plus_5 = (_name_3 + _string_2);
            String _commandName = this.commandName = _plus_5;
            _builder.append(_commandName);
            _builder.newLineIfNotEmpty();
          } else {
            _builder.append("//NAME:");
            _builder.append(this.commandName = Integer.valueOf(this.nCommands).toString());
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("//METHOD NAME:");
        String _string_3 = Integer.valueOf(this.nMethod).toString();
        String _plus_6 = ("mutation" + _string_3);
        String _methodName = this.methodName = _plus_6;
        _builder.append(_methodName);
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("List<Mutator> l");
        _builder.append(this.commandName);
        _builder.append(" = ");
        _builder.append(this.methodName);
        _builder.append("(packages, model, hashmapEObject, hashmapList, serialize, test, classes);");
        _builder.newLineIfNotEmpty();
        _builder.append("//COUNTER: ");
        _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
        _builder.newLineIfNotEmpty();
        _builder.append("//REGISTRY METHOD NAME:");
        String _string_4 = Integer.valueOf(this.nRegistryMethod).toString();
        String _plus_7 = ("registry" + _string_4);
        String _registryMethodName = this.registryMethodName = _plus_7;
        _builder.append(_registryMethodName);
        _builder.newLineIfNotEmpty();
        _builder.newLine();
        _builder.append("if (l");
        _builder.append(this.commandName);
        _builder.append(" != null) {");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("for (Mutator mut : l");
        _builder.append(this.commandName, "\t");
        _builder.append(") {");
        _builder.newLineIfNotEmpty();
        {
          if ((this.executeMutation == true)) {
            _builder.append("\t\t");
            _builder.append("if (mut != null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("Object mutated = mut.mutate();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("if (mutated != null) {");
            _builder.newLine();
            {
              if (((((e instanceof CreateObjectMutator) || (e instanceof SelectObjectMutator)) || (e instanceof CloneObjectMutator)) || (e instanceof RetypeObjectMutator))) {
                {
                  String _name_4 = e.getName();
                  boolean _tripleNotEquals_2 = (_name_4 != null);
                  if (_tripleNotEquals_2) {
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("if (mutated instanceof EObject) {");
                    _builder.newLine();
                    {
                      if ((e instanceof CreateObjectMutator)) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapEObject.put(\"");
                        String _name_5 = ((CreateObjectMutator)e).getName();
                        _builder.append(_name_5, "\t\t\t\t");
                        _builder.append("\", entry);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      if ((e instanceof SelectObjectMutator)) {
                        {
                          if (((((SelectObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((SelectObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapEObject.put(\"");
                            String _name_6 = ((SelectObjectMutator)e).getName();
                            _builder.append(_name_6, "\t\t\t\t");
                            _builder.append("\", entry);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          ObSelectionStrategy _object = ((SelectObjectMutator)e).getObject();
                          if ((_object instanceof CompleteTypeSelection)) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("if (hashmapList.get(\"");
                            String _name_7 = ((SelectObjectMutator)e).getName();
                            _builder.append(_name_7, "\t\t\t\t");
                            _builder.append("\") != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = hashmapList.get(\"");
                            String _name_8 = ((SelectObjectMutator)e).getName();
                            _builder.append(_name_8, "\t\t\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("listEObjects.add(entry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapList.put(\"");
                            String _name_9 = ((SelectObjectMutator)e).getName();
                            _builder.append(_name_9, "\t\t\t\t");
                            _builder.append("\", listEObjects);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    {
                      if ((e instanceof CloneObjectMutator)) {
                        {
                          if (((((CloneObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((CloneObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapEObject.put(\"");
                            String _name_10 = ((CloneObjectMutator)e).getName();
                            _builder.append(_name_10, "\t\t\t\t");
                            _builder.append("\", entry);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          ObSelectionStrategy _object_1 = ((CloneObjectMutator)e).getObject();
                          if ((_object_1 instanceof CompleteTypeSelection)) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("if (hashmapList.get(\"");
                            String _name_11 = ((CloneObjectMutator)e).getName();
                            _builder.append(_name_11, "\t\t\t\t");
                            _builder.append("\") != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = hashmapList.get(\"");
                            String _name_12 = ((CloneObjectMutator)e).getName();
                            _builder.append(_name_12, "\t\t\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("listEObjects.add(entry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapList.put(\"");
                            String _name_13 = ((CloneObjectMutator)e).getName();
                            _builder.append(_name_13, "\t\t\t\t");
                            _builder.append("\", listEObjects);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    {
                      if ((e instanceof RetypeObjectMutator)) {
                        {
                          if (((((RetypeObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((RetypeObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapEObject.put(\"");
                            String _name_14 = ((RetypeObjectMutator)e).getName();
                            _builder.append(_name_14, "\t\t\t\t");
                            _builder.append("\", entry);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                        {
                          ObSelectionStrategy _object_2 = ((RetypeObjectMutator)e).getObject();
                          if ((_object_2 instanceof CompleteTypeSelection)) {
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("if (hashmapList.get(\"");
                            String _name_15 = ((RetypeObjectMutator)e).getName();
                            _builder.append(_name_15, "\t\t\t\t");
                            _builder.append("\") != null) {");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = hashmapList.get(\"");
                            String _name_16 = ((RetypeObjectMutator)e).getName();
                            _builder.append(_name_16, "\t\t\t\t\t");
                            _builder.append("\");");
                            _builder.newLineIfNotEmpty();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("else {");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("\t");
                            _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("}");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("listEObjects.add(entry);");
                            _builder.newLine();
                            _builder.append("\t\t");
                            _builder.append("\t\t");
                            _builder.append("hashmapList.put(\"");
                            String _name_17 = ((RetypeObjectMutator)e).getName();
                            _builder.append(_name_17, "\t\t\t\t");
                            _builder.append("\", listEObjects);");
                            _builder.newLineIfNotEmpty();
                          }
                        }
                      }
                    }
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              String _name_18 = e.getName();
              boolean _tripleNotEquals_3 = (_name_18 != null);
              if (_tripleNotEquals_3) {
                {
                  if ((e instanceof SelectSampleMutator)) {
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("if (mutated instanceof List<?>) {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("List<EObject> mutObjects = ((SelectSampleMutator) mut).getObjects();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("if (hashmapList.get(\"");
                    String _name_19 = ((SelectSampleMutator)e).getName();
                    _builder.append(_name_19, "\t\t\t\t\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("listEObjects = hashmapList.get(\"");
                    String _name_20 = ((SelectSampleMutator)e).getName();
                    _builder.append(_name_20, "\t\t\t\t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects.add(entry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("hashmapList.put(\"");
                    String _name_21 = ((SelectSampleMutator)e).getName();
                    _builder.append(_name_21, "\t\t\t\t\t");
                    _builder.append("\", listEObjects);");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                  }
                }
              }
            }
            {
              if ((((e instanceof SelectObjectMutator) == false) && ((e instanceof SelectSampleMutator) == false))) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("String mutatorPath = mutPath + \"/Output\" + i + \"_\" + j + \"_\" + k[0] + \"_");
                _builder.append(this.nMethod, "\t\t\t\t");
                _builder.append(".model\";");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("ModelManager.saveOutModel(model, mutatorPath);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("if (mutPaths.contains(mutatorPath) == false) {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("mutPaths.add(mutatorPath);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("AppMutation appMut = ");
            _builder.append(this.registryMethodName, "\t\t\t\t");
            _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("if (appMut != null) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t\t");
            _builder.append("muts.getMuts().add(appMut);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
        _builder.append("}");
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  public CharSequence compile(final Mutator e, final int index) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("//COUNTER: ");
    _builder.append(this.nMethod = index);
    _builder.append("\t");
    _builder.newLineIfNotEmpty();
    _builder.append("//COMMAND: ");
    _builder.append(this.nCommands = (this.nCommands + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY COUNTER: ");
    _builder.append(this.nRegistryMethod = index);
    _builder.newLineIfNotEmpty();
    {
      int _fixed = e.getFixed();
      boolean _equals = (_fixed == 0);
      if (_equals) {
        {
          int _max = e.getMax();
          int _min = e.getMin();
          int _minus = (_max - _min);
          boolean _greaterThan = (_minus > 0);
          if (_greaterThan) {
            _builder.append("max = getRandom(");
            int _max_1 = e.getMax();
            int _min_1 = e.getMin();
            int _minus_1 = (_max_1 - _min_1);
            _builder.append(_minus_1);
            _builder.append(") + ");
            int _min_2 = e.getMin();
            _builder.append(_min_2);
            _builder.append(";");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          if (((e.getMin() == 0) && (e.getMax() == 0))) {
            _builder.append("max = 1;");
            _builder.newLine();
          } else {
            int _min_3 = e.getMin();
            int _max_2 = e.getMax();
            boolean _equals_1 = (_min_3 == _max_2);
            if (_equals_1) {
              _builder.append("max = ");
              int _min_4 = e.getMin();
              _builder.append(_min_4);
              _builder.append(";");
              _builder.newLineIfNotEmpty();
            }
          }
        }
      } else {
        _builder.append("max = ");
        int _fixed_1 = e.getFixed();
        _builder.append(_fixed_1);
        _builder.append(";");
        _builder.newLineIfNotEmpty();
      }
    }
    {
      EObject _eContainer = e.eContainer();
      boolean _not = (!(_eContainer instanceof Block));
      if (_not) {
        _builder.append("k[0] = 0;");
        _builder.newLine();
      }
    }
    _builder.append("for (int j = 0; j < max; j++) {");
    _builder.newLine();
    {
      String _name = e.getName();
      boolean _tripleNotEquals = (_name != null);
      if (_tripleNotEquals) {
        _builder.append("//NAME:");
        String _name_1 = e.getName();
        String _string = Integer.valueOf(this.nCommands).toString();
        String _plus = (_name_1 + _string);
        String _commandName = this.commandName = _plus;
        _builder.append(_commandName);
        _builder.newLineIfNotEmpty();
      } else {
        _builder.append("//NAME:");
        _builder.append(this.commandName = Integer.valueOf(this.nCommands).toString());
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("//METHOD NAME:");
    String _string_1 = Integer.valueOf(this.nMethod).toString();
    String _plus_1 = ("mutation" + _string_1);
    String _methodName = this.methodName = _plus_1;
    _builder.append(_methodName);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("List<Mutator> l");
    _builder.append(this.commandName);
    _builder.append(" = ");
    _builder.append(this.methodName);
    _builder.append("(packages, model, hashmapEObject, hashmapList, serialize, test, classes);");
    _builder.newLineIfNotEmpty();
    _builder.append("//COUNTER: ");
    _builder.append(this.nRegistryMutation = (this.nRegistryMutation + 1));
    _builder.newLineIfNotEmpty();
    _builder.append("//REGISTRY METHOD NAME:");
    String _string_2 = Integer.valueOf(this.nRegistryMethod).toString();
    String _plus_2 = ("registry" + _string_2);
    String _registryMethodName = this.registryMethodName = _plus_2;
    _builder.append(_registryMethodName);
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("if (l");
    _builder.append(this.commandName);
    _builder.append(" != null) {");
    _builder.newLineIfNotEmpty();
    _builder.append("if (overallMutators.get(");
    _builder.append(index);
    _builder.append(") == null) {");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("for (Mutator mut : l");
    _builder.append(this.commandName, "\t");
    _builder.append(") {");
    _builder.newLineIfNotEmpty();
    {
      if ((this.executeMutation == true)) {
        _builder.append("\t\t");
        _builder.append("if (mut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("Object mutated = mut.mutate();");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("if (mutated != null) {");
        _builder.newLine();
        {
          if (((((e instanceof CreateObjectMutator) || (e instanceof SelectObjectMutator)) || (e instanceof CloneObjectMutator)) || (e instanceof RetypeObjectMutator))) {
            {
              String _name_2 = e.getName();
              boolean _tripleNotEquals_1 = (_name_2 != null);
              if (_tripleNotEquals_1) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("if (mutated instanceof EObject) {");
                _builder.newLine();
                {
                  if ((e instanceof CreateObjectMutator)) {
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t\t");
                    _builder.append("hashmapEObject.put(\"");
                    String _name_3 = ((CreateObjectMutator)e).getName();
                    _builder.append(_name_3, "\t\t\t\t");
                    _builder.append("\", entry);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  if ((e instanceof SelectObjectMutator)) {
                    {
                      if (((((SelectObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((SelectObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapEObject.put(\"");
                        String _name_4 = ((SelectObjectMutator)e).getName();
                        _builder.append(_name_4, "\t\t\t\t");
                        _builder.append("\", entry);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      ObSelectionStrategy _object = ((SelectObjectMutator)e).getObject();
                      if ((_object instanceof CompleteTypeSelection)) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("if (hashmapList.get(\"");
                        String _name_5 = ((SelectObjectMutator)e).getName();
                        _builder.append(_name_5, "\t\t\t\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = hashmapList.get(\"");
                        String _name_6 = ((SelectObjectMutator)e).getName();
                        _builder.append(_name_6, "\t\t\t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("listEObjects.add(entry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapList.put(\"");
                        String _name_7 = ((SelectObjectMutator)e).getName();
                        _builder.append(_name_7, "\t\t\t\t");
                        _builder.append("\", listEObjects);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  if ((e instanceof CloneObjectMutator)) {
                    {
                      if (((((CloneObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((CloneObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapEObject.put(\"");
                        String _name_8 = ((CloneObjectMutator)e).getName();
                        _builder.append(_name_8, "\t\t\t\t");
                        _builder.append("\", entry);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      ObSelectionStrategy _object_1 = ((CloneObjectMutator)e).getObject();
                      if ((_object_1 instanceof CompleteTypeSelection)) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("if (hashmapList.get(\"");
                        String _name_9 = ((CloneObjectMutator)e).getName();
                        _builder.append(_name_9, "\t\t\t\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = hashmapList.get(\"");
                        String _name_10 = ((CloneObjectMutator)e).getName();
                        _builder.append(_name_10, "\t\t\t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("listEObjects.add(entry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapList.put(\"");
                        String _name_11 = ((CloneObjectMutator)e).getName();
                        _builder.append(_name_11, "\t\t\t\t");
                        _builder.append("\", listEObjects);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                {
                  if ((e instanceof RetypeObjectMutator)) {
                    {
                      if (((((RetypeObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((RetypeObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapEObject.put(\"");
                        String _name_12 = ((RetypeObjectMutator)e).getName();
                        _builder.append(_name_12, "\t\t\t\t");
                        _builder.append("\", entry);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                    {
                      ObSelectionStrategy _object_2 = ((RetypeObjectMutator)e).getObject();
                      if ((_object_2 instanceof CompleteTypeSelection)) {
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("if (hashmapList.get(\"");
                        String _name_13 = ((RetypeObjectMutator)e).getName();
                        _builder.append(_name_13, "\t\t\t\t");
                        _builder.append("\") != null) {");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = hashmapList.get(\"");
                        String _name_14 = ((RetypeObjectMutator)e).getName();
                        _builder.append(_name_14, "\t\t\t\t\t");
                        _builder.append("\");");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("else {");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("\t");
                        _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("}");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("listEObjects.add(entry);");
                        _builder.newLine();
                        _builder.append("\t\t");
                        _builder.append("\t\t");
                        _builder.append("hashmapList.put(\"");
                        String _name_15 = ((RetypeObjectMutator)e).getName();
                        _builder.append(_name_15, "\t\t\t\t");
                        _builder.append("\", listEObjects);");
                        _builder.newLineIfNotEmpty();
                      }
                    }
                  }
                }
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          String _name_16 = e.getName();
          boolean _tripleNotEquals_2 = (_name_16 != null);
          if (_tripleNotEquals_2) {
            {
              if ((e instanceof SelectSampleMutator)) {
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("if (mutated instanceof List<?>) {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("List<EObject> mutObjects = ((SelectSampleMutator) mut).getObjects();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("if (hashmapList.get(\"");
                String _name_17 = ((SelectSampleMutator)e).getName();
                _builder.append(_name_17, "\t\t\t\t\t");
                _builder.append("\") != null) {");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("listEObjects = hashmapList.get(\"");
                String _name_18 = ((SelectSampleMutator)e).getName();
                _builder.append(_name_18, "\t\t\t\t\t\t");
                _builder.append("\");");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("else {");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("}");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("listEObjects.add(entry);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("\t");
                _builder.append("hashmapList.put(\"");
                String _name_19 = ((SelectSampleMutator)e).getName();
                _builder.append(_name_19, "\t\t\t\t\t");
                _builder.append("\", listEObjects);");
                _builder.newLineIfNotEmpty();
                _builder.append("\t\t");
                _builder.append("\t\t");
                _builder.append("}");
                _builder.newLine();
              }
            }
          }
        }
        {
          if ((((e instanceof SelectObjectMutator) == false) && ((e instanceof SelectSampleMutator) == false))) {
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("String mutatorPath = mutPath + \"/Output\" + i + \"_\" + j + \"_\" + k[0] + \"_");
            _builder.append(this.nMethod, "\t\t\t\t");
            _builder.append(".model\";");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("ModelManager.saveOutModel(model, mutatorPath);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("if (mutPaths.contains(mutatorPath) == false) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("mutPaths.add(mutatorPath);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("AppMutation appMut = ");
        _builder.append(this.registryMethodName, "\t\t\t\t");
        _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("if (appMut != null) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t\t");
        _builder.append("muts.getMuts().add(appMut);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("}");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("else {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Mutator mut = overallMutators.get(");
    _builder.append(index, "\t");
    _builder.append(");");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("mut.setModel(model);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Object mutated = mut.mutate();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("if (mutated != null) {");
    _builder.newLine();
    {
      if (((((e instanceof CreateObjectMutator) || (e instanceof SelectObjectMutator)) || (e instanceof CloneObjectMutator)) || (e instanceof RetypeObjectMutator))) {
        {
          String _name_20 = e.getName();
          boolean _tripleNotEquals_3 = (_name_20 != null);
          if (_tripleNotEquals_3) {
            _builder.append("\t\t");
            _builder.append("if (mutated instanceof EObject) {");
            _builder.newLine();
            {
              if ((e instanceof CreateObjectMutator)) {
                _builder.append("\t\t");
                _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                _builder.newLine();
                _builder.append("\t\t");
                _builder.append("hashmapEObject.put(\"");
                String _name_21 = ((CreateObjectMutator)e).getName();
                _builder.append(_name_21, "\t\t");
                _builder.append("\", entry);");
                _builder.newLineIfNotEmpty();
              }
            }
            {
              if ((e instanceof SelectObjectMutator)) {
                {
                  if (((((SelectObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((SelectObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("hashmapEObject.put(\"");
                    String _name_22 = ((SelectObjectMutator)e).getName();
                    _builder.append(_name_22, "\t\t\t");
                    _builder.append("\", entry);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_3 = ((SelectObjectMutator)e).getObject();
                  if ((_object_3 instanceof CompleteTypeSelection)) {
                    _builder.append("\t\t");
                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("if (hashmapList.get(\"");
                    String _name_23 = ((SelectObjectMutator)e).getName();
                    _builder.append(_name_23, "\t\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = hashmapList.get(\"");
                    String _name_24 = ((SelectObjectMutator)e).getName();
                    _builder.append(_name_24, "\t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("listEObjects.add(entry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("hashmapList.put(\"");
                    String _name_25 = ((SelectObjectMutator)e).getName();
                    _builder.append(_name_25, "\t\t");
                    _builder.append("\", listEObjects);");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              if ((e instanceof CloneObjectMutator)) {
                {
                  if (((((CloneObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((CloneObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("hashmapEObject.put(\"");
                    String _name_26 = ((CloneObjectMutator)e).getName();
                    _builder.append(_name_26, "\t\t\t");
                    _builder.append("\", entry);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_4 = ((CloneObjectMutator)e).getObject();
                  if ((_object_4 instanceof CompleteTypeSelection)) {
                    _builder.append("\t\t");
                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("if (hashmapList.get(\"");
                    String _name_27 = ((CloneObjectMutator)e).getName();
                    _builder.append(_name_27, "\t\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = hashmapList.get(\"");
                    String _name_28 = ((CloneObjectMutator)e).getName();
                    _builder.append(_name_28, "\t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("listEObjects.add(entry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("hashmapList.put(\"");
                    String _name_29 = ((CloneObjectMutator)e).getName();
                    _builder.append(_name_29, "\t\t");
                    _builder.append("\", listEObjects);");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            {
              if ((e instanceof RetypeObjectMutator)) {
                {
                  if (((((RetypeObjectMutator)e).getObject() instanceof SpecificObjectSelection) || (((RetypeObjectMutator)e).getObject() instanceof RandomTypeSelection))) {
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("hashmapEObject.put(\"");
                    String _name_30 = ((RetypeObjectMutator)e).getName();
                    _builder.append(_name_30, "\t\t\t");
                    _builder.append("\", entry);");
                    _builder.newLineIfNotEmpty();
                  }
                }
                {
                  ObSelectionStrategy _object_5 = ((RetypeObjectMutator)e).getObject();
                  if ((_object_5 instanceof CompleteTypeSelection)) {
                    _builder.append("\t\t");
                    _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("if (hashmapList.get(\"");
                    String _name_31 = ((RetypeObjectMutator)e).getName();
                    _builder.append(_name_31, "\t\t");
                    _builder.append("\") != null) {");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = hashmapList.get(\"");
                    String _name_32 = ((RetypeObjectMutator)e).getName();
                    _builder.append(_name_32, "\t\t\t");
                    _builder.append("\");");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("else {");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("\t");
                    _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("}");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("listEObjects.add(entry);");
                    _builder.newLine();
                    _builder.append("\t\t");
                    _builder.append("hashmapList.put(\"");
                    String _name_33 = ((RetypeObjectMutator)e).getName();
                    _builder.append(_name_33, "\t\t");
                    _builder.append("\", listEObjects);");
                    _builder.newLineIfNotEmpty();
                  }
                }
              }
            }
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    {
      String _name_34 = e.getName();
      boolean _tripleNotEquals_4 = (_name_34 != null);
      if (_tripleNotEquals_4) {
        {
          if ((e instanceof SelectSampleMutator)) {
            _builder.append("\t\t");
            _builder.append("if (mutated instanceof List<?>) {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("List<EObject> mutObjects = ((SelectSampleMutator) mut).getObjects();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("List<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>> listEObjects = null;");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("if (hashmapList.get(\"");
            String _name_35 = ((SelectSampleMutator)e).getName();
            _builder.append(_name_35, "\t\t\t");
            _builder.append("\") != null) {");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("listEObjects = hashmapList.get(\"");
            String _name_36 = ((SelectSampleMutator)e).getName();
            _builder.append(_name_36, "\t\t\t\t");
            _builder.append("\");");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("else {");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t\t");
            _builder.append("listEObjects = new ArrayList<SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>>>();");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("}");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("SimpleEntry<Resource, List<EPackage>> resourceEntry = new SimpleEntry(mut.getModel(), mut.getMetaModel());");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("SimpleEntry<EObject, SimpleEntry<Resource, List<EPackage>>> entry = new SimpleEntry(mut.getObject(), resourceEntry);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("listEObjects.add(entry);");
            _builder.newLine();
            _builder.append("\t\t");
            _builder.append("\t");
            _builder.append("hashmapList.put(\"");
            String _name_37 = ((SelectSampleMutator)e).getName();
            _builder.append(_name_37, "\t\t\t");
            _builder.append("\", listEObjects);");
            _builder.newLineIfNotEmpty();
            _builder.append("\t\t");
            _builder.append("}");
            _builder.newLine();
          }
        }
      }
    }
    {
      if ((((e instanceof SelectObjectMutator) == false) && ((e instanceof SelectSampleMutator) == false))) {
        _builder.append("\t\t");
        _builder.append("String mutatorPath = mutPath + \"/Output\" + i + \"_\" + j + \"_\" + k[0] + \"_");
        _builder.append(this.nMethod, "\t\t");
        _builder.append(".model\";");
        _builder.newLineIfNotEmpty();
        _builder.append("\t\t");
        _builder.append("ModelManager.saveOutModel(model, mutatorPath);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("if (mutPaths.contains(mutatorPath) == false) {");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("mutPaths.add(mutatorPath);");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("}");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.append("AppMutation appMut = ");
    _builder.append(this.registryMethodName, "\t\t");
    _builder.append("(mut, hmMutator, seed, mutPaths, packages);");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("if (appMut != null) {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("muts.getMuts().add(appMut);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder;
  }
}
