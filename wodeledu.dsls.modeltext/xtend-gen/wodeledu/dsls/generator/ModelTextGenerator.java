/**
 * generated by Xtext 2.30.0
 */
package wodeledu.dsls.generator;

import com.google.common.collect.Iterables;
import modeltext.IdentifyElements;
import org.eclipse.core.resources.IProject;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import wodel.utils.manager.ModelManager;
import wodel.utils.manager.ProjectUtils;
import wodeledu.dsls.ModelTextUtils;

/**
 * @author Pablo Gomez-Abajo - modelText code generator.
 * 
 * Serialization of the modelText code into an EMF XMI model
 */
@SuppressWarnings("all")
public class ModelTextGenerator extends AbstractGenerator {
  protected IProject project = null;

  private String fileName;

  private String path;

  private String xmiFileName;

  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    this.project = ProjectUtils.getProject();
    this.path = ProjectUtils.getProject().getLocation().toFile().getPath();
    Iterable<IdentifyElements> _filter = Iterables.<IdentifyElements>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), IdentifyElements.class);
    for (final IdentifyElements e : _filter) {
      {
        this.fileName = resource.getURI().lastSegment();
        String xTextFileName = ((("file:/" + this.path) + "/src/") + this.fileName);
        String _outputFolder = ModelManager.getOutputFolder();
        String _plus = ((("file:/" + this.path) + "/") + _outputFolder);
        String _plus_1 = (_plus + "/");
        String _replaceAll = this.fileName.replaceAll(".modeltext", "_modeltext.model");
        String _plus_2 = (_plus_1 + _replaceAll);
        this.xmiFileName = _plus_2;
        ModelTextUtils.serialize(xTextFileName, this.xmiFileName);
      }
    }
  }
}
