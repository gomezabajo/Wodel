/*
 * generated by Xtext 2.13.0
 */
package wodel.dsls.generator

import com.google.inject.Inject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.core.runtime.Platform

/**
 * @author Pablo Gomez-Abajo - Main Wodel code generator.
 * 
 * It calls WodelMutatorGenerator to generate the Java code for the mutations,
 * and WodelUseGenerator to generate the USE code for the seeds synthesizer. 
 */
public class WodelGenerator extends AbstractGenerator {
	
	@Inject WodelDynamicMutatorGenerator mutatorDynamicGenerator
	@Inject WodelStandaloneMutatorGenerator mutatorStandaloneGenerator
	@Inject WodelUseGenerator useGenerator
	@Inject WodelDynamicAPIGenerator dynamicApiGenerator
	@Inject WodelStandaloneAPIGenerator standaloneApiGenerator

	override doGenerate(Resource input, IFileSystemAccess2 fsa, IGeneratorContext context) {
		mutatorDynamicGenerator.doGenerate(input, fsa, context)
		mutatorStandaloneGenerator.doGenerate(input, fsa, context)
		try {
			var boolean seedModelSynthesis = Platform.getPreferencesService().getBoolean("wodel.dsls.Wodel", "Seed model synthesis", false, null);
			if (seedModelSynthesis == true) {
				useGenerator.doGenerate(input, fsa, context)
			}
		} catch (Exception ex) {}
		dynamicApiGenerator.doGenerate(input, fsa, context)
		standaloneApiGenerator.doGenerate(input, fsa, context)
	}
}
